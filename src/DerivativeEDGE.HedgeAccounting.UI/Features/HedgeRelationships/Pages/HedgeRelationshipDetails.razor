<PageTitle>Hedge Relationships</PageTitle>

@if (IsLoadingHedgeRelationship)
{
    <div class="d-flex justify-content-center align-items-center h-[400px]">
        <SfSpinner @bind-Visible="@IsLoadingHedgeRelationship" Size="40" Type="SpinnerType.Tailwind" Label="Loading Hedge Relationship..." />
    </div>
}
else if (IsSavingHedgeRelationship)
{
    <div class="d-flex justify-content-center align-items-center h-[400px]">
        <SfSpinner @bind-Visible="@IsSavingHedgeRelationship" Size="40" Type="SpinnerType.Tailwind" Label="Saving Hedge Relationship..." />
    </div>
}
else if (HedgeRelationship == null)
{
    <div class="flex items-start m-6">
        <p>Failed to load Hedge Relationship. Please refresh the page or contact support.</p>
    </div>
}
else if (HedgeRelationship != null && !IsLoadingHedgeRelationship)
{
    @if (ValidationErrors != null && ValidationErrors.Any())
    {
        <div class="px-2.5 py-0">
            <SfMessage Severity="MessageSeverity.Error">
                <div class="validation-header">Please fix the following errors:</div>
                <ul>
                    @foreach (var error in ValidationErrors)
                    {
                        <li>@error</li>
                    }
                </ul>
            </SfMessage>
        </div>
    }
    <EditForm Model="HedgeRelationship" Context="mainFormContext">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <HedgeRelationshipHeader 
            HedgeRelationshipId="@HedgeRelationshipId"
            HedgeStateText="@HedgeRelationship.HedgeStateText"
            WorkflowItems="@WorkflowItems"
            OnWorkflowAction="@HandleWorkflowAction" />

        <HedgeRelationshipActionBar 
            IsSaving="@IsSavingHedgeRelationship"
            IsSaveDisabled="@IsSaveDisabled()"
            IsGeneratingInceptionPackage="@IsGeneratingInceptionPackage"
            IsPreviewInceptionPackageDisabled="@IsPreviewInceptionPackageDisabled()"
            IsRunningRegression="@IsRunningRegression"
            IsRegressionDisabled="@IsRegressionDisabled()"
            IsBackloadDisabled="@IsBackloadDisabled()"
            @bind-CurveDate="@CurveDate"
            ShowHrSpecAndChecksButton="@HedgeRelationship.ShowHrSpecAndChecksButton"
            IsDownloadingSpecsAndChecks="@IsDownloadingSpecsAndChecks"
            OnSaveClick="@SaveHedgeRelationshipAsync"
            OnCancelClick="@CancelButtonHandler"
            OnPreviewInceptionPackageClick="@GenerateInceptionPackageAsync"
            OnRunRegressionClick="@RunRegressionAsync"
            OnBackloadClick="@BackloadAsync"
            OnDownloadSpecsAndChecksClick="@DownloadSpecsAndChecksAsync" />

        <HedgeRelationshipInfoSection
            @bind-HedgeRelationship="@HedgeRelationship"
            IsLoadingClients="@IsLoadingClients"
            IsLoadingEntities="@IsLoadingEntities"
            AvailableClients="@AvailableClients"
            AvailableEntities="@AvailableEntities"
            TemplateDisplayName="@TemplateDisplayName"
            IsNewHedgeDocumentTemplate="@IsNewHedgeDocumentTemplate"
            BasicTools="@BasicTools"
            BenchMarkLabel="@BenchMarkLabel"
            CanEditFairValueMethod="@CanEditFairValueMethod()"
            IsHedgingInstrumentStructureDisabled="@IsHedgingInstrumentStructureDisabled()"
            HedgingInstrumentStructureOptions="@HedgeRelationshipDataHelper.GetHedgingInstrumentStructureOptions()"
            @bind-DesignationDate="@DesignationDate"
            @bind-DeDesignationDate="@DeDesignationDate"
            CanEditCheckbox="@CanEditCheckbox()"
            CanEditPreIssuanceHedge="@CanEditPreIssuanceHedge()"
            CanEditPortfolioLayerMethod="@CanEditPortfolioLayerMethod()"
            EffectivenessChartData="@EffectivenessChartData"
            OnClientValueChange="@HandleClientValueChangeAsync"
            OnIsAnOptionHedgeChanged="@OnIsAnOptionHedgeChanged"
            OnOffMarketChanged="@OnOffMarketChanged"
            OnExcludeIntrinsicValueChanged="@OnExcludeIntrinsicValueChanged"
            OnSelectTemplateClick="@(() => RedirectToHedgeDocumentService("/hedgeaccountingapp/gallery-hrdocument?"))"
            OnPreviewDocumentLegacyClick="@PreviewHedgeDocumentObjective"
            OnPreviewDocumentNewClick="@(() => RedirectToHedgeDocumentService("/hedgeaccountingapp/preview-hrdocument?"))"
            OnEditDocumentClick="@(() => RedirectToHedgeDocumentService("/hedgeaccountingapp/edit-hrdocument?"))" />
        
        <div class="my-2.5 mx-5 flex justify-between">
            <div class="flex gap-2.5 flex-wrap items-center"></div>
            <div class="flex gap-2.5 flex-wrap items-center">
                <div class="dp-buttons">
                    <SfDropDownButton CssClass="dp-dropdown-menu-style dropdown-menu-primary" Content="New">
                        <DropDownButtonEvents ItemSelected="NewMenuOnItemSelected" />
                        <DropDownMenuItems>
                            @if (!HedgeRelationship.IsAnOptionHedge)
                            {
                                <DropDownMenuItem Text="Amortization"></DropDownMenuItem>
                                <DropDownMenuItem Text="Option Amortization"></DropDownMenuItem>
                            }
                            @if (HedgeRelationship.IsAnOptionHedge)
                            {
                                <DropDownMenuItem Text="Option Amortization"></DropDownMenuItem>
                            }
                        </DropDownMenuItems>
                    </SfDropDownButton>
                </div>
            </div>
        </div>

        <SfTab @ref="hedgerelationshiptabRef" CssClass="dp-tabs default-tab">
            <TabAnimationSettings>
                <TabEvents></TabEvents>
                <TabAnimationPrevious Effect="@AnimationEffect.None" />
                <TabAnimationNext Effect="@AnimationEffect.None" />
            </TabAnimationSettings>
            <TabEvents Selected="OnSelectedTab"></TabEvents>
            <TabItems>
                <TabItem>
                    <ChildContent>
                        <TabHeader Text="Instruments and Analysis"></TabHeader>
                    </ChildContent>
                    <ContentTemplate>
                        <InstrumentAnalysisTab @ref="instrumentAnalysisTabRef" @bind-HedgeRelationship="@HedgeRelationship" IsDpiUser="@IsDpiUser" />
                    </ContentTemplate>
                </TabItem>
                <TabItem>
                    <ChildContent>
                        <TabHeader Text="Test Results"></TabHeader>
                    </ChildContent>
                    <ContentTemplate>
                        <TestResultsTab @ref="testResultsTabRef"
                                        @bind-HedgeRegressionBatches="@HedgeRelationship.HedgeRegressionBatches"
                                        LatestHedgeRegressionBatch="@HedgeRelationship.LatestHedgeRegressionBatch"
                                        @bind-HedgeRelationship="@HedgeRelationship" />
                    </ContentTemplate>
                </TabItem>
                <TabItem>
                    <ChildContent>
                        <TabHeader Text="Accounting Details"></TabHeader>
                    </ChildContent>
                    <ContentTemplate>
                        <AccountingDetailsTab @bind-HedgeRelationship="@HedgeRelationship" />
                    </ContentTemplate>
                </TabItem>
                <TabItem>
                    <ChildContent>
                        <TabHeader Text="Amortization"></TabHeader>
                    </ChildContent>
                    <ContentTemplate>
                        <AmortizationTab @bind-HedgeRelationshipOptionTimeValueAmorts="@HedgeRelationship.HedgeRelationshipOptionTimeValueAmorts" 
                                        OnEditAmortization="@HandleEditAmortization"
                                        OnDeleteAmortization="@HandleDeleteAmortization"
                                        OnDownloadExcelAmortization="@HandleDownloadExcelAmortization" />
                    </ContentTemplate>
                </TabItem>
                <TabItem>
                    <ChildContent>
                        <TabHeader Text="History"></TabHeader>
                    </ChildContent>
                    <ContentTemplate>
                        <HedgeRelationshipHistoryTab @bind-HedgeRelationshipActivities="@HedgeRelationship.HedgeRelationshipActivities" />
                    </ContentTemplate>
                </TabItem>
                <TabItem>
                    <ChildContent>
                        <TabHeader Text="Log"></TabHeader>
                    </ChildContent>
                    <ContentTemplate>
                        <HedgeRelationshipLogsTab @bind-HedgeRegressionBatches="@HedgeRelationship.HedgeRegressionBatches" />
                    </ContentTemplate>
                </TabItem>
                <TabItem Visible="@(HedgeRelationship.IsAnOptionHedge && HedgeRelationship.HedgeState != DerivativeEDGEHAEntityEnumHedgeState.Dedesignated)">
                    <ChildContent>
                        <TabHeader Text="Option Amortization"></TabHeader>
                    </ChildContent>
                    <ContentTemplate>
                        <OptionAmortizationTab @bind-HedgeRelationshipOptionTimeValues="@HedgeRelationship.HedgeRelationshipOptionTimeValues"
                                              OnEditOptionAmortization="@HandleEditOptionAmortization"
                                              OnDeleteOptionAmortization="@HandleDeleteOptionAmortization"
                                              OnDownloadExcelOptionAmortization="@HandleDownloadExcelOptionAmortization" />
                    </ContentTemplate>
                </TabItem>
            </TabItems>
        </SfTab>

        <AmortizationDialog Visible="@IsAmortizationModal"
                            VisibleChanged="@((value) => OpenModal = value ? MODAL_AMORTIZATION : string.Empty)"
                            AmortizationModel="@AmortizationModel"
                            HedgeRelationship="@HedgeRelationship"
                            AmortizationGLAccounts="@AmortizationGLAccounts"
                            AmortizationContraAccounts="@AmortizationContraAccounts"
                            FinancialCenterOptions="@AvailableFinancialCenters"
                            PaymentFrequencyOptions="@AvailablePaymentFrequencies"
                            DayCountConvOptions="@AvailableDayCountConventions"
                            PayBusDayConvOptions="@AvailablePayBusDayConventions"
                            OnAmortizationSaved="@OnAmortizationSaved" />

        <OptionAmortizationDialog Visible="@IsOptionAmortizationModal"
                                  VisibleChanged="@((value) => OpenModal = value ? MODAL_OPTION_AMORTIZATION : string.Empty)"
                                  OptionAmortizationModel="@OptionAmortizationModel"
                                  HedgeRelationship="@HedgeRelationship"
                                  IsAnOptionHedge="@HedgeRelationship.IsAnOptionHedge"
                                  AmortizationGLAccounts="@AmortizationGLAccounts"
                                  AmortizationContraAccounts="@AmortizationContraAccounts"
                                  AmortizationMethodOptions="@HedgeRelationshipDataHelper.GetAmortizationMethodOptions()"
                                  OnOptionAmortizationSaved="@OnOptionAmortizationSaved" />

        <HedgeDocumentPreviewDialog Visible="@IsHedgeDocumentPreviewModal"
                                    VisibleChanged="@((value) => OpenModal = value ? MODAL_HEDGE_DOCUMENT_PREVIEW : string.Empty)"
                                    HedgeDocumentContent="@HedgeRelationship?.Objective" />

        <DeDesignateDialog Visible="@IsDeDesignateModal"
                           VisibleChanged="@((value) => OpenModal = value ? MODAL_DEDESIGNATE : string.Empty)"
                           @bind-DedesignationReason="@DedesignationReason"
                           OnReasonChanged="@OnDeDesignateReasonChanged"
                           @bind-DedesignationDate="@DedesignationDateDialog"
                           @bind-CashPaymentType="@CashPaymentType"
                           @bind-Payment="@DedesignatePayment"
                           Accrual="@DedesignateAccrual"
                           BasisAdjustment="@BasisAdjustment"
                           BasisAdjustmentBalance="@BasisAdjustmentBalance"
                           ShowBasisAdjustmentBalance="@ShowBasisAdjustmentBalance"
                           @bind-TimeValuesStartDate="@DedesignateTimeValuesStartDate"
                           @bind-TimeValuesEndDate="@DedesignateTimeValuesEndDate"
                           @bind-HedgedExposureExist="@HedgedExposureExist"
                           HedgeType="@HedgeRelationship?.HedgeType.ToString()"
                           IsShortcut="@(HedgeRelationship?.Shortcut ?? false)"
                           UserMessage="@DedesignateUserMessage"
                           IsError="@DedesignateIsError"
                           IsDeDesignateDisabled="@IsDeDesignateDisabled"
                           OnDeDesignated="@OnDeDesignateConfirmed" />

        <ReDesignateDialog Visible="@IsReDesignateModal"
                           VisibleChanged="@((value) => OpenModal = value ? MODAL_REDESIGNATE : string.Empty)"
                           RedesignationDate="@RedesignationDate"
                           TimeValuesStartDate="@RedesignateTimeValuesStartDate"
                           TimeValuesEndDate="@RedesignateTimeValuesEndDate"
                           Payment="@RedesignatePayment"
                           PaymentFrequency="@RedesignatePaymentFrequency"
                           DayCountConv="@RedesignateDayCountConv"
                           PayBusDayConv="@RedesignatePayBusDayConv"
                           AdjustedDates="@RedesignateAdjustedDates"
                           MarkAsAcquisition="@MarkAsAcquisition"
                           IsDocTemplateFound="@IsDocTemplateFound"
                           AvailablePaymentFrequencies="@AvailablePaymentFrequencies"
                           AvailableDayCountConventions="@AvailableDayCountConventions"
                           AvailablePayBusDayConventions="@AvailablePayBusDayConventions"
                           OnReDesignated="@OnReDesignateConfirmed" />
    </EditForm>
}