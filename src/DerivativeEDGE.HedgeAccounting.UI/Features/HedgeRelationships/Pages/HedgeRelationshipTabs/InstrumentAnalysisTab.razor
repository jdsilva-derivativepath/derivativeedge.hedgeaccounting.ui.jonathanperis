<div class="hedge-grid-container">
    <div class="action-bar-container">
        <div class="left-section"></div>
        <div class="right-section">
            <div class="dp-buttons">
                <SfButton CssClass="button-secondary button-default" Content="Select Existing Trade" OnClick='() => SelectExistingTradeHandler("HedgeItem")' />
                <SfDropDownButton id="dp-dropdown-menu-style" CssClass="dp-dropdown-menu-style dropdown-menu-secondary" Content="New Trade">
                    <DropDownButtonEvents ItemSelected="OnNewTradeMenuItemSelected" />
                    <DropDownMenuItems>
                        @foreach (var item in MenuItems)
                        {
                            <DropDownMenuItem Text="@item.Text" Id="@item.Id"></DropDownMenuItem>
                        }
                    </DropDownMenuItems>
                </SfDropDownButton>
            </div>
        </div>
    </div>
    <DefaultGrid DataSource="@HedgedItems"
                 TRowItem="DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM"
                 Height="100%"
                 AllowPaging="false"
                 AllowSorting="true"
                 AllowGrouping="false"
                 AllowFiltering="false"
                 AllowSelection="false"
                 EnableVirtualization="false"
                 EnableGlobalSearch="true"
                 ShowColumnMenu="false"
                 ShowToolBar="false"
                 ShowExcelExportButton="false"
                 ShowColumnPickerButton="false"
                 OnDataBound="@OnHedgedItemChanged"
                 OnRowDataBound="@OnHedgedItemChanged">
        <GridColumns>
            <GridColumn Field="@nameof(DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM.ItemID)" HeaderText="Hedged Item ID" Width="160" />
            <GridColumn Field="@nameof(DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM.Description)" HeaderText="Description" ClipMode="ClipMode.EllipsisWithTooltip" />
            <GridColumn Field="@nameof(DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM.Notional)" HeaderText="Notional" HeaderTextAlign="TextAlign.Left" TextAlign="TextAlign.Right" Width="200">
                <Template>
                    @{
                        var model = (DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM)context;
                    }
                    <span class="@(model.Notional > 0 ? "" : "negative-numbers")">
                        @string.Format("{0:$#,##0.00;($#,##0.00)}", model.Notional)
                    </span>
                </Template>
            </GridColumn>
            <GridColumn Field="@nameof(DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM.Rate)" HeaderText="Rate" HeaderTextAlign="TextAlign.Left" TextAlign="TextAlign.Right" Width="120">
                <Template>
                    @{
                        var model = (DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM)context;
                    }
                    <span>
                        @string.Format("{0:0.00000%}", model.Rate)
                    </span>
                </Template>
            </GridColumn>
            <GridColumn Field="@nameof(DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM.Spread)" HeaderText="Spread" HeaderTextAlign="TextAlign.Left" TextAlign="TextAlign.Right" Width="120">
                <Template>
                    @{
                        var model = (DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM)context;
                    }
                    <span>
                        @string.Format("{0:0.000}bps", model.Spread * 10000)
                    </span>
                </Template>
            </GridColumn>
            <GridColumn Field="@nameof(DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM.EffectiveDate)" HeaderText="Start Date" Width="160" />
            <GridColumn Field="@nameof(DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM.MaturityDate)" HeaderText="Maturity Date" Width="160" />
            <GridColumn Field="@nameof(DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM.ItemStatusText)" HeaderText="Trade Status" Width="160" />
            <GridColumn HeaderText="Action" TextAlign="TextAlign.Center" Width="80" Freeze="FreezeDirection.Right" IsFrozen="true">
                <Template>
                    @if (context != null)
                    {
                        var model = (DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM)context;
                        <i class="fa-solid fa-trash-can" style="cursor: pointer;" @onclick="() => RemoveHedgedItem(model)" title="Remove item"></i>
                    }
                </Template>
            </GridColumn>
        </GridColumns>
    </DefaultGrid>
</div>
<div class="hedge-grid-container">
    <div class="action-bar-container">
        <div class="left-section"></div>
        <div class="right-section">
            <div class="dp-buttons">
                <SfButton CssClass="button-secondary button-default" Content="Select Existing Trade" OnClick='() => SelectExistingTradeHandler("HedgingItem")' />
                <SfDropDownButton CssClass="dp-dropdown-menu-style dropdown-menu-secondary" Content="New Trade">
                    <DropDownButtonEvents ItemSelected="OnNewTradeMenuItemSelected" />
                    <DropDownMenuItems>
                        @foreach (var item in MenuItems)
                        {
                            <DropDownMenuItem Text="@item.Text" Id="@item.Id"></DropDownMenuItem>
                        }
                    </DropDownMenuItems>
                </SfDropDownButton>
            </div>
        </div>
    </div>
    <DefaultGrid DataSource="@HedgingItems"
                 TRowItem="DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM"
                 Height="100%"
                 AllowPaging="false"
                 AllowSorting="true"
                 AllowGrouping="false"
                 AllowFiltering="false"
                 AllowSelection="false"
                 EnableVirtualization="false"
                 EnableGlobalSearch="true"
                 ShowColumnMenu="false"
                 ShowToolBar="false"
                 ShowExcelExportButton="false"
                 ShowColumnPickerButton="false"
                 OnDataBound="@OnHedgingItemChanged"
                 OnRowDataBound="@OnHedgingItemChanged">
        <GridColumns>
            <GridColumn Field="@nameof(DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM.ItemID)" HeaderText="Hedging Item ID" Width="160" />
            <GridColumn Field="@nameof(DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM.Description)" HeaderText="Description" ClipMode="ClipMode.EllipsisWithTooltip" />
            <GridColumn Field="@nameof(DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM.Notional)" HeaderText="Notional" HeaderTextAlign="TextAlign.Left" TextAlign="TextAlign.Right" Width="200">
                <Template>
                    @{
                        var model = (DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM)context;
                    }
                    <span class="@(model.Notional > 0 ? "" : "negative-numbers")">
                        @string.Format("{0:$#,##0.00;($#,##0.00)}", model.Notional)
                    </span>
                </Template>
            </GridColumn>
            <GridColumn Field="@nameof(DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM.Rate)" HeaderText="Rate" HeaderTextAlign="TextAlign.Left" TextAlign="TextAlign.Right" Width="120">
                <Template>
                    @{
                        var model = (DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM)context;
                    }
                    <span>
                        @string.Format("{0:0.00000%}", model.Rate)
                    </span>
                </Template>
            </GridColumn>
            <GridColumn Field="@nameof(DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM.Spread)" HeaderText="Spread" HeaderTextAlign="TextAlign.Left" TextAlign="TextAlign.Right" Width="120">
                <Template>
                    @{
                        var model = (DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM)context;
                    }
                    <span>
                        @string.Format("{0:0.000}bps", model.Spread * 10000)
                    </span>
                </Template>
            </GridColumn>
            <GridColumn Field="@nameof(DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM.EffectiveDate)" HeaderText="Start Date" Width="160" />
            <GridColumn Field="@nameof(DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM.MaturityDate)" HeaderText="Maturity Date" Width="160" />
            <GridColumn Field="@nameof(DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM.ItemStatusText)" HeaderText="Trade Status" Width="160" />
            <GridColumn HeaderText="Action" TextAlign="TextAlign.Center" Width="80" Freeze="FreezeDirection.Right" IsFrozen="true">
                <Template>
                    @if (context != null)
                    {
                        var model = (DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM)context;
                        <i class="fa-solid fa-trash-can" style="cursor: pointer;" @onclick="() => RemoveHedgingItem(model)" title="Remove item"></i>
                    }
                </Template>
            </GridColumn>
        </GridColumns>
    </DefaultGrid>
</div>

<div class="col-xs-12">
    <div class="details-section-header">
        <h5>EFFECTIVENESS</h5>
    </div>
    <div class="details-section-body">
        <div class="dropdown-column">
            <div class="dropdown-column">
                <div class="form-group custom-dropdown-css dp-inputs">
                    <span class="input-label">Prospective Assessment Method</span>
                    <SfDropDownList TValue="long?"
                                    CssClass="dropdown-input"
                                    Enabled="@IsEffectivenessMethodEnabled"
                                    TItem="DropdownModel"
                                    Placeholder="Select"
                                    @bind-Value="HedgeRelationship.ProspectiveEffectivenessMethodID"
                                    DataSource="@GetDropdownDatasource("assessmentmethod")">
                        <DropDownListEvents TValue="long?" TItem="DropdownModel" ValueChange="@OnEffectivenessSettingsChanged" />
                        <DropDownListFieldSettings Text="Text" Value="ID" />
                    </SfDropDownList>
                </div>
                <div class="form-group custom-dropdown-css dp-inputs">
                    <span class="input-label">Retrospective Assessment Method</span>
                    <SfDropDownList TValue="long?"
                                    CssClass="dropdown-input"
                                    Enabled="@IsEffectivenessMethodEnabled"
                                    TItem="DropdownModel"
                                    Placeholder="Retrospective Assessment Method"
                                    @bind-Value="HedgeRelationship.RetrospectiveEffectivenessMethodID"
                                    DataSource="@GetDropdownDatasource("assessmentmethod")">
                        <DropDownListEvents TValue="long?" TItem="DropdownModel" ValueChange="@OnEffectivenessSettingsChanged" />
                        <DropDownListFieldSettings Text="Text" Value="ID" />
                    </SfDropDownList>
                </div>
            </div>
            <div class="dropdown-row">
                <div class="form-group custom-small-dropdown dp-inputs">
                    <span class="input-label">Report Currency</span>
                    <SfDropDownList TValue="string"
                                    CssClass="dropdown-input"
                                    Enabled="@IsEffectivenessMethodEnabled"
                                    TItem="HedgeCurrencyDropdownItem"
                                    Placeholder="Select"
                                    @bind-Value="HedgeRelationship.ReportCurrency"
                                    DataSource="@Currency">
                        <DropDownListEvents TValue="string" TItem="HedgeCurrencyDropdownItem" ValueChange="@OnEffectivenessSettingsChanged" />
                        <DropDownListFieldSettings Text="LongName" Value="ShortName" />
                    </SfDropDownList>
                </div>
                <div class="form-group custom-small-dropdown dp-inputs">
                    <span class="input-label">Report Frequency</span>
                    <SfDropDownList TValue="DerivativeEDGEHAEntityEnumReportingFrequency?"
                                    CssClass="dropdown-input"
                                    Enabled="@IsEffectivenessMethodEnabled"
                                    TItem="ReportFrequencyDropdownModel"
                                    Placeholder="Select"
                                    Value="HedgeRelationship.ReportingFrequency"
                                    DataSource="@GetReportFrequencyOptions()">
                        <DropDownListEvents TValue="DerivativeEDGEHAEntityEnumReportingFrequency?" TItem="ReportFrequencyDropdownModel" ValueChange="@OnReportingFrequencyChanged" />
                        <DropDownListFieldSettings Text="Text" Value="Value" />
                    </SfDropDownList>
                </div>
            </div>
        </div>
        <div class="custom-seperator"></div>
        <div class="dropdown-column">
            <div class="dropdown-column">
                <div class="dropdown-column">
                    <h5>Regression Settings:</h5>
                    <div class="dropdown-row">
                        <div class="custom-small-dropdown dp-inputs">
                            <span class="input-label">Period Count</span>
                            <SfNumericTextBox CssClass="input-textbox" Placeholder="Period Count" TValue="int" Enabled="@IsEffectivenessMethodEnabled" @bind-Value="HedgeRelationship.Observation" />
                        </div>
                        <div class="form-group custom-small-dropdown dp-inputs">
                            <span class="input-label">@HedgeRelationship.PeriodSize</span>
                            <SfDropDownList TValue="DerivativeEDGEHAEntityEnumPeriodSize"
                                            CssClass="dropdown-input"
                                            Enabled="@IsEffectivenessMethodEnabled"
                                            TItem="DropdownModel"
                                            Placeholder="Select"
                                            @bind-Value="HedgeRelationship.PeriodSize"
                                            DataSource="@GetDropdownDatasource("periodsize")">
                                <DropDownListEvents TValue="DerivativeEDGEHAEntityEnumPeriodSize" TItem="DropdownModel" ValueChange="@OnEffectivenessSettingsChanged" />
                                <DropDownListFieldSettings Text="Text" Value="Value" />
                            </SfDropDownList>
                        </div>
                    </div>
                </div>
                <div class="dropdown-column">
                    <h5>Regression:</h5>
                    <div class="section-row">
                        <div class="space-x-4 dp-inputs">
                            <SfRadioButton CssClass="input-radiobutton"
                                           Label="Cumulative Changes"
                                           Name="regressionType"
                                           Value="cumulative"
                                           Disabled="@(!IsRegressionEnabled)"
                                           @bind-Checked="@RegressionType" />
                            <SfRadioButton CssClass="input-radiobutton"
                                           Label="Periodic Changes"
                                           Name="regressionType"
                                           Value="periodic"
                                           Disabled="@(!IsRegressionEnabled)"
                                           @bind-Checked="@RegressionType" />
                            <SfCheckBox CssClass="input-checkbox" @bind-Checked="HedgeRelationship.EOM" Label="End Of Month" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<DpFullscreenModal ShowModal="IsSelectExistingTradeModal" HeaderText="@string.Concat(ExistingTradeModalHeaderText, " Item: Select Existing Trade")">
    <Content>
        <div class="select-existing-modal-container">
            @if (IsLoadingTradeData)
            {
                <div class="d-flex justify-content-center align-items-center" style="height: 400px;">
                    <SfSpinner @bind-Visible="@IsLoadingTradeData" Size="40" Type="SpinnerType.Tailwind" Label="Loading Trade Data..." />
                </div>
            }
            else
            {
                <div style="height: calc(100vh - 15.75rem)">
                    <DefaultGrid DataSource="@SelectExistingTrade"
                                 TRowItem="TradeDto"
                                 Height="100%"
                                 AllowPaging="true"
                                 AllowSorting="true"
                                 AllowGrouping="false"
                                 AllowFiltering="false"
                                 AllowSelection="false"
                                 EnableVirtualization="false"
                                 EnableGlobalSearch="true"
                                 ShowColumnMenu="false"
                                 ShowExcelExportButton="false"
                                 ShowColumnPickerButton="false"
                                 ShowToolBar="true">
                        <GridColumns>
                            <GridColumn Field="@nameof(TradeDto.Name)" HeaderText="Deal Name" Width="160" />
                            <GridColumn Field="@nameof(TradeDto.CounterpartyName)" HeaderText="Counterparty Name" Width="200" />
                            <GridColumn Field="@nameof(TradeDto.TradeId)" HeaderText="DPI Id" Width="200" />

                            <GridColumn Field="@nameof(TradeDto.Notional)" HeaderText="Notional Amount" HeaderTextAlign="TextAlign.Left" TextAlign="TextAlign.Right" Width="200">
                                <Template>
                                    @{
                                        var tradeNotional = (TradeDto)context;
                                    }
                                    <span class="@(tradeNotional.Notional > 0 ? "" : "negative-numbers")">
                                        @string.Format("{0:$#,##0.00;($#,##0.00)}", tradeNotional.Notional)
                                    </span>
                                </Template>
                            </GridColumn>

                            <GridColumn Field="@nameof(TradeDto.SecurityType)" HeaderText="Deal Type" />
                            <GridColumn Field="@nameof(TradeDto.Description)" HeaderText="Description" ClipMode="ClipMode.EllipsisWithTooltip" />
                            <GridColumn Field="@nameof(TradeDto.EffectiveDate)" HeaderText="Effective Date" Width="160" />
                            <GridColumn Field="@nameof(TradeDto.MaturityDate)" HeaderText="Maturity Date" Width="160" />

                            <GridColumn HeaderText="Action" TextAlign="TextAlign.Center" Width="80" Freeze="FreezeDirection.Right" IsFrozen="true">
                                <Template>
                                    @if (context != null)
                                    {
                                        var tradeAction = (TradeDto)context;
                                        <i class="fa-solid fa-link" style="cursor: pointer;" @onclick="() => LinkTradeToHedging(tradeAction)" title="Link trade to hedging"></i>
                                    }
                                </Template>
                            </GridColumn>
                        </GridColumns>

                    </DefaultGrid>
                </div>
            }
        </div>
    </Content>
    <FooterContent>
        <div class="dp-buttons">
            <SfButton CssClass="button-link button-default" OnClick="CloseSelectExistingTradeModal" Content="Cancel"></SfButton>
        </div>
    </FooterContent>
</DpFullscreenModal>