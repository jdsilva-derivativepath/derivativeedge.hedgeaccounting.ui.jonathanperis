@* Three-card Information Section *@
@using DerivativeEDGE.HedgeAccounting.UI.Features.HedgeRelationships.Models

<div class="flex gap-4 justify-between items-stretch flex-wrap my-2.5 mx-5 bg-white shadow-sm">
    @* Left Card - Client/Entity/Description/Hedging Objective *@
    <div class="flex-1 min-w-[18.75rem] p-5 flex flex-col">
        <div class="flex-grow">
            <div class="flex gap-5 justify-between">
                <div class="flex-1">
                    <div class="form-group dp-inputs min-w-100">
                        <span class="input-label">Client</span>
                        <SfDropDownList TValue="long"
                        CssClass="dropdown-input"
                        Enabled="@(!IsLoadingClients)"
                        TItem="Client"
                        Placeholder="@(IsLoadingClients ? "Loading..." : "Select Client")"
                        @bind-Value="HedgeRelationship.ClientID"
                        DataSource="AvailableClients">
                            <DropDownListEvents TValue="long" TItem="Client" ValueChange="OnClientValueChange" />
                            <DropDownListFieldSettings Value="ClientId" Text="ClientName" />
                        </SfDropDownList>
                    </div>
                    <div class="form-group dp-inputs min-w-100">
                        <span class="input-label">Entity</span>
                        <SfDropDownList TValue="long"
                        CssClass="dropdown-input"
                        Enabled="@(!IsLoadingEntities && AvailableEntities?.Any() == true)"
                        TItem="DerivativeEDGEHAEntityLegalEntity"
                        Placeholder="@(IsLoadingEntities ? "Loading..." : "Select Entity")"
                        @bind-Value="@HedgeRelationship.BankEntityID"
                        DataSource="@AvailableEntities">
                            <DropDownListFieldSettings Value="Id" Text="Name" />
                        </SfDropDownList>
                    </div>
                    <div class="form-group dp-inputs min-w-100">
                        <span class="input-label">Description</span>
                        <SfTextBox CssClass="input-textbox" Placeholder="Description" @bind-Value="HedgeRelationship.Description" />
                    </div>
                    @if (!HedgeRelationship.IsCaarHedgeTemplate)
                    {
                        @* Legacy template system *@
                        @if (HedgeRelationship.HedgeState == DerivativeEDGEHAEntityEnumHedgeState.Draft)
                        {
                            <div class="form-group dp-inputs min-w-100">
                                <span class="input-label">Hedging Objective</span>
                            </div>
                            <div class="form-group dp-inputs min-w-100">
                                <span class="input-label">Template</span>
                                <SfDropDownList TValue="long?"
                                CssClass="dropdown-input flex-grow-1"
                                Enabled="true"
                                TItem="DropdownModel"
                                Placeholder="Template"
                                @bind-Value="HedgeRelationship.InceptionMemoTemplateID"
                                DataSource="@DropdownDataHelper.GetDropdownDatasource("hedgingobjective")">
                                    <DropDownListEvents TValue="long?" TItem="DropdownModel" />
                                    <DropDownListFieldSettings Text="Text" Value="ID" />
                                </SfDropDownList>
                            </div>
                            <div class="richtexteditorouter w-50 my-2">
                                <SfRichTextEditor EnableResize="true" CssClass="e-richtexteditor" @bind-Value="HedgeRelationship.Objective">
                                    <RichTextEditorToolbarSettings Items="@BasicTools" />
                                </SfRichTextEditor>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                <span class="input-label">Hedging Objective</span>
                            </div>
                            <div class="form-group dp-inputs min-w-100">
                                <span class="input-label">Template</span>
                                <SfTextBox CssClass="input-textbox"
                                Placeholder="Template"
                                Enabled="false"
                                @bind-Value="@TemplateDisplayName" />
                            </div>
                            <div class="dp-inputs min-w-100">
                                <SfTextBox CssClass="input-multiline"
                                Placeholder="Objective"
                                Enabled="false"
                                @bind-Value="HedgeRelationship.Objective" />
                            </div>
                        }
                    }
                    else
                    {
                        @* New CAAR template system *@
                        <div class="form-group">
                            <span class="input-label">@(IsNewHedgeDocumentTemplate ? "Hedge Documentation" : "Hedging Objective")</span>
                        </div>
                        @if (!IsNewHedgeDocumentTemplate)
                        {
                            @* Show legacy template dropdown when not using new templates *@
                            @if (HedgeRelationship.HedgeState == DerivativeEDGEHAEntityEnumHedgeState.Draft)
                            {
                                <div class="form-group dp-inputs min-w-100">
                                    <span class="input-label">Template</span>
                                    <SfDropDownList TValue="long?"
                                    CssClass="dropdown-input flex-grow-1"
                                    Enabled="true"
                                    TItem="DropdownModel"
                                    Placeholder="Template"
                                    @bind-Value="HedgeRelationship.InceptionMemoTemplateID"
                                    DataSource="@DropdownDataHelper.GetDropdownDatasource("hedgingobjective")">
                                        <DropDownListEvents TValue="long?" TItem="DropdownModel" />
                                        <DropDownListFieldSettings Text="Text" Value="ID" />
                                    </SfDropDownList>
                                </div>
                                <div class="richtexteditorouter w-50 my-2">
                                    <SfRichTextEditor EnableResize="true" CssClass="e-richtexteditor" @bind-Value="HedgeRelationship.Objective">
                                        <RichTextEditorToolbarSettings Items="@BasicTools" />
                                    </SfRichTextEditor>
                                </div>
                            }
                            else
                            {
                                <div class="form-group dp-inputs min-w-100">
                                    <span class="input-label">Template</span>
                                    <SfTextBox CssClass="input-textbox"
                                    Placeholder="Template"
                                    Enabled="false"
                                    @bind-Value="@TemplateDisplayName" />
                                </div>
                                <div class="dp-inputs min-w-100">
                                    <SfTextBox CssClass="input-multiline"
                                    Placeholder="Objective"
                                    Enabled="false"
                                    @bind-Value="HedgeRelationship.Objective" />
                                </div>
                            }
                        }
                        else
                        {
                            @* New hedge document template display *@
                            <div class="form-group dp-inputs min-w-100">
                                <SfTextBox CssClass="input-textbox"
                                Placeholder="None"
                                Enabled="false"
                                Value="@(HedgeRelationship.HedgeDocumentTemplateName ?? "None")" />
                            </div>
                            @if (!string.IsNullOrWhiteSpace(HedgeRelationship.HedgeDocumentTemplateDescription))
                            {
                                <div class="dp-inputs min-w-100">
                                    <SfTextBox CssClass="input-multiline"
                                    Placeholder="Description"
                                    Enabled="false"
                                    Value="@HedgeRelationship.HedgeDocumentTemplateDescription" />
                                </div>
                            }
                        }
                    }
                </div>
                <div class="flex-1">
                    <div class="form-group dp-inputs min-w-100">
                        <span class="input-label">Hedged Risk</span>
                        <SfDropDownList TValue="DerivativeEDGEHAEntityEnumHedgeRiskType"
                        CssClass="dropdown-input"
                        Enabled="true"
                        TItem="DropdownModel"
                        Placeholder="Hedged Risk"
                        @bind-Value="HedgeRelationship.HedgeRiskType"
                        DataSource="@DropdownDataHelper.GetDropdownDatasource("hedgedrisk")">
                            <DropDownListEvents TValue="DerivativeEDGEHAEntityEnumHedgeRiskType" TItem="DropdownModel" />
                            <DropDownListFieldSettings Text="Text" Value="Value" />
                        </SfDropDownList>
                    </div>
                    <div class="form-group dp-inputs min-w-100">
                        <span class="input-label">Hedged Direction</span>
                        <SfDropDownList TValue="DerivativeEDGEHAEntityEnumHedgeDirection"
                        CssClass="dropdown-input"
                        Enabled="true"
                        TItem="DropdownModel"
                        Placeholder="Hedged Direction"
                        @bind-Value="HedgeRelationship.HedgeDirection"
                        DataSource="@DropdownDataHelper.GetDropdownDatasource("hedgeddirection")">
                            <DropDownListEvents TValue="DerivativeEDGEHAEntityEnumHedgeDirection" TItem="DropdownModel" />
                            <DropDownListFieldSettings Text="Text" Value="Value" />
                        </SfDropDownList>
                    </div>
                    <div class="form-group dp-inputs min-w-100">
                        <span class="input-label">Hedged Type</span>
                        <SfDropDownList TValue="DerivativeEDGEHAEntityEnumHRHedgeType"
                        CssClass="dropdown-input"
                        Enabled="true"
                        TItem="DropdownModel"
                        Placeholder="Hedged Type"
                        @bind-Value="HedgeRelationship.HedgeType"
                        DataSource="@DropdownDataHelper.GetDropdownDatasource("hedgetype")">
                            <DropDownListEvents TValue="DerivativeEDGEHAEntityEnumHRHedgeType" TItem="DropdownModel" />
                            <DropDownListFieldSettings Text="Text" Value="Value" />
                        </SfDropDownList>
                    </div>
                    @if (HedgeRelationship.HedgeType == DerivativeEDGEHAEntityEnumHRHedgeType.FairValue)
                    {
                        <div class="form-group dp-inputs min-w-100">
                            <span class="input-label">Fair Value Method</span>
                            <SfDropDownList TValue="DerivativeEDGEHAEntityEnumFairValueMethod"
                            CssClass="dropdown-input"
                            Enabled="@CanEditFairValueMethod"
                            TItem="DropdownModel"
                            Placeholder="Fair Value Method"
                            @bind-Value="HedgeRelationship.FairValueMethod"
                            DataSource="@DropdownDataHelper.GetDropdownDatasource("fairvaluemethod")">
                                <DropDownListEvents TValue="DerivativeEDGEHAEntityEnumFairValueMethod" TItem="DropdownModel" />
                                <DropDownListFieldSettings Text="Text" Value="Value" />
                            </SfDropDownList>
                        </div>
                    }
                    <div class="form-group dp-inputs min-w-100">
                        <span class="input-label">Hedging Instrument Structure</span>
                        <SfDropDownList TValue="DerivativeEDGEHAEntityEnumHedgingInstrumentStructure"
                        CssClass="dropdown-input"
                        Enabled="@(!IsHedgingInstrumentStructureDisabled)"
                        TItem="HedgingInstrumentStructureOption"
                        Placeholder="Hedging Instrument Structure"
                        @bind-Value="HedgeRelationship.HedgingInstrumentStructure"
                        DataSource="@HedgingInstrumentStructureOptions">
                            <DropDownListEvents TValue="DerivativeEDGEHAEntityEnumHedgingInstrumentStructure" TItem="HedgingInstrumentStructureOption" />
                            <DropDownListFieldSettings Text="Text" Value="Value" />
                        </SfDropDownList>
                    </div>
                    @if (HedgeRelationship.IsCaarHedgeTemplate)
                    {
                        @* Select Template button - shown when no template is selected and using new template system *@
                        @if (HedgeRelationship?.HedgeState != DerivativeEDGEHAEntityEnumHedgeState.Dedesignated
                          && string.IsNullOrWhiteSpace(HedgeRelationship?.HedgeDocumentTemplateName)
                          && IsNewHedgeDocumentTemplate)
                        {
                            <div class="dp-buttons">
                                <SfButton CssClass="button-link button-default"
                                IconCss="fa fa-external-link"
                                OnClick="OnSelectTemplateClick"
                                Content="Select Template" />
                            </div>
                        }

                        @* Preview Document button for legacy templates (no new document template) *@
                        @if (string.IsNullOrWhiteSpace(HedgeRelationship?.HedgeDocumentTemplateName)
                          && !IsNewHedgeDocumentTemplate)
                        {
                            <div class="dp-buttons">
                                <SfButton CssClass="button-link button-default"
                                IconCss="fa fa-external-link"
                                Content="Preview Document"
                                OnClick="OnPreviewDocumentLegacyClick" />
                            </div>
                        }

                        @* Preview Document button for new templates *@
                        @if (!string.IsNullOrWhiteSpace(HedgeRelationship?.HedgeDocumentTemplateName)
                          && IsNewHedgeDocumentTemplate)
                        {
                            <div class="dp-buttons">
                                <SfButton CssClass="button-link button-default"
                                IconCss="fa fa-external-link"
                                Content="Preview Document"
                                OnClick="OnPreviewDocumentNewClick" />
                            </div>
                        }

                        @* Edit Document button - shown when a new template is selected *@
                        @if (!string.IsNullOrWhiteSpace(HedgeRelationship?.HedgeDocumentTemplateName))
                        {
                            <div class="dp-buttons">
                                <SfButton CssClass="button-link button-default"
                                IconCss="fa fa-external-link"
                                Content="Edit Document"
                                Disabled="@(HedgeRelationship?.HedgeState == DerivativeEDGEHAEntityEnumHedgeState.Dedesignated)"
                                OnClick="OnEditDocumentClick" />
                            </div>
                        }
                    }
                    else
                    {
                        @* For non-CAAR templates, show Preview Document button *@
                        <div class="dp-buttons">
                            <SfButton CssClass="button-link button-default"
                            IconCss="fa fa-external-link"
                            Content="Preview Document"
                            OnClick="OnPreviewDocumentLegacyClick" />
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    
    @* Middle Card - Risk Details *@
    <div class="flex-1 min-w-[18.75rem] p-5 flex flex-col">
        <div class="flex-grow">
            <div class="flex gap-5 justify-between">
                <div class="flex-1">
                    <div class="form-group dp-inputs min-w-100">
                        <span class="input-label">@BenchMarkLabel</span>
                        <SfDropDownList TValue="DerivativeEDGEHAEntityEnumBenchmark"
                        CssClass="dropdown-input"
                        Enabled="true"
                        TItem="DropdownModel"
                        Placeholder="@BenchMarkLabel"
                        @bind-Value="HedgeRelationship.Benchmark"
                        DataSource="@DropdownDataHelper.GetDropdownDatasource("contractualrate")">
                            <DropDownListEvents TValue="DerivativeEDGEHAEntityEnumBenchmark" TItem="DropdownModel" />
                            <DropDownListFieldSettings Text="Text" Value="Value" />
                        </SfDropDownList>
                    </div>
                    <div class="form-group dp-inputs min-w-100">
                        <span class="input-label">Notional</span>
                        <NumericHotKeys>
                            <SfNumericTextBox CssClass="input-numeric" Enabled="true" TValue="double" @bind-Value="HedgeRelationship.Notional" />
                        </NumericHotKeys>
                    </div>
                    <div class="form-group dp-inputs min-w-100">
                        <label class="input-label">Designation Date</label>
                        <SfDatePicker CssClass="calendar-datepicker"
                                      TValue="DateTime?"
                                      @bind-Value="DesignationDate"
                                      Format="MM/dd/yyyy"
                                      Placeholder="mm/dd/yyyy"
                                      ShowClearButton="true" />
                    </div>
                    <div class="form-group dp-inputs min-w-100">
                        <label class="input-label">De-designation Date</label>
                        <SfDatePicker CssClass="calendar-datepicker"
                                      TValue="DateTime?"
                                      @bind-Value="DeDesignationDate"
                                      Format="MM/dd/yyyy"
                                      Placeholder="mm/dd/yyyy"
                                      ShowClearButton="true" />
                    </div>
                    <div class="form-group dp-inputs min-w-100">
                        <span class="input-label">Hedged Item Type</span>
                        <SfDropDownList TValue="DerivativeEDGEHAEntityEnumHedgedItemType"
                        CssClass="dropdown-input"
                        Enabled="true"
                        TItem="DropdownModel"
                        Placeholder="Hedged Item Type"
                        @bind-Value="HedgeRelationship.HedgedItemType"
                        DataSource="@DropdownDataHelper.GetDropdownDatasource("hedgeditemtype")">
                            <DropDownListEvents TValue="DerivativeEDGEHAEntityEnumHedgedItemType" TItem="DropdownModel" />
                            <DropDownListFieldSettings Text="Text" Value="Value" />
                        </SfDropDownList>
                    </div>
                    <div class="form-group dp-inputs min-w-100">
                        <span class="input-label">Hedged Item</span>
                        <SfDropDownList TValue="DerivativeEDGEHAEntityEnumAssetLiability"
                        CssClass="dropdown-input"
                        Enabled="true"
                        TItem="DropdownModel"
                        Placeholder="Hedged Item"
                        @bind-Value="HedgeRelationship.AssetLiability"
                        DataSource="@DropdownDataHelper.GetDropdownDatasource("hedgeditem")">
                            <DropDownListEvents TValue="DerivativeEDGEHAEntityEnumAssetLiability" TItem="DropdownModel" />
                            <DropDownListFieldSettings Text="Text" Value="Value" />
                        </SfDropDownList>
                    </div>
                </div>
                <div class="flex-1">
                    @if (HedgeRelationship.HedgeState != DerivativeEDGEHAEntityEnumHedgeState.Dedesignated)
                    {
                        <div class="dp-inputs">
                            <SfCheckBox CssClass="input-checkbox"
                            Disabled="@(!CanEditCheckbox || HedgeRelationship.OffMarket)"
                            @bind-Checked="HedgeRelationship.IsAnOptionHedge"
                            Label="Hedge is an Option">
                                <CheckBoxEvents TChecked="bool" ValueChange="OnIsAnOptionHedgeChanged" />
                            </SfCheckBox>
                        </div>
                    }
                    <div class="dp-inputs">
                        <SfCheckBox CssClass="input-checkbox"
                        Disabled="@(!CanEditCheckbox || HedgeRelationship.IsAnOptionHedge)"
                        @bind-Checked="HedgeRelationship.OffMarket"
                        Label="Off-Market">
                            <CheckBoxEvents TChecked="bool" ValueChange="OnOffMarketChanged" />
                        </SfCheckBox>
                    </div>
                    @if (HedgeRelationship.HedgeState != DerivativeEDGEHAEntityEnumHedgeState.Dedesignated && HedgeRelationship.IsHAOptIntEnabled)
                    {
                        <div class="dp-inputs">
                            <SfCheckBox CssClass="input-checkbox"
                            Disabled="@(!CanEditCheckbox || !HedgeRelationship.IsAnOptionHedge)"
                            @bind-Checked="HedgeRelationship.ExcludeIntrinsicValue"
                            Label="Exclude Intrinsic Value">
                                <CheckBoxEvents TChecked="bool" ValueChange="OnExcludeIntrinsicValueChanged" />
                            </SfCheckBox>
                        </div>
                    }
                    @if (HedgeRelationship.HedgeState != DerivativeEDGEHAEntityEnumHedgeState.Dedesignated)
                    {
                        <div class="dp-inputs">
                            <SfCheckBox CssClass="input-checkbox"
                            Disabled="@(!CanEditCheckbox)"
                            @bind-Checked="HedgeRelationship.IsDeltaMatchOption"
                            Label="Delta Match Option" />
                        </div>
                    }
                    <div class="dp-inputs">
                        <SfCheckBox CssClass="input-checkbox"
                        Disabled="@(!CanEditCheckbox)"
                        @bind-Checked="HedgeRelationship.QualitativeAssessment"
                        Label="Qualitative Assessment" />
                    </div>
                    @if (HedgeRelationship.HedgeType == DerivativeEDGEHAEntityEnumHRHedgeType.CashFlow)
                    {
                        <div class="dp-inputs">
                            <SfCheckBox CssClass="input-checkbox"
                            Disabled="@(!CanEditPreIssuanceHedge)"
                            @bind-Checked="HedgeRelationship.PreIssuanceHedge"
                            Label="Pre-Issuance Hedge" />
                        </div>
                    }
                    @if (HedgeRelationship.HedgeType == DerivativeEDGEHAEntityEnumHRHedgeType.FairValue)
                    {
                        <div class="dp-inputs">
                            <SfCheckBox CssClass="input-checkbox"
                            Disabled="@(!CanEditPortfolioLayerMethod)"
                            @bind-Checked="HedgeRelationship.PortfolioLayerMethod"
                            Label="Portfolio Layer Method" />
                        </div>
                    }
                    @if (HedgeRelationship.HedgeType == DerivativeEDGEHAEntityEnumHRHedgeType.FairValue)
                    {
                        <div class="dp-inputs">
                            <SfCheckBox CssClass="input-checkbox"
                            Disabled="@(!CanEditCheckbox)"
                            @bind-Checked="HedgeRelationship.Shortcut"
                            Label="Shortcut" />
                        </div>
                    }
                    @if (HedgeRelationship.HedgeType == DerivativeEDGEHAEntityEnumHRHedgeType.FairValue && HedgeRelationship.AssetLiability == DerivativeEDGEHAEntityEnumAssetLiability.Asset)
                    {
                        <div class="dp-inputs">
                            <SfCheckBox CssClass="input-checkbox"
                            Disabled="@(!CanEditCheckbox)"
                            @bind-Checked="HedgeRelationship.AvailableForSale"
                            Label="Available For Sale" />
                        </div>
                    }
                    @if (HedgeRelationship.HedgeType == DerivativeEDGEHAEntityEnumHRHedgeType.CashFlow)
                    {
                        <div class="dp-inputs">
                            <SfCheckBox CssClass="input-checkbox"
                            Visible="HedgeRelationship.Acquisition"
                            Disabled="@(!CanEditCheckbox)"
                            @bind-Checked="HedgeRelationship.Acquisition" 
                            Label="Aquisition" />
                        </div>
                    }
                    @if (HedgeRelationship.HedgeState != DerivativeEDGEHAEntityEnumHedgeState.Dedesignated && HedgeRelationship.ExcludeIntrinsicValue)
                    {
                        <div class="form-group dp-inputs min-w-100">
                            <SfDropDownList TValue="DerivativeEDGEHAEntityEnumIntrinsicMethod"
                            CssClass="dropdown-input"
                            Enabled="true"
                            @bind-Value="HedgeRelationship.IntrinsicMethod"
                            TItem="DropdownModel"
                            Placeholder="Exclude Intrinsic Value"
                            DataSource="@DropdownDataHelper.GetDropdownDatasource("intrinsicmethod")">
                                <DropDownListEvents TValue="DerivativeEDGEHAEntityEnumIntrinsicMethod" TItem="DropdownModel" />
                                <DropDownListFieldSettings Text="Text" Value="Value" />
                            </SfDropDownList>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    
    @* Right Card - Effectiveness Chart *@
    <div class="flex-1 min-w-[18.75rem] p-5 flex flex-col">
        <div class="flex-grow">
            <div class="flex gap-5 justify-between">
                <SfChart Title="Effectiveness Snapshot">
                    <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.DateTime"
                    Title="Date" 
                    LabelFormat="MM-yy"
                    LabelRotation="0">
                    </ChartPrimaryXAxis>

                    <ChartPrimaryYAxis Title="R²" 
                    Name="primaryYAxis"
                    Minimum="0" 
                    Maximum="1.5">
                    </ChartPrimaryYAxis>

                    <ChartAxes>
                        <ChartAxis Name="secondaryYAxis" 
                        OpposedPosition="true"
                        Title="Slope"
                        Minimum="0" 
                        Maximum="1.5"
                        LineStyle="@(new ChartAxisLineStyle{ Width = 0 })">
                            <ChartAxisMajorGridLines Width="0" />
                        </ChartAxis>
                    </ChartAxes>

                    <ChartSeriesCollection>
                        <ChartSeries DataSource="@EffectivenessChartData" 
                        XName="Date" 
                        YName="R2Value"
                        Type="ChartSeriesType.Column" 
                        Name="R²"
                        Fill="#3b98d4"
                        ColumnWidth="0.2"
                        YAxisName="primaryYAxis">
                            <ChartSeriesAnimation Enable="true" />
                        </ChartSeries>

                        <ChartSeries DataSource="@EffectivenessChartData" 
                        XName="Date" 
                        YName="Slope"
                        Type="ChartSeriesType.Line" 
                        Name="Slope" 
                        Fill="#f79321"
                        Width="2"
                        YAxisName="secondaryYAxis">
                            <ChartMarker Visible="true" 
                            Width="8" 
                            Height="8" 
                            Fill="#f79321"
                            Shape="ChartShape.Circle">
                            </ChartMarker>
                            <ChartSeriesAnimation Enable="true" />
                        </ChartSeries>
                    </ChartSeriesCollection>

                    <ChartLegendSettings Visible="true" 
                    ItemPadding="15">
                    </ChartLegendSettings>

                    <ChartTooltipSettings Enable="true" />
                </SfChart>
            </div>
        </div>
    </div>
</div>
