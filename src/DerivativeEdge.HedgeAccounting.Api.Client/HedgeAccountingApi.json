{
  "openapi": "3.0.1",
  "info": {
    "title": "DerivativeEDGE.HA.Api",
    "description": "Controllers Api Template (dev)",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/Client": {
      "get": {
        "tags": [
          "Client"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Client"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Client/{id}": {
      "get": {
        "tags": [
          "Client"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Client"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Client"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Client/export": {
      "post": {
        "tags": [
          "Client"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumFileType"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemNetHttpHttpResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/ClientConfig": {
      "get": {
        "tags": [
          "ClientConfig"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityClientConfig"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "ClientConfig"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityClientConfig"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityClientConfig"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityClientConfig"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/ClientConfig/{id}": {
      "get": {
        "tags": [
          "ClientConfig"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsClientConfigVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "ClientConfig"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityClientConfig"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityClientConfig"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityClientConfig"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "ClientConfig"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/ClientConfig/GetJournalEntrySettings": {
      "get": {
        "tags": [
          "ClientConfig"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsJournalEntrySettingsVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/ClientConfig/GetEmailDeliveryInfo": {
      "get": {
        "tags": [
          "ClientConfig"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/ClientConfig/export": {
      "post": {
        "tags": [
          "ClientConfig"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumFileType"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemNetHttpHttpResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Currency": {
      "get": {
        "tags": [
          "Currency"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityCurrency"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Currency"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityCurrency"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityCurrency"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityCurrency"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Currency/{id}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityCurrency"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Currency"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityCurrency"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityCurrency"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityCurrency"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Currency"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Currency/export": {
      "post": {
        "tags": [
          "Currency"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumFileType"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemNetHttpHttpResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/EffectivenessMethod/getactive": {
      "get": {
        "tags": [
          "EffectivenessMethod"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityEffectivenessMethod"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/EffectivenessMethod": {
      "get": {
        "tags": [
          "EffectivenessMethod"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityEffectivenessMethod"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "EffectivenessMethod"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityEffectivenessMethod"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityEffectivenessMethod"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityEffectivenessMethod"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/EffectivenessMethod/{id}": {
      "get": {
        "tags": [
          "EffectivenessMethod"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityEffectivenessMethod"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "EffectivenessMethod"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityEffectivenessMethod"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityEffectivenessMethod"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityEffectivenessMethod"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "EffectivenessMethod"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/EffectivenessMethod/export": {
      "post": {
        "tags": [
          "EffectivenessMethod"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumFileType"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemNetHttpHttpResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Enum": {
      "get": {
        "tags": [
          "Enum"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsValueTextPair"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/GLAccounts": {
      "get": {
        "tags": [
          "GLAccount"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLAccount"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "GLAccount"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLAccount"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLAccount"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLAccount"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/GLAccounts/{id}": {
      "get": {
        "tags": [
          "GLAccount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLAccount"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "GLAccount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLAccount"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLAccount"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLAccount"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "GLAccount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/GetForHedging/{clientId}/{bankEntityId}": {
      "get": {
        "tags": [
          "GLAccount"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "bankEntityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLAccount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/GLAccounts/export": {
      "post": {
        "tags": [
          "GLAccount"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumFileType"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemNetHttpHttpResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Health": {
      "get": {
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsHealthResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Health/detailed": {
      "get": {
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRegressionBatch": {
      "get": {
        "tags": [
          "HedgeRegressionBatch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatch"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "HedgeRegressionBatch"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatch"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatch"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatch"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRegressionBatch/{id}": {
      "get": {
        "tags": [
          "HedgeRegressionBatch"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatch"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "HedgeRegressionBatch"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatch"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatch"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatch"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "HedgeRegressionBatch"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRegressionBatch/Export/{ft}": {
      "post": {
        "tags": [
          "HedgeRegressionBatch"
        ],
        "parameters": [
          {
            "name": "ft",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumFileType"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRegressionBatch/export": {
      "post": {
        "tags": [
          "HedgeRegressionBatch"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumFileType"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemNetHttpHttpResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRegressionQueue": {
      "get": {
        "tags": [
          "HedgeRegressionQueue"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionQueue"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "HedgeRegressionQueue"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionQueue"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionQueue"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionQueue"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRegressionQueue/{id}": {
      "get": {
        "tags": [
          "HedgeRegressionQueue"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionQueue"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "HedgeRegressionQueue"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionQueue"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionQueue"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionQueue"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "HedgeRegressionQueue"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRegressionQueue/LogJournalEntryReport": {
      "post": {
        "tags": [
          "HedgeRegressionQueue"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "curveDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "oob",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRegressionQueue/{id}/UpdateStatus": {
      "post": {
        "tags": [
          "HedgeRegressionQueue"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsHARegressionQueueStatus"
                }
              ]
            }
          },
          {
            "name": "emailSent",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "noContact",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": -1
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRegressionQueue/FindByIds": {
      "post": {
        "tags": [
          "HedgeRegressionQueue"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionQueue"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRegressionQueue/SearchQueueNew": {
      "post": {
        "tags": [
          "HedgeRegressionQueue"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityRequestsHedgeRegressionQueueSearchRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityRequestsHedgeRegressionQueueSearchRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityRequestsHedgeRegressionQueueSearchRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEDomainCoreValueObjectsSearchResponseOfDerivativeEDGEHAEntityHedgeRegressionQueueNew"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRegressionQueue/FindByClientIdAndCurveDate": {
      "get": {
        "tags": [
          "HedgeRegressionQueue"
        ],
        "parameters": [
          {
            "name": "ClientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "CurveDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "FileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Enabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionQueueNew"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRegressionQueue/FindByFileName": {
      "get": {
        "tags": [
          "HedgeRegressionQueue"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionQueue"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRegressionQueue/UpdateEnableStatus": {
      "post": {
        "tags": [
          "HedgeRegressionQueue"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityRequestsHedgeRegressionQueueRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityRequestsHedgeRegressionQueueRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityRequestsHedgeRegressionQueueRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRegressionQueue/UpdateHAQueueFileName": {
      "post": {
        "tags": [
          "HedgeRegressionQueue"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityRequestsHedgeRegressionQueueRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityRequestsHedgeRegressionQueueRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityRequestsHedgeRegressionQueueRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRegressionQueue/export": {
      "post": {
        "tags": [
          "HedgeRegressionQueue"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumFileType"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemNetHttpHttpResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/{id}": {
      "get": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship": {
      "get": {
        "tags": [
          "HedgeRelationship"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipVM"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/RegressionSummaryAllClients": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "valueDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/{clientID}/Summary": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "valueDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/ProcessSummaryAllClients": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "valueDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/{clientID}/ProcessSummary": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "valueDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/DeleteBatch/{batchid}": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "batchid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/Designated": {
      "get": {
        "tags": [
          "HedgeRelationship"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipVM"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/GetAllForJournalEntryByClient": {
      "get": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "monthEndDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priorMonthEndDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priorMonthEndDate2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "yearStart",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "yearEnd",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "terminatedOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipForJournalEntry"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/IsHedgeRelationshipItem": {
      "get": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "tradeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/IsGoodDate": {
      "get": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/Redraft": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/DeleteAllDesignated": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsMultipleRegressionRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsMultipleRegressionRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsMultipleRegressionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/BatchRegress": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsMultipleRegressionRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsMultipleRegressionRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsMultipleRegressionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/HedgeRelationship/MultipleRegress": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsMultipleRegressionRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsMultipleRegressionRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsMultipleRegressionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/HedgeRelationship/Regress": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "hedgeResultType",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeResultType"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipVM"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/Dedesignate/{id}/{reason}": {
      "get": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "reason",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumDedesignationReason"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipDeDesignation"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/Dedesignate": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/Redesignate/{id}": {
      "get": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipReDesignation"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/Redesignate": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipVM"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/GenerateInceptionPackage": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "preview",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/ExportHedgeAmortizatonSchedule": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/ExportHedgeOptionAmortizationSchedule": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/IsAnalyticsAvailable": {
      "get": {
        "tags": [
          "HedgeRelationship"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/SearchForJournalEntryByClient": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsSearchForJournalEntryByClientRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsSearchForJournalEntryByClientRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsSearchForJournalEntryByClientRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/SearchDedesignatedForJournalEntryByClient": {
      "get": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "clientID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "deDesignationDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/DedesignateByMatureTrade/{tradeId}": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "tradeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipDeDesignation"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipDeDesignation"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipDeDesignation"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/DownloadSpecsAndChecks": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/GetRegressionSummaryReport": {
      "get": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "curveDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRegressionBatchResultVM"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/GetHrDocumentNameDescription": {
      "get": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "hrId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeAccountingGetHrDocumentNameDescriptionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/FindDocumentTemplate/{hrId}": {
      "get": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "hrId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/CheckDocumentTemplateKeywords/{hrId}": {
      "get": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "hrId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityValueObjectsDocumentTemplateKeywordsCheckResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/SaveHrKeyword": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "hrId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/SaveHrCacheData": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "hrId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/RemoveHrCacheData": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "hrId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/GLMapping": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsGlMappingDefaultValues"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/GetOptionAmortizationDefaults": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityValueObjectsOptionAmortizationDefaultValues"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationship/export": {
      "post": {
        "tags": [
          "HedgeRelationship"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumFileType"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemNetHttpHttpResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationshipOptionTimeValueAmort": {
      "get": {
        "tags": [
          "HedgeRelationshipOptionTimeValueAmort"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "HedgeRelationshipOptionTimeValueAmort"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationshipOptionTimeValueAmort/{id}": {
      "get": {
        "tags": [
          "HedgeRelationshipOptionTimeValueAmort"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "HedgeRelationshipOptionTimeValueAmort"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipOptionTimeValueAmortVM"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "HedgeRelationshipOptionTimeValueAmort"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationshipOptionTimeValueAmort/Export/{ft}": {
      "post": {
        "tags": [
          "HedgeRelationshipOptionTimeValueAmort"
        ],
        "parameters": [
          {
            "name": "ft",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumFileType"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/HedgeRelationshipOptionTimeValueAmort/export": {
      "post": {
        "tags": [
          "HedgeRelationshipOptionTimeValueAmort"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumFileType"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemNetHttpHttpResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Home": {
      "get": {
        "tags": [
          "Home"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/InceptionMemoTemplate": {
      "get": {
        "tags": [
          "InceptionMemoTemplate"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeInceptionMemoTemplate"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "InceptionMemoTemplate"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeInceptionMemoTemplate"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeInceptionMemoTemplate"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeInceptionMemoTemplate"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/InceptionMemoTemplate/{id}": {
      "get": {
        "tags": [
          "InceptionMemoTemplate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeInceptionMemoTemplate"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "InceptionMemoTemplate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeInceptionMemoTemplate"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeInceptionMemoTemplate"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeInceptionMemoTemplate"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "InceptionMemoTemplate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/InceptionMemoTemplate/export": {
      "post": {
        "tags": [
          "InceptionMemoTemplate"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumFileType"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemNetHttpHttpResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/InternalDocQueue": {
      "get": {
        "tags": [
          "InternalDocQueue"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityInternalDocumentQueue"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "InternalDocQueue"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsInternalDocumentQueueRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsInternalDocumentQueueRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsInternalDocumentQueueRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityInternalDocumentQueue"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/InternalDocQueue/{id}": {
      "get": {
        "tags": [
          "InternalDocQueue"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityInternalDocumentQueue"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "InternalDocQueue"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityInternalDocumentQueue"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityInternalDocumentQueue"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityInternalDocumentQueue"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "InternalDocQueue"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/InternalDocQueue/GetAllByClient": {
      "get": {
        "tags": [
          "InternalDocQueue"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityInternalDocumentQueue"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/InternalDocQueue/ManualUpload": {
      "post": {
        "tags": [
          "InternalDocQueue"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsInternalDocumentQueueRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsInternalDocumentQueueRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsInternalDocumentQueueRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityInternalDocumentQueue"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/InternalDocQueue/Send": {
      "post": {
        "tags": [
          "InternalDocQueue"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/InternalDocQueue/UndoSent": {
      "post": {
        "tags": [
          "InternalDocQueue"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/InternalDocQueue/export": {
      "post": {
        "tags": [
          "InternalDocQueue"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumFileType"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemNetHttpHttpResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/RTE/Import": {
      "post": {
        "tags": [
          "RTE"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Trade": {
      "get": {
        "tags": [
          "Trade"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityTrade"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Trade"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityTrade"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityTrade"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityTrade"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Trade/{id}": {
      "get": {
        "tags": [
          "Trade"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityTrade"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Trade"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityTrade"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityTrade"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityTrade"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Trade"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Trade/GetForHedging/{tradeId}/{clientId}": {
      "get": {
        "tags": [
          "Trade"
        ],
        "parameters": [
          {
            "name": "tradeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Trade/GetTerminationDate/{id}": {
      "get": {
        "tags": [
          "Trade"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Trade/GetHaTradeStatuses": {
      "get": {
        "tags": [
          "Trade"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "asOfDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeEDGEHAEntityValueObjectsHATradeStatus"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreMvcProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Trade/export": {
      "post": {
        "tags": [
          "Trade"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumFileType"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemNetHttpHttpResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DerivativeEDGEDomainCoreValueObjectsSearchResponseOfDerivativeEDGEHAEntityHedgeRegressionQueueNew": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionQueueNew"
            },
            "nullable": true
          },
          "TotalRecords": {
            "type": "integer",
            "format": "int32"
          },
          "HasMoreRecords": {
            "type": "boolean"
          },
          "TotalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEDomainEntitiesEnumsAmortDayCount": {
        "enum": [
          "_30_360"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsAmortFitType": {
        "enum": [
          "Simple",
          "Best"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsAmortizationType": {
        "enum": [
          "None",
          "Mortgage",
          "AvgMortgage",
          "Custom",
          "Straightline",
          "PeriodicPrincipal"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsAvgFreq": {
        "enum": [
          "None",
          "OneMonth",
          "ThreeMonth",
          "SixMonth",
          "OneYear",
          "OneDay",
          "OneWeek"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsAvgPeriod": {
        "enum": [
          "OneMonth",
          "ThreeMonth",
          "SixMonth",
          "OneYear"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsAvgType": {
        "enum": [
          "Weighted",
          "Unweighted"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsBuySell": {
        "enum": [
          "Buy",
          "Sell"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsCollarStrikeSource": {
        "enum": [
          "Both",
          "Floor",
          "Cap"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsCompoundingPeriod": {
        "enum": [
          "None",
          "OneMonth",
          "ThreeMonth",
          "SixMonth",
          "OneYear",
          "OneDay",
          "OneWeek"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsContactRoles": {
        "enum": [
          "Reset",
          "MTM",
          "Primary",
          "SwapCustomerAgreement",
          "Confirms",
          "Contact",
          "Borrower",
          "Guarantor",
          "AdditionalReset",
          "ResetInquiries",
          "TermSheetHeader",
          "FXTrades",
          "FXWireInquiries",
          "StateRegulator",
          "CFPB",
          "FCAStatements",
          "AuthorizedSignatory",
          "ISDAMaster",
          "ACHNotification",
          "CallNoticeSupport",
          "TransactionApprover",
          "WLPImplementationAudit"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsCounterpartyDocType": {
        "enum": [
          "XLSX",
          "DOCX",
          "PDF"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsCounterpartyExtendedType": {
        "enum": [
          "None",
          "CentralCounterparty",
          "Clearing",
          "Corporation",
          "FinancialCounterparty",
          "FederalEntity"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsCounterpartyType": {
        "enum": [
          "EndUser",
          "Dealer"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsDayCountConv": {
        "enum": [
          "ACT_360",
          "ACT_365Fixed",
          "ACT_ISDA",
          "_30_360",
          "_30E_360"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsDrCr": {
        "enum": [
          "None",
          "Both",
          "Debit",
          "Credit"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsEmailSendReceive": {
        "enum": [
          "Send",
          "Receive"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsEmailType": {
        "enum": [
          "TradeStatusChange",
          "OppStatusChange",
          "ResetNoticeDelivery",
          "PasswordReset",
          "NewUserPassword",
          "PasswordResetInfo",
          "FollowedTradesPricing",
          "EcpAttentionReqd",
          "CounterpartyEmail",
          "TradeDoneEmail",
          "OpportunityPricingEmail",
          "TradeOrderPlaced",
          "TradeOrderApproved",
          "TradeOrderReceived",
          "CopyOfTradeOrderPlaced",
          "SwapCustomerAgreement",
          "ReportDelivery",
          "FailedFollowedTradesPricing",
          "Confirmation",
          "Others",
          "LeiRenewal",
          "InceptionPackage",
          "ClientContracts",
          "GtrSubmissionError",
          "SandlerPricingSheet",
          "SalesDistro",
          "ComplianceDistro",
          "MiddleOfficeDistro",
          "TaskAssigned",
          "AchSubmission",
          "CounterpartyMTM",
          "HARegressionSummary",
          "RFQDiscrepancy",
          "RFQTradeDiscrepancy",
          "MarkitSubmissionError",
          "PricingEmail",
          "RoleAdded",
          "UserRequestedPasswordReset",
          "KYCAMLRefresh",
          "SettlementInstruction"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsExchange": {
        "enum": [
          "None",
          "CME",
          "LCH"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsExposureMethod": {
        "enum": [
          "Method2",
          "Method3",
          "FXMethod3"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsFeeParentType": {
        "enum": [
          "Client",
          "Trade"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsFinancialCenter": {
        "enum": [
          "BEBR",
          "ARBA",
          "ATVI",
          "AUME",
          "AUSY",
          "BRSP",
          "CAMO",
          "CATO",
          "CHGE",
          "SKBR",
          "CLSA",
          "CNBE",
          "CZPR",
          "DEFR",
          "DKCO",
          "EETA",
          "ESMA",
          "FIHE",
          "FRPA",
          "GBLO",
          "GRAT",
          "HKHK",
          "HUBU",
          "IDJA",
          "IEDU",
          "ILTA",
          "ITMI",
          "ITRO",
          "JPTO",
          "KRSE",
          "LBBE",
          "LULU",
          "MYKL",
          "MXMC",
          "NLAM",
          "NOOS",
          "NYFD",
          "NYSE",
          "NZAU",
          "NZWE",
          "PAPC",
          "PHMA",
          "PLWA",
          "PTLI",
          "RUMO",
          "SARI",
          "SEST",
          "SGSI",
          "THBA",
          "TWTA",
          "TRAN",
          "USCH",
          "USLA",
          "USGS",
          "USNY",
          "ZAJO",
          "CHZU",
          "EUTA",
          "INMU",
          "PKKA",
          "RWKI",
          "COBG",
          "VNHA",
          "CME",
          "GBEDI",
          "KYGEC",
          "PELI"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsFixFlt": {
        "enum": [
          "Fix",
          "Flt"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsFxIndex": {
        "enum": [
          "EUR_CHF_ECB",
          "EUR_GBP_ECB",
          "EUR_JPY_ECB",
          "EUR_USD_ECB",
          "EUR_USD_WM",
          "GBP_USD_WM",
          "USD_CHF_WM",
          "USD_JPY_WM",
          "Other"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsGLEventSubtype": {
        "enum": [
          "MTM",
          "FVBasis",
          "TimeValue",
          "DeferredTax",
          "REAdjDeferredTax",
          "Settled",
          "Unsettled",
          "TimeValueHedgedItem",
          "TimeValueHedge",
          "Goodwill",
          "Immediate",
          "IntrinsicValue",
          "EffectiveInterestRateMethod",
          "AssetIntrinsicValue",
          "LiabilityIntrinsicValue",
          "MTMTimeValue",
          "MTMIntrinsicValue",
          "AmortizedTimeValue",
          "AmortizedIntrinsicValue",
          "DeferredTaxTimeValue",
          "DeferredTaxIntrinsicValue"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsGLEventType": {
        "enum": [
          "MarkToMarket",
          "Interest",
          "Notional",
          "Fee",
          "Accrual",
          "OCI",
          "Amortization",
          "EntryValue",
          "TerminationValue",
          "BasisAdjustment",
          "Payment",
          "Termination",
          "CloseOut",
          "OffMarket"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsGLMappingCounterpartyType": {
        "enum": [
          "All",
          "External",
          "Internal"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsHARegressionQueueStatus": {
        "enum": [
          "Unsent",
          "Sent",
          "Error",
          "OnHold"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsHedgeType": {
        "enum": [
          "MTM",
          "FairValueHedge",
          "CashFlowHedge",
          "FairValueUnderFAS159",
          "NetInvestmentHedge"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsIndexTenor": {
        "enum": [
          "Month",
          "ThreeMonths",
          "SixMonths",
          "Year"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsLegalEntityStatus": {
        "enum": [
          "Tradeable",
          "Prospective",
          "Inactive"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsLegalEntityType": {
        "enum": [
          "DPIClient",
          "BankEntity",
          "Counterparty",
          "DPI"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsMarkupDenom": {
        "enum": [
          "USD",
          "Bps"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsMessageDeliveryManager": {
        "enum": [
          "Client",
          "DPI"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsMessageDeliveryMethod": {
        "enum": [
          "Email",
          "Print"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsMessageType": {
        "enum": [
          "Pricing",
          "Approval",
          "Reset",
          "MTM",
          "ResetStatus",
          "Expiry",
          "InterestReport",
          "Text",
          "MarkitServ",
          "Dtcc",
          "CVA",
          "SaveClosingQuotes",
          "TradeOrder",
          "HealthStatus",
          "JournalEntryReport",
          "BilateralCVA",
          "FCAStatement"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsModifier": {
        "enum": [
          "None",
          "D1",
          "D2",
          "D3",
          "D4",
          "D5",
          "D6",
          "D7",
          "D8",
          "D9",
          "D10",
          "D11",
          "D12",
          "D13",
          "D14",
          "D15",
          "D16",
          "D17",
          "D18",
          "D19",
          "D20",
          "D21",
          "D22",
          "D23",
          "D24",
          "D25",
          "D26",
          "D27",
          "D28",
          "D29",
          "D30",
          "D31",
          "IMM",
          "Friday",
          "Monday",
          "MonthEnd",
          "MonthStart",
          "Thursday",
          "Tuesday",
          "Wednesday"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsNoticeDaysType": {
        "enum": [
          "Bus",
          "Cal"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsNotificationType": {
        "enum": [
          "Alert",
          "Settlement",
          "Message"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsPayBusDayConv": {
        "enum": [
          "Following",
          "ModFollowing",
          "Preceding",
          "ModPreceding",
          "FRN"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsPayRec": {
        "enum": [
          "Pay",
          "Rec"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsPayReceive": {
        "enum": [
          "Pay",
          "Receive"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsPaymentFrequency": {
        "enum": [
          "Monthly",
          "ThreeMonths",
          "SixMonths",
          "Yearly",
          "TwoYear",
          "ThreeYear",
          "FourYear",
          "FiveYear"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsPaymentHolidays": {
        "enum": [
          "NY",
          "LDN",
          "NYLDN"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsPreference": {
        "enum": [
          "Email",
          "App",
          "Both"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsPutCall": {
        "enum": [
          "Cap",
          "Floor"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsRPAType": {
        "enum": [
          "None",
          "In",
          "Out"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsResetDeliveryMethod": {
        "enum": [
          "Email",
          "Manual"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsResetFrequency": {
        "enum": [
          "OneMonth",
          "ThreeMonth",
          "SixMonth",
          "OneYear",
          "OneDay",
          "OneWeek"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsResetHoliday": {
        "enum": [
          "NY",
          "LDN",
          "NYLDN",
          "GBLO"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsResetSendTo": {
        "enum": [
          "Client",
          "Counterparty",
          "Both",
          "None"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsResetType": {
        "enum": [
          "Normal",
          "Arrears"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsReverseChange": {
        "enum": [
          "Reverse",
          "Change",
          "NotApplicable"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsRoundTo": {
        "enum": [
          "NotSet",
          "Penny",
          "Dollar",
          "TenDollar",
          "HundredDollar"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsRoundingMethod": {
        "enum": [
          "NotSet",
          "None",
          "Nearest",
          "Up",
          "Down"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsSecurityType": {
        "enum": [
          "Swap",
          "CapFloor",
          "Debt",
          "Swaption",
          "Cancelable",
          "Collar",
          "SwapWithOption",
          "DebtOption",
          "CallableDebt",
          "FxSpot",
          "FxForward",
          "FxWindow",
          "FxSwap",
          "FxNdf",
          "FxOption",
          "Corridor",
          "XccySwap",
          "XccySwapWithOption"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsSortDirection": {
        "enum": [
          "ASC",
          "DESC"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsStages": {
        "enum": [
          "PreSales",
          "Sales",
          "Tradeable",
          "Prospective",
          "Lead",
          "PreTrade",
          "Executed"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsSwaptionType": {
        "enum": [
          "European",
          "Bermudan"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsTradeStatus": {
        "enum": [
          "Pricing",
          "Executed",
          "Validated",
          "Amended",
          "Cancelled",
          "Inactive",
          "Booked",
          "Terminated",
          "Novated",
          "RPABought",
          "RPASold",
          "Matured",
          "Terminate",
          "Archived",
          "HA",
          "Hedge",
          "Template",
          "DealContingent",
          "FixPaymentRequested",
          "ReversalRequested",
          "MarkedAsReversed",
          "CancellationRequested",
          "Tradeable"
        ],
        "type": "string"
      },
      "DerivativeEDGEDomainEntitiesEnumsTradeStatusRule": {
        "enum": [
          "Default",
          "Demo",
          "SaaS",
          "DPI",
          "RestrictedMO",
          "BMTC",
          "RiskSolutionsSaaS",
          "FXSaaSRestrictedMO"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAApiModelsGlMappingDefaultValues": {
        "type": "object",
        "properties": {
          "GlAccountId": {
            "type": "integer",
            "format": "int64"
          },
          "GlContraAcctId": {
            "type": "integer",
            "format": "int64"
          },
          "GlAccountId2": {
            "type": "integer",
            "format": "int64"
          },
          "GlContraAcctId2": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiModelsHealthResponse": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "string",
            "nullable": true
          },
          "TotalDuration": {
            "type": "string",
            "nullable": true
          },
          "Entries": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsHealthResponseEntries"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiModelsHealthResponseData": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Duration": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiModelsHealthResponseEntries": {
        "type": "object",
        "properties": {
          "Main": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiModelsHealthResponseData"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiModelsInternalDocumentQueueRequest": {
        "type": "object",
        "properties": {
          "CurveDate": {
            "type": "string",
            "format": "date-time"
          },
          "ClientId": {
            "type": "integer",
            "format": "int64"
          },
          "Filename": {
            "type": "string",
            "nullable": true
          },
          "HRHedgeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHRHedgeType"
              }
            ]
          },
          "CreatedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumInternalDocQueueCreatedType"
              }
            ]
          },
          "OOBCheck": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemCollectionsGenericKeyValuePairOfSystemNullableOfSystemBooleanAndSystemStringArray"
              }
            ]
          },
          "ClosingToOpeningCheck": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemCollectionsGenericKeyValuePairOfSystemNullableOfSystemBooleanAndSystemStringArray"
              }
            ]
          },
          "TradeCountCheck": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemCollectionsGenericKeyValuePairOfSystemNullableOfSystemBooleanAndSystemStringArray"
              }
            ]
          },
          "ReversalCheck": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemCollectionsGenericKeyValuePairOfSystemNullableOfSystemBooleanAndSystemStringArray"
              }
            ]
          },
          "BACheck": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemCollectionsGenericKeyValuePairOfSystemNullableOfSystemBooleanAndSystemStringArray"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiModelsMultipleRegressionRequest": {
        "type": "object",
        "properties": {
          "IDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "ValueDate": {
            "type": "string",
            "format": "date-time"
          },
          "RunForMonthEndClose": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiModelsSearchForJournalEntryByClientRequest": {
        "type": "object",
        "properties": {
          "ClientID": {
            "type": "integer",
            "format": "int64"
          },
          "LinkID": {
            "type": "string",
            "nullable": true
          },
          "ValueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiModelsValueTextPair": {
        "type": "object",
        "properties": {
          "Value": {
            "type": "string",
            "nullable": true
          },
          "Text": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsBankEntityVM": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "GMEI": {
            "type": "string",
            "nullable": true
          },
          "LegalEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsLegalEntityVM"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsClientConfigVM": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "CVAAddedGLReport": {
            "type": "boolean"
          },
          "HedgeRiskType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeRiskType"
              }
            ]
          },
          "HedgeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHRHedgeType"
              }
            ]
          },
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "ProspectiveEffectivenessMethodID": {
            "type": "integer",
            "format": "int64"
          },
          "ReportingDate": {
            "type": "string",
            "nullable": true
          },
          "ReportingFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumReportingFrequency"
              }
            ]
          },
          "RetrospectiveEffectivenessMethodID": {
            "type": "integer",
            "format": "int64"
          },
          "ShareGLMapping": {
            "type": "boolean"
          },
          "Observation": {
            "type": "integer",
            "format": "int32"
          },
          "PeriodSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumPeriodSize"
              }
            ]
          },
          "PeriodSizeText": {
            "type": "string",
            "nullable": true
          },
          "Objective": {
            "type": "string",
            "nullable": true
          },
          "HedgedItemType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgedItemType"
              }
            ]
          },
          "HedgedItemTypeDesc": {
            "type": "string",
            "nullable": true
          },
          "EOM": {
            "type": "boolean"
          },
          "ReportCurrency": {
            "type": "string",
            "nullable": true
          },
          "HAEmailText": {
            "type": "string",
            "nullable": true
          },
          "DeliveryAddress": {
            "type": "string",
            "nullable": true
          },
          "HAGLAutoSend": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHAGLAutoSendType"
              }
            ]
          },
          "SplitCashFlowJEReportByPortfolio": {
            "type": "boolean"
          },
          "SplitFairValueJEReportByPortfolio": {
            "type": "boolean"
          },
          "SplitNetInvestmentJEReportByPortfolio": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsClientVM": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "AllowSendEmail": {
            "type": "boolean"
          },
          "AmortCalcDayCount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsDayCountConv"
              }
            ],
            "nullable": true
          },
          "AmortRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "LegalEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsLegalEntityVM"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsEffectivenessMethodVM": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "IsForCashFlow": {
            "type": "boolean"
          },
          "IsForFairValue": {
            "type": "boolean"
          },
          "IsForNetInvestment": {
            "type": "boolean"
          },
          "IsForProspective": {
            "type": "boolean"
          },
          "IsForRetrospective": {
            "type": "boolean"
          },
          "Name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsGLAccountVM": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "AccountType": {
            "type": "integer",
            "format": "int32"
          },
          "AccountNumber": {
            "type": "string",
            "nullable": true
          },
          "AccountDescription": {
            "type": "string",
            "nullable": true
          },
          "ClientId": {
            "type": "integer",
            "format": "int64"
          },
          "BankEntityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "AccountCategoryId": {
            "type": "integer",
            "format": "int64"
          },
          "IsActive": {
            "type": "boolean"
          },
          "LedgerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsHedgeRegressionBatchResultVM": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRegressionBatchID": {
            "type": "integer",
            "format": "int64"
          },
          "ResultType": {
            "type": "string",
            "nullable": true
          },
          "ValueDate": {
            "type": "string",
            "format": "date-time"
          },
          "HedgedFairValueFormatted": {
            "type": "string",
            "nullable": true
          },
          "HedgedFairValueChangedFormatted": {
            "type": "string",
            "nullable": true
          },
          "HedgingFairValueFormatted": {
            "type": "string",
            "nullable": true
          },
          "HedgingFairValueChangedFormatted": {
            "type": "string",
            "nullable": true
          },
          "OptionTimeValueFormatted": {
            "type": "string",
            "nullable": true
          },
          "AdjustedValueFormatted": {
            "type": "string",
            "nullable": true
          },
          "F3ResultFormat": {
            "type": "string",
            "nullable": true
          },
          "HedgedFairValue": {
            "type": "number",
            "format": "double"
          },
          "HedgedFairValueChanged": {
            "type": "number",
            "format": "double"
          },
          "HedgingFairValue": {
            "type": "number",
            "format": "double"
          },
          "HedgingFairValueChanged": {
            "type": "number",
            "format": "double"
          },
          "F3FormatType": {
            "type": "integer",
            "format": "int32"
          },
          "OptionTimeValue": {
            "type": "number",
            "format": "double"
          },
          "AdjustedValue": {
            "type": "number",
            "format": "double"
          },
          "TimeValueIncludedInRegression": {
            "type": "boolean"
          },
          "ObservationEvent": {
            "type": "boolean"
          },
          "ObservationIndex": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsHedgeRegressionBatchVM": {
        "type": "object",
        "properties": {
          "DesignationDate": {
            "type": "string",
            "format": "date-time"
          },
          "B0StandardError": {
            "type": "number",
            "format": "double"
          },
          "Observation": {
            "type": "number",
            "format": "double"
          },
          "Slope": {
            "type": "number",
            "format": "double"
          },
          "YIntercept": {
            "type": "number",
            "format": "double"
          },
          "SumYSSResidual": {
            "type": "number",
            "format": "double"
          },
          "SumYMSResidual": {
            "type": "number",
            "format": "double"
          },
          "XMean": {
            "type": "number",
            "format": "double"
          },
          "YMean": {
            "type": "number",
            "format": "double"
          },
          "SumYSSRegression": {
            "type": "number",
            "format": "double"
          },
          "SumYMSRegression": {
            "type": "number",
            "format": "double"
          },
          "FStat": {
            "type": "number",
            "format": "double"
          },
          "R": {
            "type": "number",
            "format": "double"
          },
          "FStatAnalytics": {
            "type": "string",
            "nullable": true
          },
          "B0tStatAnalytics": {
            "type": "string",
            "nullable": true
          },
          "B1tStatAnalytics": {
            "type": "string",
            "nullable": true
          },
          "PeriodSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumPeriodSize"
              }
            ]
          },
          "StandardError": {
            "type": "number",
            "format": "double"
          },
          "RSquared": {
            "type": "number",
            "format": "double"
          },
          "SumXRegression": {
            "type": "number",
            "format": "double"
          },
          "SumSSXRegression": {
            "type": "number",
            "format": "double"
          },
          "B1StandarError": {
            "type": "number",
            "format": "double"
          },
          "B0tStat": {
            "type": "number",
            "format": "double"
          },
          "B1tStat": {
            "type": "number",
            "format": "double"
          },
          "B0PValue": {
            "type": "number",
            "format": "double"
          },
          "B1PValue": {
            "type": "number",
            "format": "double"
          },
          "IsClean": {
            "type": "boolean"
          },
          "IsChanged": {
            "type": "boolean"
          },
          "Enabled": {
            "type": "boolean"
          },
          "PositiveAutoCorrelation": {
            "type": "string",
            "nullable": true
          },
          "NegativeAutoCorrelation": {
            "type": "string",
            "nullable": true
          },
          "D": {
            "type": "number",
            "format": "double"
          },
          "FourMinusD": {
            "type": "number",
            "format": "double"
          },
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "FairValueMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumFairValueMethod"
              }
            ]
          },
          "FairValueMethodText": {
            "type": "string",
            "nullable": true
          },
          "HedgeRelationshipID": {
            "type": "integer",
            "format": "int64"
          },
          "RetrospectiveEffectivenessMethodID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ProspectiveEffectivenessMethodID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ValueDate": {
            "type": "string",
            "nullable": true
          },
          "HedgeRelationshipLog": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipBatchLogVM"
              }
            ],
            "nullable": true
          },
          "HedgeRegressionBatchResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRegressionBatchResultVM"
            },
            "nullable": true
          },
          "HedgedRelationshipItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM"
              }
            ],
            "nullable": true
          },
          "HedgingRelationshipItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM"
              }
            ],
            "nullable": true
          },
          "HedgeResultType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeResultType"
              }
            ]
          },
          "HedgeResultTypeText": {
            "type": "string",
            "nullable": true
          },
          "RunDate": {
            "type": "string",
            "nullable": true
          },
          "RunBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsUserVM"
              }
            ],
            "nullable": true
          },
          "RetrospectiveDescription": {
            "type": "string",
            "nullable": true
          },
          "ProspectiveDescription": {
            "type": "string",
            "nullable": true
          },
          "HedgeRelationshipLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipLogVm"
            },
            "nullable": true
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsHedgeRelationshipActivityVM": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRelationshipID": {
            "type": "integer",
            "format": "int64"
          },
          "ActivityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumActivityType"
              }
            ]
          },
          "ActivityTypeText": {
            "type": "string",
            "nullable": true
          },
          "CreatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsUserVM"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsHedgeRelationshipBatchLogVM": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "integer",
            "format": "int32"
          },
          "Errors": {
            "type": "integer",
            "format": "int32"
          },
          "Logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipLogVm"
            },
            "nullable": true
          },
          "Count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsHedgeRelationshipItemLegVm": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "CmpdgPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsCompoundingPeriod"
              }
            ]
          },
          "FixedRate": {
            "type": "number",
            "format": "double"
          },
          "FixFlt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsFixFlt"
              }
            ]
          },
          "IdxPct": {
            "type": "number",
            "format": "double"
          },
          "Index": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "IndexTenor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsIndexTenor"
              }
            ]
          },
          "PayRec": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPayRec"
              }
            ]
          },
          "ResetFreq": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsResetFrequency"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "CounterPartyId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "BuySell": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsBuySell"
              }
            ],
            "nullable": true
          },
          "PutCall": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPutCall"
              }
            ],
            "nullable": true
          },
          "Strike": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "TradeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ParentID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "HedgeRelationshipID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRelationshipItemType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeRelationshipItemType"
              }
            ]
          },
          "ItemID": {
            "type": "string",
            "nullable": true
          },
          "SecurityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsSecurityType"
              }
            ]
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Spread": {
            "type": "number",
            "format": "double"
          },
          "Rate": {
            "type": "number",
            "format": "double"
          },
          "Notional": {
            "type": "number",
            "format": "double"
          },
          "EffectiveDate": {
            "type": "string",
            "nullable": true
          },
          "MaturityDate": {
            "type": "string",
            "nullable": true
          },
          "ItemStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsTradeStatus"
              }
            ]
          },
          "ItemStatusText": {
            "type": "string",
            "nullable": true
          },
          "HedgeRelationshipItemLegs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipItemLegVm"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsHedgeRelationshipLogVm": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRegressionBatchID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "HedgeRelationshipID": {
            "type": "integer",
            "format": "int64"
          },
          "Key": {
            "type": "string",
            "nullable": true
          },
          "Level": {
            "type": "string",
            "nullable": true
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsHedgeRelationshipOptionTimeValueAmortVM": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRelationshipID": {
            "type": "integer",
            "format": "int64"
          },
          "GLAccountID": {
            "type": "integer",
            "format": "int64"
          },
          "GLAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsGLAccountVM"
              }
            ],
            "nullable": true
          },
          "ContraAccountID": {
            "type": "integer",
            "format": "int64"
          },
          "ContraAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsGLAccountVM"
              }
            ],
            "nullable": true
          },
          "IncludeInRegression": {
            "type": "boolean"
          },
          "AdjDates": {
            "type": "boolean"
          },
          "PaymentFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPaymentFrequency"
              }
            ]
          },
          "PaymentFrequencyText": {
            "type": "string",
            "nullable": true
          },
          "DayCountConv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsDayCountConv"
              }
            ]
          },
          "DayCountConvText": {
            "type": "string",
            "nullable": true
          },
          "PayBusDayConv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPayBusDayConv"
              }
            ]
          },
          "PaymentConventionText": {
            "type": "string",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "nullable": true
          },
          "EndDate": {
            "type": "string",
            "nullable": true
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "TotalDCF": {
            "type": "number",
            "format": "double"
          },
          "Straightline": {
            "type": "boolean"
          },
          "OptionTimeValueAmortRollSchedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsOptionTimeValueAmortRollScheduleVM"
            },
            "nullable": true
          },
          "OptionAmortizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsOptionAmortizationVM"
            },
            "nullable": true
          },
          "FrontRollDate": {
            "type": "string",
            "nullable": true
          },
          "BackRollDate": {
            "type": "string",
            "nullable": true
          },
          "FinancialCenters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsFinancialCenter"
            },
            "nullable": true
          },
          "OptionTimeValueAmortType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumOptionTimeValueAmortType"
              }
            ]
          },
          "OptionTimeValueAmortTypeText": {
            "type": "string",
            "nullable": true
          },
          "AmortizationMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumAmortizationMethod"
              }
            ]
          },
          "AmortizationMethodText": {
            "type": "string",
            "nullable": true
          },
          "OptionSwapletAmortizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsOptionSwapletAmortizationVM"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsHedgeRelationshipVM": {
        "type": "object",
        "properties": {
          "ReportCurrency": {
            "type": "string",
            "nullable": true
          },
          "ForeignCurrencyAfterTaxBasis": {
            "type": "boolean"
          },
          "CounterpartyCreditRisk": {
            "type": "boolean"
          },
          "IncomeTaxDesignation": {
            "type": "boolean"
          },
          "CumulativeChanges": {
            "type": "boolean"
          },
          "PeriodicChanges": {
            "type": "boolean"
          },
          "AmortizeOptionPremimum": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "IsHAOptIntEnabled": {
            "type": "boolean"
          },
          "IntrinsicMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumIntrinsicMethod"
              }
            ]
          },
          "ExcludeIntrinsicValue": {
            "type": "boolean"
          },
          "IsDeltaMatchOption": {
            "type": "boolean"
          },
          "Shortcut": {
            "type": "boolean"
          },
          "HasDesignatedTrade": {
            "type": "boolean"
          },
          "FairValueMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumFairValueMethod"
              }
            ]
          },
          "FairValueMethodText": {
            "type": "string",
            "nullable": true
          },
          "HedgedItemType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgedItemType"
              }
            ]
          },
          "HedgedItemTypeText": {
            "type": "string",
            "nullable": true
          },
          "HedgedItemTypeDesc": {
            "type": "string",
            "nullable": true
          },
          "Benchmark": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumBenchmark"
              }
            ]
          },
          "BenchmarkText": {
            "type": "string",
            "nullable": true
          },
          "HedgeExposure": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeExposure"
              }
            ],
            "nullable": true
          },
          "HedgeExposureText": {
            "type": "string",
            "nullable": true
          },
          "ExposureCurrency": {
            "type": "string",
            "nullable": true
          },
          "HedgeAccountingTreatment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeAccountingTreatment"
              }
            ],
            "nullable": true
          },
          "HedgeAccountingTreatmentText": {
            "type": "string",
            "nullable": true
          },
          "AssetLiability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumAssetLiability"
              }
            ]
          },
          "AssetLiabilityText": {
            "type": "string",
            "nullable": true
          },
          "EOM": {
            "type": "boolean"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Client": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsClientVM"
              }
            ],
            "nullable": true
          },
          "ClientID": {
            "type": "integer",
            "format": "int64"
          },
          "BankEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsBankEntityVM"
              }
            ],
            "nullable": true
          },
          "BankEntityID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHRHedgeType"
              }
            ]
          },
          "HedgeTypeText": {
            "type": "string",
            "nullable": true
          },
          "HedgeRiskType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeRiskType"
              }
            ]
          },
          "HedgeRiskTypeText": {
            "type": "string",
            "nullable": true
          },
          "RetrospectiveEffectivenessMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsEffectivenessMethodVM"
              }
            ],
            "nullable": true
          },
          "ProspectiveEffectivenessMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsEffectivenessMethodVM"
              }
            ],
            "nullable": true
          },
          "RetrospectiveEffectivenessMethodID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ProspectiveEffectivenessMethodID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "DesignationDate": {
            "type": "string",
            "nullable": true
          },
          "DedesignationDate": {
            "type": "string",
            "nullable": true
          },
          "Standard": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumStandard"
              }
            ]
          },
          "StandardText": {
            "type": "string",
            "nullable": true
          },
          "GenerateInception": {
            "type": "boolean"
          },
          "TaxPurposes": {
            "type": "boolean"
          },
          "CVAAddedGLReport": {
            "type": "boolean"
          },
          "HedgeDirection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeDirection"
              }
            ]
          },
          "HedgeDirectionText": {
            "type": "string",
            "nullable": true
          },
          "InEffMeasurement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumInEffMeasurement"
              }
            ]
          },
          "ReportingFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumReportingFrequency"
              }
            ]
          },
          "ReportingFrequencyText": {
            "type": "string",
            "nullable": true
          },
          "PeriodSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumPeriodSize"
              }
            ]
          },
          "PeriodSizeText": {
            "type": "string",
            "nullable": true
          },
          "Observation": {
            "type": "integer",
            "format": "int32"
          },
          "AmortizationMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumAmortizationMethod"
              }
            ]
          },
          "OptionPremium": {
            "type": "number",
            "format": "double"
          },
          "IsAnOptionHedge": {
            "type": "boolean"
          },
          "HedgeState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeState"
              }
            ]
          },
          "HedgeStateText": {
            "type": "string",
            "nullable": true
          },
          "Notional": {
            "type": "number",
            "format": "double"
          },
          "Objective": {
            "type": "string",
            "nullable": true
          },
          "InceptionMemoTemplateID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "InceptionMemoTemplateDesc": {
            "type": "string",
            "nullable": true
          },
          "CashPaymentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumCashPaymentType"
              }
            ],
            "nullable": true
          },
          "HedgedExposureExist": {
            "type": "boolean",
            "nullable": true
          },
          "Payment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Accrual": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "BasisAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "BasisAdjustmentBalance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "AvailableForSale": {
            "type": "boolean",
            "nullable": true
          },
          "Acquisition": {
            "type": "boolean"
          },
          "HedgedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM"
            },
            "nullable": true
          },
          "HedgingItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM"
            },
            "nullable": true
          },
          "HedgeRegressionBatchesLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRegressionBatchVM"
            },
            "nullable": true
          },
          "HedgeRegressionBatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRegressionBatchVM"
            },
            "nullable": true
          },
          "HedgeRelationshipActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipActivityVM"
            },
            "nullable": true
          },
          "LatestHedgeRegressionBatch": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRegressionBatchVM"
              }
            ],
            "nullable": true
          },
          "HedgeRegressionForExport": {
            "type": "integer",
            "format": "int32"
          },
          "HedgeRelationshipOptionTimeValueAmorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipOptionTimeValueAmortVM"
            },
            "nullable": true
          },
          "HedgeRelationshipOptionTimeValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipOptionTimeValueAmortVM"
            },
            "nullable": true
          },
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgedItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM"
              }
            ],
            "nullable": true
          },
          "HedgingItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsHedgeRelationshipItemVM"
              }
            ],
            "nullable": true
          },
          "ShowHrSpecAndChecksButton": {
            "type": "boolean"
          },
          "OffMarket": {
            "type": "boolean"
          },
          "ContractType": {
            "type": "string",
            "nullable": true
          },
          "QualitativeAssessment": {
            "type": "boolean"
          },
          "PreIssuanceHedge": {
            "type": "boolean"
          },
          "PortfolioLayerMethod": {
            "type": "boolean"
          },
          "HedgingInstrumentStructure": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgingInstrumentStructure"
              }
            ]
          },
          "HedgingInstrumentStructureText": {
            "type": "string",
            "nullable": true
          },
          "HedgeDocumentTemplateName": {
            "type": "string",
            "nullable": true
          },
          "HedgeDocumentTemplateDescription": {
            "type": "string",
            "nullable": true
          },
          "IsCaarHedgeTemplate": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsJournalEntrySettingsVM": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "SplitCashFlowJEReportByPortfolio": {
            "type": "boolean"
          },
          "SplitFairValueJEReportByPortfolio": {
            "type": "boolean"
          },
          "SplitNetInvestmentJEReportByPortfolio": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsLegalEntityVM": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Address_City": {
            "type": "string",
            "nullable": true
          },
          "Address_Country": {
            "type": "string",
            "nullable": true
          },
          "Address_State": {
            "type": "string",
            "nullable": true
          },
          "Address_Street1": {
            "type": "string",
            "nullable": true
          },
          "Address_Street2": {
            "type": "string",
            "nullable": true
          },
          "Address_Zip": {
            "type": "string",
            "nullable": true
          },
          "CICI": {
            "type": "string",
            "nullable": true
          },
          "AllowSendEmail": {
            "type": "boolean"
          },
          "ComplianceStage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsStages"
              }
            ],
            "nullable": true
          },
          "ComputedCreditSpread": {
            "type": "number",
            "format": "double"
          },
          "ComputedRecoveryRate": {
            "type": "number",
            "format": "double"
          },
          "CreditSpread": {
            "type": "number",
            "format": "double"
          },
          "DocType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsCounterpartyDocType"
              }
            ],
            "nullable": true
          },
          "DTCCID": {
            "type": "string",
            "nullable": true
          },
          "EndUserReportDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "RecoveryRate": {
            "type": "number",
            "format": "double"
          },
          "ShortName": {
            "type": "string",
            "nullable": true
          },
          "TradeStatusRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsTradeStatusRule"
              }
            ],
            "nullable": true
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsLegalEntityType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsOptionAmortizationVM": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "Weight": {
            "type": "number",
            "format": "double"
          },
          "HedgeRelationshipOptionTimeValueAmortID": {
            "type": "integer",
            "format": "int64"
          },
          "PaymentDate": {
            "type": "string",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "nullable": true
          },
          "EndDate": {
            "type": "string",
            "nullable": true
          },
          "FixingDate": {
            "type": "string",
            "nullable": true
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "Amount2": {
            "type": "number",
            "format": "double"
          },
          "Amount1": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsOptionSwapletAmortizationVM": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRelationshipOptionTimeValueAmortID": {
            "type": "integer",
            "format": "int64"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Days": {
            "type": "integer",
            "format": "int32"
          },
          "PaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ResetDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Strike": {
            "type": "number",
            "format": "double"
          },
          "DayCountFraction": {
            "type": "number",
            "format": "double"
          },
          "DiscFactor": {
            "type": "number",
            "format": "double"
          },
          "Notional": {
            "type": "number",
            "format": "double"
          },
          "Rate": {
            "type": "number",
            "format": "double"
          },
          "Spread": {
            "type": "number",
            "format": "double"
          },
          "OptValue": {
            "type": "number",
            "format": "double"
          },
          "OptIntrinsicValue": {
            "type": "number",
            "format": "double"
          },
          "OptTimeValue": {
            "type": "number",
            "format": "double"
          },
          "MonthEnding": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "CycleIncluded": {
            "type": "integer",
            "format": "int32"
          },
          "CycleExcluded": {
            "type": "integer",
            "format": "int32"
          },
          "CycleIncludedAmount": {
            "type": "number",
            "format": "double"
          },
          "CycleAdjustedAmount": {
            "type": "number",
            "format": "double"
          },
          "OptIntrinsicValueAccrued": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsOptionTimeValueAmortRollScheduleVM": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "DCF": {
            "type": "number",
            "format": "double"
          },
          "HedgeRelationshipOptionTimeValueAmortID": {
            "type": "integer",
            "format": "int64"
          },
          "PaymentDate": {
            "type": "string",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "nullable": true
          },
          "EndDate": {
            "type": "string",
            "nullable": true
          },
          "Fraction": {
            "type": "number",
            "format": "double"
          },
          "Periodic": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsPersonVM": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "FullName": {
            "type": "string",
            "nullable": true
          },
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "LastName": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAApiViewModelsUserVM": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "Person": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAApiViewModelsPersonVM"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityAmortization": {
        "type": "object",
        "properties": {
          "LegId": {
            "type": "integer",
            "format": "int64"
          },
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Period": {
            "type": "integer",
            "format": "int32"
          },
          "Amount": {
            "type": "number",
            "format": "double"
          },
          "Ppmt": {
            "type": "number",
            "format": "double"
          },
          "Interest": {
            "type": "number",
            "format": "double"
          },
          "AddedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "AddedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "UpdatedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Leg": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityLeg"
              }
            ],
            "nullable": true
          },
          "AddedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "UpdatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityBankEntity": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "GMEI": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "HedgeRelationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
            },
            "nullable": true
          },
          "LegalEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityLegalEntity"
              }
            ],
            "nullable": true
          },
          "BankEntityPersons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityBankEntityPerson"
            },
            "nullable": true
          },
          "Fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityFee"
            },
            "nullable": true
          },
          "GLAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLAccount"
            },
            "nullable": true
          },
          "Trades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityTrade"
            },
            "nullable": true
          },
          "GLMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLMapping"
            },
            "nullable": true
          },
          "GLCostCenters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLCostCenter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityBankEntityPerson": {
        "type": "object",
        "properties": {
          "BankEntity_Id": {
            "type": "integer",
            "format": "int64"
          },
          "Person_Id": {
            "type": "integer",
            "format": "int64"
          },
          "BankEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityBankEntity"
              }
            ],
            "nullable": true
          },
          "Person": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityPerson"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityCallableDebt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityCancelable": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityCapFloor": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Strike": {
            "type": "number",
            "format": "double"
          },
          "BuySell": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsBuySell"
              }
            ]
          },
          "Premium": {
            "type": "number",
            "format": "double"
          },
          "PutCall": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPutCall"
              }
            ]
          },
          "LowStrike": {
            "type": "boolean",
            "nullable": true
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityCashFlow": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "LegId": {
            "type": "integer",
            "format": "int64"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "PaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ResetDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "SettlementDays": {
            "type": "integer",
            "format": "int32"
          },
          "Notional": {
            "type": "number",
            "format": "double"
          },
          "Rate": {
            "type": "number",
            "format": "double"
          },
          "DiscFactor": {
            "type": "number",
            "format": "double"
          },
          "DayCountFraction": {
            "type": "number",
            "format": "double"
          },
          "IsKnown": {
            "type": "boolean"
          },
          "Spread": {
            "type": "number",
            "format": "double"
          },
          "Days": {
            "type": "integer",
            "format": "int32"
          },
          "Strike": {
            "type": "number",
            "format": "double"
          },
          "OptValue": {
            "type": "number",
            "format": "double"
          },
          "ImpliedVol": {
            "type": "number",
            "format": "double"
          },
          "OptDelta": {
            "type": "number",
            "format": "double"
          },
          "OptVega": {
            "type": "number",
            "format": "double"
          },
          "OptGamma": {
            "type": "number",
            "format": "double"
          },
          "Payment": {
            "type": "number",
            "format": "double"
          },
          "PaymentPV": {
            "type": "number",
            "format": "double"
          },
          "Interest": {
            "type": "number",
            "format": "double"
          },
          "Ppmt": {
            "type": "number",
            "format": "double"
          },
          "Scaler": {
            "type": "number",
            "format": "double"
          },
          "AddedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "AddedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "UpdatedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Leg": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityLeg"
              }
            ],
            "nullable": true
          },
          "AddedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "UpdatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityClient": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "PreviousName": {
            "maxLength": 300,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "GMEI": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "PaymentRoundTo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsRoundTo"
              }
            ],
            "nullable": true
          },
          "PrincipalRoundTo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsRoundTo"
              }
            ],
            "nullable": true
          },
          "PaymentRounding": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsRoundingMethod"
              }
            ],
            "nullable": true
          },
          "InterestRounding": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsRoundingMethod"
              }
            ],
            "nullable": true
          },
          "PrincipalRounding": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsRoundingMethod"
              }
            ],
            "nullable": true
          },
          "ResetSendTo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsResetSendTo"
              }
            ],
            "nullable": true
          },
          "ExposureMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsExposureMethod"
              }
            ],
            "nullable": true
          },
          "ExposureNotional": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsExposureMethod"
              }
            ],
            "nullable": true
          },
          "ReportDeliveryMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsResetDeliveryMethod"
              }
            ],
            "nullable": true
          },
          "ReportAttachmentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsResetDeliveryMethod"
              }
            ],
            "nullable": true
          },
          "ResetAttachmentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsResetDeliveryMethod"
              }
            ],
            "nullable": true
          },
          "ResetDeliveryMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsResetDeliveryMethod"
              }
            ],
            "nullable": true
          },
          "ResetDeliveryManager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsMessageDeliveryManager"
              }
            ],
            "nullable": true
          },
          "ResetEmailText": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ResetSubject": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ResetNotes": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ResetBody": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "AutoSendResetEmail": {
            "type": "boolean"
          },
          "ResetDeliveryAddress": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "UpdateDeliveryDate": {
            "type": "boolean"
          },
          "Domains": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "SeparateBankEntities": {
            "type": "boolean"
          },
          "FixedRateLoanPricerSpread": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "SwapPricerSpread": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "FixedRateProgram": {
            "type": "boolean"
          },
          "IncludeNameInResetFileName": {
            "type": "boolean"
          },
          "AutoSendReports": {
            "type": "boolean"
          },
          "ReportComments": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ReportBody": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ReportDeliveryAddress": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "IncludeRPAInMtmCva": {
            "type": "boolean"
          },
          "AllowSendEmail": {
            "type": "boolean"
          },
          "CtyResetEmailText": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Markup": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "DefaultFixedRateLoanPricerSpread": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "AmortRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "AmortCalcDayCount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsDayCountConv"
              }
            ],
            "nullable": true
          },
          "Workout": {
            "type": "boolean"
          },
          "IncludeValuationDate": {
            "type": "boolean"
          },
          "IncludeToPeriodEnd": {
            "type": "boolean"
          },
          "ResetOnPaymentDate": {
            "type": "boolean"
          },
          "EmailAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "GenerateJournalEntry": {
            "type": "boolean"
          },
          "MonthlyEntriesMethod": {
            "type": "integer",
            "format": "int32"
          },
          "ExternalEmail": {
            "type": "boolean"
          },
          "LegalEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityLegalEntity"
              }
            ],
            "nullable": true
          },
          "ClientConfig": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityClientConfig"
              }
            ],
            "nullable": true
          },
          "HedgeRelationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
            },
            "nullable": true
          },
          "Emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityEmail"
            },
            "nullable": true
          },
          "Fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityFee"
            },
            "nullable": true
          },
          "GLAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLAccount"
            },
            "nullable": true
          },
          "LegalEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityLegalEntity"
            },
            "nullable": true
          },
          "Trades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityTrade"
            },
            "nullable": true
          },
          "GLMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLMapping"
            },
            "nullable": true
          },
          "GLCostCenters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLCostCenter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityClientConfig": {
        "required": [
          "Objective"
        ],
        "type": "object",
        "properties": {
          "ReportingDate": {
            "type": "string",
            "format": "date-time"
          },
          "ReportingFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumReportingFrequency"
              }
            ]
          },
          "RetrospectiveEffectivenessMethodID": {
            "type": "integer",
            "format": "int64"
          },
          "ProspectiveEffectivenessMethodID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHRHedgeType"
              }
            ]
          },
          "HedgeRiskType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeRiskType"
              }
            ]
          },
          "ShareGLMapping": {
            "type": "boolean"
          },
          "CVAAddedGLReport": {
            "type": "boolean"
          },
          "Observation": {
            "type": "integer",
            "format": "int32"
          },
          "PeriodSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumPeriodSize"
              }
            ]
          },
          "Objective": {
            "minLength": 1,
            "type": "string"
          },
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgedItemType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgedItemType"
              }
            ]
          },
          "HedgedItemTypeDesc": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ReportCurrency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "EOM": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "ProspectiveClientConfigEffMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEffectivenessMethod"
              }
            ],
            "nullable": true
          },
          "RetrospectiveClientConfigEffMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEffectivenessMethod"
              }
            ],
            "nullable": true
          },
          "Client": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
              }
            ],
            "nullable": true
          },
          "HAEmailText": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "DeliveryAddress": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "HAGLAutoSend": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHAGLAutoSendType"
              }
            ]
          },
          "SplitCashFlowJEReportByPortfolio": {
            "type": "boolean"
          },
          "SplitFairValueJEReportByPortfolio": {
            "type": "boolean"
          },
          "SplitNetInvestmentJEReportByPortfolio": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityCollar": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "CollarStrikeSource": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsCollarStrikeSource"
              }
            ]
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityContact": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "NoticeEvent_Id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "JobTitle": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "CompanyName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "DocType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsCounterpartyDocType"
              }
            ],
            "nullable": true
          },
          "DeliveryMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsMessageDeliveryMethod"
              }
            ],
            "nullable": true
          },
          "Person": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityPerson"
              }
            ],
            "nullable": true
          },
          "ContactContactRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityContactContactRole"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityContactContactRole": {
        "type": "object",
        "properties": {
          "Contact_Id": {
            "type": "integer",
            "format": "int64"
          },
          "ContactRole_Id": {
            "type": "integer",
            "format": "int64"
          },
          "ContactRole": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityContactRole"
              }
            ],
            "nullable": true
          },
          "Contact": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityContact"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityContactRole": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsContactRoles"
              }
            ]
          },
          "AddedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "AddedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "UpdatedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "AddedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "UpdatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "ContactContactRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityContactContactRole"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityCorridor": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityCounterparty": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "CSA": {
            "type": "boolean"
          },
          "Workout": {
            "type": "boolean"
          },
          "IsIndividual": {
            "type": "boolean"
          },
          "TurnOffSendingResets": {
            "type": "boolean"
          },
          "CounterpartyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsCounterpartyType"
              }
            ]
          },
          "CounterpartyExtendedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsCounterpartyExtendedType"
              }
            ]
          },
          "LegalEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityLegalEntity"
              }
            ],
            "nullable": true
          },
          "Fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityFee"
            },
            "nullable": true
          },
          "Trades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityTrade"
            },
            "nullable": true
          },
          "DealerTrades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityTrade"
            },
            "nullable": true
          },
          "TerminationDealerTrades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityTrade"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityCurrency": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Ibor": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "LongName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ShortName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "IconClass": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "AddedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "AddedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "UpdatedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Label": {
            "type": "string",
            "nullable": true
          },
          "Symbol": {
            "type": "string",
            "nullable": true
          },
          "MinorUnitDigits": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SpotLag": {
            "type": "integer",
            "format": "int32"
          },
          "CashLag": {
            "type": "integer",
            "format": "int32"
          },
          "MarketCutOff": {
            "type": "string",
            "format": "date-span",
            "nullable": true
          },
          "PaymentCutOff": {
            "type": "string",
            "format": "date-span",
            "nullable": true
          },
          "IsNdf": {
            "type": "boolean",
            "nullable": true
          },
          "AddedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "UpdatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "Fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityFee"
            },
            "nullable": true
          },
          "Legs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityLeg"
            },
            "nullable": true
          },
          "FxNdfs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityFxNdf"
            },
            "nullable": true
          },
          "BaseFxSingles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityFxSingle"
            },
            "nullable": true
          },
          "CounterFxSingles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityFxSingle"
            },
            "nullable": true
          },
          "BaseFxWindowForwards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityFxWindowForward"
            },
            "nullable": true
          },
          "CounterFxWindowForwards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityFxWindowForward"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityDebt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityDebtOption": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "SwaptionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsSwaptionType"
              }
            ]
          },
          "StartDate": {
            "type": "string",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "BuySell": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsBuySell"
              }
            ]
          },
          "PayerReceiver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPayReceive"
              }
            ],
            "nullable": true
          },
          "PaymentFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPaymentFrequency"
              }
            ],
            "nullable": true
          },
          "NotificationDays": {
            "type": "integer",
            "format": "int32"
          },
          "NotificationDaysType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsNoticeDaysType"
              }
            ]
          },
          "NotificationCalendar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPaymentHolidays"
              }
            ]
          },
          "StartDateDescriptor": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "EndDateDescriptor": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityEffectivenessMethod": {
        "required": [
          "Name"
        ],
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "Name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "IsForRetrospective": {
            "type": "boolean"
          },
          "IsForProspective": {
            "type": "boolean"
          },
          "IsForCashFlow": {
            "type": "boolean"
          },
          "IsForFairValue": {
            "type": "boolean"
          },
          "IsForNetInvestment": {
            "type": "boolean"
          },
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "F3Mapping": {
            "type": "integer",
            "format": "int32"
          },
          "ProspectiveClientConfigs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityClientConfig"
            },
            "nullable": true
          },
          "RetrospectiveClientConfigs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityClientConfig"
            },
            "nullable": true
          },
          "ProspectiveHedgeRegressionBatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatch"
            },
            "nullable": true
          },
          "RetrospectiveHedgeRegressionBatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatch"
            },
            "nullable": true
          },
          "ProspectiveHedgeRelationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
            },
            "nullable": true
          },
          "RetrospectiveHedgeRelationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityEmail": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "From": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ToList": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "BccList": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "CcList": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ReplyToList": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Subject": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Body": {
            "type": "string",
            "nullable": true
          },
          "IsBodyHtml": {
            "type": "boolean"
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsEmailType"
              }
            ]
          },
          "SentTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "RecievedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "SendRec": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsEmailSendReceive"
              }
            ]
          },
          "Regarding": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ErrorMessage": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "UniqueId": {
            "maxLength": 300,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "FromClientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "RouteViaDPIEmailService": {
            "type": "boolean"
          },
          "SendFailed": {
            "type": "boolean"
          },
          "AddedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "AddedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "UpdatedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "EmailGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "FromClient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
              }
            ],
            "nullable": true
          },
          "EmailAttachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityEmailAttachment"
            },
            "nullable": true
          },
          "AddedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "UpdatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityEmailAttachment": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "EmailId": {
            "type": "integer",
            "format": "int64"
          },
          "AttachmentIdFromEws": {
            "maxLength": 300,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Name": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "FileSize": {
            "type": "number",
            "format": "double"
          },
          "FileType": {
            "maxLength": 150,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "StorageLocation": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "DeletedAtSource": {
            "type": "boolean"
          },
          "Body": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "AddedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "AddedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "UpdatedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Email": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEmail"
              }
            ],
            "nullable": true
          },
          "AddedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "UpdatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityEnumActivityType": {
        "enum": [
          "None",
          "RelationshipCreated",
          "RelationshipDrafted",
          "RelationshipRedrafted",
          "RelationshipDesignated",
          "UserRegression",
          "GeneratedInceptionPackage",
          "BackloadRegression",
          "RelationshipDedesignated",
          "RelationshipUpdated",
          "PeriodicRegression",
          "RelationshipRedesignated",
          "RelationshipLinkTrade"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumAmortizationMethod": {
        "enum": [
          "None",
          "TotalCashFlowMethod",
          "Straightline",
          "IntrinsicValueMethod",
          "Swaplet"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumAssetLiability": {
        "enum": [
          "None",
          "Asset",
          "Liability"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumBenchmark": {
        "enum": [
          "None",
          "LIBORUSDBBA3M",
          "SIFMA",
          "OIS",
          "LIBORUSDBBA1M",
          "LIBORUSDBBA6M",
          "Prime",
          "FHLBTopeka",
          "FFUTFDTR",
          "USDTBILL4WH15",
          "SOFR",
          "Other"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumCashPaymentType": {
        "enum": [
          "Full",
          "Partial",
          "None"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumDedesignationReason": {
        "enum": [
          "Termination",
          "Ineffectiveness"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumFairValueMethod": {
        "enum": [
          "None",
          "BenchmarkOnly",
          "AllCashFlows",
          "BenchmarkOnlyStraightCoupon"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumFileType": {
        "enum": [
          "Xls",
          "Xlsx",
          "Doc",
          "Docx",
          "Pdf",
          "Zip"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumHAGLAutoSendType": {
        "enum": [
          "JournalEntryAndRegressionReports",
          "JournalEntryReportOnly",
          "RegressionReportOnly",
          "No"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumHRHedgeType": {
        "enum": [
          "None",
          "CashFlow",
          "FairValue",
          "NetInvestment"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumHedgeAccountingTreatment": {
        "enum": [
          "None",
          "SpotMethod",
          "ForwardMethod"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumHedgeDirection": {
        "enum": [
          "None",
          "All",
          "LimitDownside",
          "LimitUpside",
          "Corridor"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumHedgeExposure": {
        "enum": [
          "None",
          "UnrecognizedFirmCommitment",
          "RecognizedAssetLiability",
          "ForecastedExposure",
          "IntraEntity"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumHedgeRelationshipItemType": {
        "enum": [
          "None",
          "HedgedItem",
          "HedgedItemProxy",
          "HedgingItem",
          "Hypothetical",
          "HypotheticalProxy"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumHedgeResultType": {
        "enum": [
          "None",
          "User",
          "Inception",
          "Periodic",
          "Backload"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumHedgeRiskType": {
        "enum": [
          "None",
          "MarketPrice",
          "InterestRate",
          "ForeignExchange",
          "Credit"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumHedgeState": {
        "enum": [
          "Draft",
          "Designated",
          "Dedesignated"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumHedgedItemType": {
        "enum": [
          "None",
          "Existing",
          "Forecasted"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumHedgingInstrumentStructure": {
        "enum": [
          "SingleInstrument",
          "StructuredProduct",
          "MultipleInstruments"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumInEffMeasurement": {
        "enum": [
          "None",
          "DollarOffset"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumInternalDocQueueCreatedType": {
        "enum": [
          "None",
          "Edge",
          "Manual",
          "Override"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumInternalDocQueueStatus": {
        "enum": [
          "Error",
          "Ready",
          "Sent"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumIntrinsicMethod": {
        "enum": [
          "None",
          "ForwardMethod",
          "SpotMethod"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumOptionTimeValueAmortType": {
        "enum": [
          "Amortization",
          "OptionTimeValue",
          "OptionIntrinsicValue"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumPeriodSize": {
        "enum": [
          "None",
          "Week",
          "Month",
          "Quarter"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumReportingFrequency": {
        "enum": [
          "None",
          "Monthly",
          "Quarterly"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityEnumStandard": {
        "enum": [
          "None",
          "ASC815"
        ],
        "type": "string"
      },
      "DerivativeEDGEHAEntityExceptionsAnalyticsException": {
        "type": "object",
        "properties": {
          "TargetSite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodBase"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "readOnly": true
          },
          "InnerException": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemException"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "HelpLink": {
            "type": "string",
            "nullable": true
          },
          "Source": {
            "type": "string",
            "nullable": true
          },
          "HResult": {
            "type": "integer",
            "format": "int32"
          },
          "StackTrace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityExceptionsDuplicateRegressionException": {
        "type": "object",
        "properties": {
          "TargetSite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodBase"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "readOnly": true
          },
          "InnerException": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemException"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "HelpLink": {
            "type": "string",
            "nullable": true
          },
          "Source": {
            "type": "string",
            "nullable": true
          },
          "HResult": {
            "type": "integer",
            "format": "int32"
          },
          "StackTrace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityExceptionsLaterCurveDataException": {
        "type": "object",
        "properties": {
          "TargetSite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodBase"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "readOnly": true
          },
          "InnerException": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemException"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "HelpLink": {
            "type": "string",
            "nullable": true
          },
          "Source": {
            "type": "string",
            "nullable": true
          },
          "HResult": {
            "type": "integer",
            "format": "int32"
          },
          "StackTrace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityExceptionsRelativeDateException": {
        "type": "object",
        "properties": {
          "TargetSite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodBase"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "readOnly": true
          },
          "InnerException": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemException"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "HelpLink": {
            "type": "string",
            "nullable": true
          },
          "Source": {
            "type": "string",
            "nullable": true
          },
          "HResult": {
            "type": "integer",
            "format": "int32"
          },
          "StackTrace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityExceptionsRetrievalForRegressionException": {
        "type": "object",
        "properties": {
          "TargetSite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodBase"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "readOnly": true
          },
          "InnerException": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemException"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "HelpLink": {
            "type": "string",
            "nullable": true
          },
          "Source": {
            "type": "string",
            "nullable": true
          },
          "HResult": {
            "type": "integer",
            "format": "int32"
          },
          "StackTrace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityExceptionsRetrievalForRegressionInvalidPeriodEndingDateException": {
        "type": "object",
        "properties": {
          "TargetSite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodBase"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "readOnly": true
          },
          "InnerException": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemException"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "HelpLink": {
            "type": "string",
            "nullable": true
          },
          "Source": {
            "type": "string",
            "nullable": true
          },
          "HResult": {
            "type": "integer",
            "format": "int32"
          },
          "StackTrace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityExerciseScheduleItem": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "ProductId": {
            "type": "integer",
            "format": "int64"
          },
          "ExerciseDate": {
            "type": "string",
            "format": "date-time"
          },
          "RollDate": {
            "type": "string",
            "format": "date-time"
          },
          "ExercisePoints": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ExerciseAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "PaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Notional": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "AddedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "AddedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "UpdatedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true
          },
          "AddedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "UpdatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityFee": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "ClientId": {
            "type": "integer",
            "format": "int64"
          },
          "BankEntityId": {
            "type": "integer",
            "format": "int64"
          },
          "CounterpartyId": {
            "type": "integer",
            "format": "int64"
          },
          "CurrencyId": {
            "type": "integer",
            "format": "int64"
          },
          "FeeTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "ParentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsFeeParentType"
              }
            ]
          },
          "PaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "PayRec": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPayReceive"
              }
            ]
          },
          "Amount": {
            "type": "number",
            "format": "double"
          },
          "Comments": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ParentId": {
            "type": "integer",
            "format": "int64"
          },
          "AddedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "AddedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "UpdatedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "BankEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityBankEntity"
              }
            ],
            "nullable": true
          },
          "Client": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
              }
            ],
            "nullable": true
          },
          "Counterparty": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCounterparty"
              }
            ],
            "nullable": true
          },
          "Currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCurrency"
              }
            ],
            "nullable": true
          },
          "FeeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityFeeType"
              }
            ],
            "nullable": true
          },
          "AddedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "UpdatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityFeeType": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Internal": {
            "type": "boolean"
          },
          "IncludeNpv": {
            "type": "boolean"
          },
          "Name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "AddedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "AddedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "UpdatedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityFee"
            },
            "nullable": true
          },
          "GLMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLMapping"
            },
            "nullable": true
          },
          "AddedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "UpdatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityFxNdf": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "SettlingCurrencyId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "FixingDate": {
            "type": "string",
            "format": "date-time"
          },
          "FxIndex": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsFxIndex"
              }
            ]
          },
          "OtherFxIndex": {
            "type": "string",
            "nullable": true
          },
          "FixingTime": {
            "type": "string",
            "format": "date-span",
            "nullable": true
          },
          "Fixing": {
            "type": "number",
            "format": "double"
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true
          },
          "SettlingCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCurrency"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityFxSingle": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "BaseCurrencyId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "CounterCurrencyId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "BaseAmount": {
            "type": "number",
            "format": "double"
          },
          "CounterAmount": {
            "type": "number",
            "format": "double"
          },
          "SettlementDate": {
            "type": "string",
            "format": "date-time"
          },
          "SettlementDateDescriptor": {
            "type": "string",
            "nullable": true
          },
          "SpreadOverMid": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Rate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Mid": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ForwardPoints": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ActualSpread": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true
          },
          "BaseCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCurrency"
              }
            ],
            "nullable": true
          },
          "CounterCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCurrency"
              }
            ],
            "nullable": true
          },
          "IsValidSettlementDateDescriptor": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityFxSwap": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityFxWindowForward": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "BaseCurrencyId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "CounterCurrencyId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "BaseAmount": {
            "type": "number",
            "format": "double"
          },
          "CounterAmount": {
            "type": "number",
            "format": "double"
          },
          "WindowStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "WindowEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "SettlementLag": {
            "type": "integer",
            "format": "int32"
          },
          "MinimumSettlement": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "BaseCurrencyEarliestTime": {
            "type": "string",
            "nullable": true
          },
          "BaseCurrencyLatestTime": {
            "type": "string",
            "nullable": true
          },
          "CounterCurrencyEarliestTime": {
            "type": "string",
            "nullable": true
          },
          "CounterCurrencyLatestTime": {
            "type": "string",
            "nullable": true
          },
          "SpreadOverMid": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Rate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Mid": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ForwardPoints": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Instruction": {
            "type": "string",
            "nullable": true
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true
          },
          "BaseCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCurrency"
              }
            ],
            "nullable": true
          },
          "CounterCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCurrency"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityGLAccount": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "AccountType": {
            "type": "integer",
            "format": "int32"
          },
          "AccountNumber": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "AccountDescription": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ClientId": {
            "type": "integer",
            "format": "int64"
          },
          "BankEntityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "AccountCategoryId": {
            "type": "integer",
            "format": "int64"
          },
          "AddedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "AddedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "UpdatedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "LedgerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "BankEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityBankEntity"
              }
            ],
            "nullable": true
          },
          "Client": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
              }
            ],
            "nullable": true
          },
          "ContraAccountHedgeRelationshipOptionTimeValueAmorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort"
            },
            "nullable": true
          },
          "GLAccountHedgeRelationshipOptionTimeValueAmorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort"
            },
            "nullable": true
          },
          "GLMappingAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLMapping"
            },
            "nullable": true
          },
          "ContraGLMappingAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLMapping"
            },
            "nullable": true
          },
          "AddedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "UpdatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityGLCostCenter": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "CostCenterID": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Description": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ClientId": {
            "type": "integer",
            "format": "int64"
          },
          "BankEntityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "AddedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "AddedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "UpdatedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Client": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
              }
            ],
            "nullable": true
          },
          "BankEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityBankEntity"
              }
            ],
            "nullable": true
          },
          "AddedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "UpdatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "GLMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLMapping"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityGLMapping": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "ProductField": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsSecurityType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Event": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsGLEventType"
              }
            ]
          },
          "FeeTypeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "DrCrField": {
            "type": "integer",
            "format": "int32"
          },
          "DrCr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsDrCr"
              }
            ],
            "readOnly": true
          },
          "GLAccountId": {
            "type": "integer",
            "format": "int64"
          },
          "ContraDrCrField": {
            "type": "integer",
            "format": "int32"
          },
          "ContraDrCr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsDrCr"
              }
            ],
            "readOnly": true
          },
          "ContraGLAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ClientId": {
            "type": "integer",
            "format": "int64"
          },
          "BankEntityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "CostCenterId": {
            "type": "integer",
            "format": "int64"
          },
          "TypeField": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsCounterpartyType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "HedgeTypeField": {
            "type": "integer",
            "format": "int32"
          },
          "HedgeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsHedgeType"
              }
            ],
            "readOnly": true
          },
          "CounterpartyTypeField": {
            "type": "integer",
            "format": "int32"
          },
          "CounterpartyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsGLMappingCounterpartyType"
              }
            ],
            "readOnly": true
          },
          "RPATypeField": {
            "type": "integer",
            "format": "int32"
          },
          "RPAType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsRPAType"
              }
            ],
            "readOnly": true
          },
          "ReverseChangeField": {
            "type": "integer",
            "format": "int32"
          },
          "ReverseChange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsReverseChange"
              }
            ],
            "readOnly": true
          },
          "EventSubtype": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsGLEventSubtype"
              }
            ],
            "nullable": true
          },
          "AddedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "FeeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityFeeType"
              }
            ],
            "nullable": true
          },
          "GLAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLAccount"
              }
            ],
            "nullable": true
          },
          "ContraGLAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLAccount"
              }
            ],
            "nullable": true
          },
          "Client": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
              }
            ],
            "nullable": true
          },
          "BankEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityBankEntity"
              }
            ],
            "nullable": true
          },
          "CostCenter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLCostCenter"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityHedgeAccountingGetHrDocumentNameDescriptionResponse": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityHedgeInceptionMemoTemplate": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "Name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "TemplateDesc": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeInceptionMemoTemplateHedgeRelationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityHedgeRegressionBatch": {
        "type": "object",
        "properties": {
          "DesignationDate": {
            "type": "string",
            "format": "date-time"
          },
          "B0StandardError": {
            "type": "number",
            "format": "double"
          },
          "Observation": {
            "type": "number",
            "format": "double"
          },
          "Slope": {
            "type": "number",
            "format": "double"
          },
          "YIntercept": {
            "type": "number",
            "format": "double"
          },
          "SumYSSResidual": {
            "type": "number",
            "format": "double"
          },
          "SumYMSResidual": {
            "type": "number",
            "format": "double"
          },
          "XMean": {
            "type": "number",
            "format": "double"
          },
          "YMean": {
            "type": "number",
            "format": "double"
          },
          "SumYSSRegression": {
            "type": "number",
            "format": "double"
          },
          "SumYMSRegression": {
            "type": "number",
            "format": "double"
          },
          "FStat": {
            "type": "number",
            "format": "double"
          },
          "R": {
            "type": "number",
            "format": "double"
          },
          "FStatAnalytics": {
            "type": "string",
            "nullable": true
          },
          "B0tStatAnalytics": {
            "type": "string",
            "nullable": true
          },
          "B1tStatAnalytics": {
            "type": "string",
            "nullable": true
          },
          "PeriodSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumPeriodSize"
              }
            ]
          },
          "StandardError": {
            "type": "number",
            "format": "double"
          },
          "RSquared": {
            "type": "number",
            "format": "double"
          },
          "SumXRegression": {
            "type": "number",
            "format": "double"
          },
          "SumSSXRegression": {
            "type": "number",
            "format": "double"
          },
          "B1StandarError": {
            "type": "number",
            "format": "double"
          },
          "B0tStat": {
            "type": "number",
            "format": "double"
          },
          "B1tStat": {
            "type": "number",
            "format": "double"
          },
          "B0PValue": {
            "type": "number",
            "format": "double"
          },
          "B1PValue": {
            "type": "number",
            "format": "double"
          },
          "IsClean": {
            "type": "boolean"
          },
          "IsChanged": {
            "type": "boolean"
          },
          "Enabled": {
            "type": "boolean"
          },
          "PositiveAutoCorrelation": {
            "type": "string",
            "nullable": true
          },
          "NegativeAutoCorrelation": {
            "type": "string",
            "nullable": true
          },
          "D": {
            "type": "number",
            "format": "double"
          },
          "FourMinusD": {
            "type": "number",
            "format": "double"
          },
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRelationshipID": {
            "type": "integer",
            "format": "int64"
          },
          "RetrospectiveEffectivenessMethodID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ProspectiveEffectivenessMethodID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "HedgedRelationshipItemID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgingRelationshipItemID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeResultType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeResultType"
              }
            ]
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "RunDate": {
            "type": "string",
            "format": "date-time"
          },
          "ValueDate": {
            "type": "string",
            "format": "date-time"
          },
          "FairValueMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumFairValueMethod"
              }
            ]
          },
          "RunBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "ProspectiveHedgeRegressionBatchEffMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEffectivenessMethod"
              }
            ],
            "nullable": true
          },
          "RetrospectiveRegressionBatchEffMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEffectivenessMethod"
              }
            ],
            "nullable": true
          },
          "HedgeRelationship": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
              }
            ],
            "nullable": true
          },
          "HedgedRelationshipItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipItem"
              }
            ],
            "nullable": true
          },
          "HedgingRelationshipItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipItem"
              }
            ],
            "nullable": true
          },
          "HedgeRegressionBatchResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatchResult"
            },
            "nullable": true
          },
          "HedgeRelationshipLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipLog"
            },
            "nullable": true
          },
          "ProspectiveDescription": {
            "type": "string",
            "nullable": true
          },
          "RetrospectiveDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityHedgeRegressionBatchResult": {
        "required": [
          "ResultType"
        ],
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRegressionBatchID": {
            "type": "integer",
            "format": "int64"
          },
          "ResultType": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "ValueDate": {
            "type": "string",
            "format": "date-time"
          },
          "HedgedFairValue": {
            "type": "number",
            "format": "double"
          },
          "HedgedFairValueChanged": {
            "type": "number",
            "format": "double"
          },
          "HedgingFairValue": {
            "type": "number",
            "format": "double"
          },
          "HedgingFairValueChanged": {
            "type": "number",
            "format": "double"
          },
          "F3FormatType": {
            "type": "integer",
            "format": "int32"
          },
          "TimeValueIncludedInRegression": {
            "type": "boolean"
          },
          "OptionTimeValue": {
            "type": "number",
            "format": "double"
          },
          "ObservationEvent": {
            "type": "boolean"
          },
          "HedgeRegressionBatch": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatch"
              }
            ],
            "nullable": true
          },
          "PriorHedgeRegressionBatchResult": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatchResult"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "AdjustedValue": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityHedgeRegressionQueue": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "ClientId": {
            "type": "integer",
            "format": "int64"
          },
          "Client": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
              }
            ],
            "nullable": true
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsHARegressionQueueStatus"
              }
            ],
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "DeliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "EmailSent": {
            "type": "boolean",
            "nullable": true
          },
          "NoContactExists": {
            "type": "boolean",
            "nullable": true
          },
          "FileName": {
            "type": "string",
            "nullable": true
          },
          "ReportDate": {
            "type": "string",
            "format": "date-time"
          },
          "CurveDate": {
            "type": "string",
            "format": "date-time"
          },
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "OOB": {
            "type": "boolean",
            "nullable": true
          },
          "ClientName": {
            "type": "string",
            "nullable": true
          },
          "ClientShortName": {
            "type": "string",
            "nullable": true
          },
          "Recipients": {
            "type": "string",
            "nullable": true
          },
          "DeliveryStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityHedgeRegressionQueueNew": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "ClientId": {
            "type": "integer",
            "format": "int64"
          },
          "Client": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
              }
            ],
            "nullable": true
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsHARegressionQueueStatus"
              }
            ],
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "DeliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "EmailSent": {
            "type": "boolean",
            "nullable": true
          },
          "NoContactExists": {
            "type": "boolean",
            "nullable": true
          },
          "FileName": {
            "type": "string",
            "nullable": true
          },
          "ReportDate": {
            "type": "string",
            "format": "date-time"
          },
          "CurveDate": {
            "type": "string",
            "format": "date-time"
          },
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "OOB": {
            "type": "boolean",
            "nullable": true
          },
          "DocumentType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientName": {
            "type": "string",
            "nullable": true
          },
          "ClientShortName": {
            "type": "string",
            "nullable": true
          },
          "Recipients": {
            "type": "string",
            "nullable": true
          },
          "DeliveryStatus": {
            "type": "string",
            "nullable": true
          },
          "HAGLAutoSend": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "HAGLAutoSendString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityHedgeRelationship": {
        "type": "object",
        "properties": {
          "ForeignCurrencyAfterTaxBasis": {
            "type": "boolean"
          },
          "CounterpartyCreditRisk": {
            "type": "boolean"
          },
          "IncomeTaxDesignation": {
            "type": "boolean"
          },
          "CumulativeChanges": {
            "type": "boolean"
          },
          "PeriodicChanges": {
            "type": "boolean"
          },
          "AmortizeOptionPremimum": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "ClientID": {
            "type": "integer",
            "format": "int64"
          },
          "BankEntityID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHRHedgeType"
              }
            ]
          },
          "AvailableForSale": {
            "type": "boolean",
            "nullable": true
          },
          "HedgeRiskType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeRiskType"
              }
            ]
          },
          "RetrospectiveEffectivenessMethodID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ProspectiveEffectivenessMethodID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "InceptionMemoTemplateID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "InceptionMemoTemplateDesc": {
            "type": "string",
            "nullable": true
          },
          "DesignationDate": {
            "type": "string",
            "format": "date-time"
          },
          "DedesignationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Standard": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumStandard"
              }
            ]
          },
          "GenerateInception": {
            "type": "boolean"
          },
          "TaxPurposes": {
            "type": "boolean"
          },
          "CVAAddedGLReport": {
            "type": "boolean"
          },
          "HedgeDirection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeDirection"
              }
            ]
          },
          "InEffMeasurement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumInEffMeasurement"
              }
            ]
          },
          "ReportingFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumReportingFrequency"
              }
            ]
          },
          "PeriodSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumPeriodSize"
              }
            ]
          },
          "Observation": {
            "type": "integer",
            "format": "int32"
          },
          "ReportCurrency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "IsAnOptionHedge": {
            "type": "boolean"
          },
          "IsDeltaMatchOption": {
            "type": "boolean",
            "nullable": true
          },
          "HedgeState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeState"
              }
            ]
          },
          "Notional": {
            "type": "number",
            "format": "double"
          },
          "Objective": {
            "type": "string",
            "nullable": true
          },
          "HedgeResultType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeResultType"
              }
            ]
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "EOM": {
            "type": "boolean"
          },
          "Shortcut": {
            "type": "boolean"
          },
          "Enabled": {
            "type": "boolean"
          },
          "AmortizationMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumAmortizationMethod"
              }
            ]
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "Benchmark": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumBenchmark"
              }
            ]
          },
          "HedgeExposure": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeExposure"
              }
            ],
            "nullable": true
          },
          "ExposureCurrency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "HedgedItemType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgedItemType"
              }
            ]
          },
          "HedgedItemTypeDesc": {
            "type": "string",
            "nullable": true
          },
          "FairValueMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumFairValueMethod"
              }
            ]
          },
          "OptionPremium": {
            "type": "number",
            "format": "double"
          },
          "HedgeAccountingTreatment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeAccountingTreatment"
              }
            ],
            "nullable": true
          },
          "AssetLiability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumAssetLiability"
              }
            ]
          },
          "BankEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityBankEntity"
              }
            ],
            "nullable": true
          },
          "Client": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
              }
            ],
            "nullable": true
          },
          "ProspectiveEffectivenessMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEffectivenessMethod"
              }
            ],
            "nullable": true
          },
          "RetrospectiveEffectivenessMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEffectivenessMethod"
              }
            ],
            "nullable": true
          },
          "HedgeInceptionMemoTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeInceptionMemoTemplate"
              }
            ],
            "nullable": true
          },
          "RedesignationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "HedgeRegressionBatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatch"
            },
            "nullable": true
          },
          "HedgeRelationshipActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipActivity"
            },
            "nullable": true
          },
          "HedgeRelationshipItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipItem"
            },
            "nullable": true
          },
          "HedgeRelationshipOptionTimeValueAmorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort"
            },
            "nullable": true
          },
          "HedgeRelationshipLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipLog"
            },
            "nullable": true
          },
          "Payment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Accrual": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "BasisAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "BasisAdjustmentBalance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "CashPaymentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumCashPaymentType"
              }
            ],
            "nullable": true
          },
          "HedgedExposureExist": {
            "type": "boolean",
            "nullable": true
          },
          "DedesignationReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumDedesignationReason"
              }
            ],
            "nullable": true
          },
          "Redesignated": {
            "type": "boolean"
          },
          "Acquisition": {
            "type": "boolean"
          },
          "ExcludeIntrinsicValue": {
            "type": "boolean",
            "nullable": true
          },
          "IntrinsicMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumIntrinsicMethod"
              }
            ],
            "nullable": true
          },
          "OffMarket": {
            "type": "boolean"
          },
          "QualitativeAssessment": {
            "type": "boolean"
          },
          "PreIssuanceHedge": {
            "type": "boolean"
          },
          "PortfolioLayerMethod": {
            "type": "boolean"
          },
          "HedgingInstrumentStructure": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgingInstrumentStructure"
              }
            ]
          },
          "IsHAOptIntEnabled": {
            "type": "boolean"
          },
          "MarkAsAcquisition": {
            "type": "boolean"
          },
          "ValueDate": {
            "type": "string",
            "format": "date-time"
          },
          "HedgedItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipItem"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "HedgingItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipItem"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "HedgedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipItem"
            },
            "nullable": true
          },
          "HedgingItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipItem"
            },
            "nullable": true
          },
          "LatestHedgeRegressionBatch": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatch"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "HedgeRegressionForExport": {
            "type": "integer",
            "format": "int64"
          },
          "HasDesignatedTrade": {
            "type": "boolean"
          },
          "HedgeTypeText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "HedgeRiskTypeText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "StandardText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "HedgeDirectionText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "InEffMeasurementText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ReportingFrequencyText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "PeriodSizeText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "HedgeStateText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "HedgeResultTypekText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "BenchmarkText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "HedgeExposureText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "HedgeAccountingTreatmentText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "HedgedItemTypeText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "FairValueMethodText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "AssetLiabilityText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "HedgeExposureExist": {
            "type": "boolean"
          },
          "TimeValuesStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "TimeValuesEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "TimeValuesFrontRollDate": {
            "type": "string",
            "format": "date-time"
          },
          "TimeValuesBackRollDate": {
            "type": "string",
            "format": "date-time"
          },
          "DayCountConv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsDayCountConv"
              }
            ]
          },
          "PaymentFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPaymentFrequency"
              }
            ]
          },
          "PayBusDayConv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPayBusDayConv"
              }
            ]
          },
          "AdjustedDates": {
            "type": "boolean"
          },
          "SelectedHedgeRelationshipOptionTimeValueAmortID": {
            "type": "integer",
            "format": "int64"
          },
          "DuplicateRegressionExceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityExceptionsDuplicateRegressionException"
            },
            "nullable": true
          },
          "LaterCurveDataExceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityExceptionsLaterCurveDataException"
            },
            "nullable": true
          },
          "KeyNotFoundExceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemCollectionsGenericKeyNotFoundException"
            },
            "nullable": true
          },
          "NotSupportedExceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemNotSupportedException"
            },
            "nullable": true
          },
          "HttpExceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemException"
            },
            "nullable": true
          },
          "AnalyticsExceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityExceptionsAnalyticsException"
            },
            "nullable": true
          },
          "Exceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemException"
            },
            "nullable": true
          },
          "RelativeDateExceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityExceptionsRelativeDateException"
            },
            "nullable": true
          },
          "HasExceptions": {
            "type": "boolean",
            "readOnly": true
          },
          "FirstException": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemException"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "RetrievalForRegressionExceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityExceptionsRetrievalForRegressionException"
            },
            "nullable": true
          },
          "RetrievalForRegressionInvalidPeriodEndingDateExceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityExceptionsRetrievalForRegressionInvalidPeriodEndingDateException"
            },
            "nullable": true
          },
          "DeDesignation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipDeDesignation"
              }
            ],
            "nullable": true
          },
          "AnalyticsInstanceIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AnalyticsInstanceCount": {
            "type": "integer",
            "format": "int32"
          },
          "HedgeRelationshipOptionTimeValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort"
            },
            "nullable": true
          },
          "HedgedPremium": {
            "type": "number",
            "format": "double"
          },
          "HedgingPremium": {
            "type": "number",
            "format": "double"
          },
          "IsRunPeriodicRegressionPriorDedesignation": {
            "type": "boolean"
          },
          "HedgingInstrumentStructureText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityHedgeRelationshipActivity": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRelationshipID": {
            "type": "integer",
            "format": "int64"
          },
          "ActivityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumActivityType"
              }
            ]
          },
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "CreatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "HedgeRelationship": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityHedgeRelationshipAmortizationForJournalEntry": {
        "type": "object",
        "properties": {
          "LinkID": {
            "type": "integer",
            "format": "int64"
          },
          "GLAccountID": {
            "type": "integer",
            "format": "int64"
          },
          "ContraGLAccountID": {
            "type": "integer",
            "format": "int64"
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "Periodic": {
            "type": "number",
            "format": "double"
          },
          "PriorPeriodic": {
            "type": "number",
            "format": "double"
          },
          "IsStart": {
            "type": "boolean"
          },
          "CurrentTotal": {
            "type": "number",
            "format": "double"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time"
          },
          "OptionValueTypeAsEnum": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumOptionTimeValueAmortType"
              }
            ]
          },
          "OptionValueType": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityHedgeRelationshipDeDesignation": {
        "type": "object",
        "properties": {
          "DedesignationDate": {
            "type": "string",
            "format": "date-time"
          },
          "Payment": {
            "type": "number",
            "format": "double"
          },
          "Accrual": {
            "type": "number",
            "format": "double"
          },
          "TimeValuesEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "CashPaymentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumCashPaymentType"
              }
            ],
            "nullable": true
          },
          "HedgedExposureExist": {
            "type": "boolean"
          },
          "BasisAdjustment": {
            "type": "number",
            "format": "double"
          },
          "BasisAdjustmentBalance": {
            "type": "number",
            "format": "double"
          },
          "ShowBasisAdjustmentBalance": {
            "type": "boolean"
          },
          "ErrorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityHedgeRelationshipForJournalEntry": {
        "type": "object",
        "properties": {
          "LinkID": {
            "type": "integer",
            "format": "int64"
          },
          "Shortcut": {
            "type": "boolean"
          },
          "HedgedItemID": {
            "type": "string",
            "nullable": true
          },
          "HedgingItemID": {
            "type": "string",
            "nullable": true
          },
          "HedgedItemFairValueChanged": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "HedgingFairValueChanged": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "RSquared": {
            "type": "number",
            "format": "double"
          },
          "Slope": {
            "type": "number",
            "format": "double"
          },
          "MTMAmortization": {
            "type": "number",
            "format": "double"
          },
          "FVBasisAmortization": {
            "type": "number",
            "format": "double"
          },
          "IsAnOptionHedge": {
            "type": "boolean"
          },
          "AssetLiability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumAssetLiability"
              }
            ]
          },
          "IsAnOptionHedgePriorTermination": {
            "type": "boolean"
          },
          "HighlyEffective": {
            "type": "boolean",
            "readOnly": true
          },
          "CFOptionAmortizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipAmortizationForJournalEntry"
            },
            "nullable": true
          },
          "Amortizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipAmortizationForJournalEntry"
            },
            "nullable": true
          },
          "AmortizationsPriorPeriod": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipAmortizationForJournalEntry"
            },
            "nullable": true
          },
          "AmortizationSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionAmortForJournalEntry"
            },
            "nullable": true
          },
          "FullyTerminated": {
            "type": "boolean"
          },
          "Payment": {
            "type": "number",
            "format": "double"
          },
          "Accrual": {
            "type": "number",
            "format": "double"
          },
          "BasisAdjustment": {
            "type": "number",
            "format": "double"
          },
          "BasisAdjustmentBalance": {
            "type": "number",
            "format": "double"
          },
          "DesignationDate": {
            "type": "string",
            "format": "date-time"
          },
          "HedgedExposureExist": {
            "type": "boolean",
            "nullable": true
          },
          "AvailableForSale": {
            "type": "boolean",
            "nullable": true
          },
          "Goodwill": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipAmortizationForJournalEntry"
              }
            ],
            "nullable": true
          },
          "Acquisition": {
            "type": "boolean"
          },
          "LastPaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "OptionPremiumAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "HedgedRiskTypeAsEnum": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeRiskType"
              }
            ]
          },
          "HedgedRiskType": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "HRHedgeTypeAsEnum": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHRHedgeType"
              }
            ]
          },
          "HRHedgeType": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "ClientID": {
            "type": "integer",
            "format": "int64"
          },
          "BankEntityID": {
            "type": "integer",
            "format": "int64"
          },
          "OffMarket": {
            "type": "boolean"
          },
          "QualitativeAssessment": {
            "type": "boolean"
          },
          "HedgingInstrumentStructure": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "HedgingInstrumentStructureAsEnum": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgingInstrumentStructure"
              }
            ]
          },
          "RowID": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityHedgeRelationshipItem": {
        "required": [
          "Description",
          "ItemID"
        ],
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "ParentID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "HedgeRelationshipID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRelationshipItemType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHedgeRelationshipItemType"
              }
            ]
          },
          "ItemID": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "SecurityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsSecurityType"
              }
            ]
          },
          "Description": {
            "minLength": 1,
            "type": "string"
          },
          "Spread": {
            "type": "number",
            "format": "double"
          },
          "Rate": {
            "type": "number",
            "format": "double"
          },
          "Notional": {
            "type": "number",
            "format": "double"
          },
          "EffectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "MaturityDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "TradeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "BuySell": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsBuySell"
              }
            ],
            "nullable": true
          },
          "CapFloor": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PutCall": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPutCall"
              }
            ],
            "nullable": true
          },
          "Strike": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "CounterPartyId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ItemStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsTradeStatus"
              }
            ]
          },
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgedRegressionBatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatch"
            },
            "nullable": true
          },
          "HedgingRegressionBatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatch"
            },
            "nullable": true
          },
          "HedgeRelationship": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
              }
            ],
            "nullable": true
          },
          "SubHedgeRelationshipItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipItem"
            },
            "nullable": true
          },
          "ParentHedgeRelationshipItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipItem"
              }
            ],
            "nullable": true
          },
          "HedgeRelationshipItemLegs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipItemLeg"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityHedgeRelationshipItemLeg": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRelationshipItemID": {
            "type": "integer",
            "format": "int64"
          },
          "PayRec": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPayRec"
              }
            ]
          },
          "FixFlt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsFixFlt"
              }
            ]
          },
          "FixedRate": {
            "type": "number",
            "format": "double"
          },
          "IdxPct": {
            "type": "number",
            "format": "double"
          },
          "ResetFreq": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsResetFrequency"
              }
            ],
            "nullable": true
          },
          "IndexTenor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsIndexTenor"
              }
            ],
            "nullable": true
          },
          "CmpdgPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsCompoundingPeriod"
              }
            ],
            "nullable": true
          },
          "Index": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "HedgeRelationshipItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipItem"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityHedgeRelationshipLog": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRelationshipID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRegressionBatchID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Key": {
            "type": "string",
            "nullable": true
          },
          "Level": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          },
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRelationship": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
              }
            ],
            "nullable": true
          },
          "HedgeRegressionBatch": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatch"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityHedgeRelationshipOptionAmortForJournalEntry": {
        "type": "object",
        "properties": {
          "LinkID": {
            "type": "integer",
            "format": "int64"
          },
          "GLAccountID": {
            "type": "integer",
            "format": "int64"
          },
          "ContraGLAccountID": {
            "type": "integer",
            "format": "int64"
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "OptionValueTypeAsEnum": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumOptionTimeValueAmortType"
              }
            ]
          },
          "OptionValueType": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "FirstPaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "LastPaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRelationshipID": {
            "type": "integer",
            "format": "int64"
          },
          "GLAccountID": {
            "type": "integer",
            "format": "int64"
          },
          "ContraAccountID": {
            "type": "integer",
            "format": "int64"
          },
          "PaymentFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPaymentFrequency"
              }
            ]
          },
          "DayCountConv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsDayCountConv"
              }
            ]
          },
          "PayBusDayConv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPayBusDayConv"
              }
            ]
          },
          "StartDate": {
            "type": "string",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "format": "date-time"
          },
          "FrontRollDate": {
            "type": "string",
            "format": "date-time"
          },
          "BackRollDate": {
            "type": "string",
            "format": "date-time"
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "TotalDCF": {
            "type": "number",
            "format": "double"
          },
          "Straightline": {
            "type": "boolean"
          },
          "FinancialCenter": {
            "type": "string",
            "nullable": true
          },
          "IncludeInRegression": {
            "type": "boolean"
          },
          "AdjDates": {
            "type": "boolean"
          },
          "OptionTimeValueAmortType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumOptionTimeValueAmortType"
              }
            ]
          },
          "AmortizationMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumAmortizationMethod"
              }
            ]
          },
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ContraAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLAccount"
              }
            ],
            "nullable": true
          },
          "GLAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLAccount"
              }
            ],
            "nullable": true
          },
          "HedgeRelationship": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationship"
              }
            ],
            "nullable": true
          },
          "OptionTimeValueAmortRollSchedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityOptionTimeValueAmortRollSchedule"
            },
            "nullable": true
          },
          "OptionAmortizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityOptionAmortization"
            },
            "nullable": true
          },
          "OptionSwapletAmortizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityOptionSwapletAmortization"
            },
            "nullable": true
          },
          "FinancialCenters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsFinancialCenter"
            },
            "nullable": true
          },
          "IVGLAccountID": {
            "type": "integer",
            "format": "int64"
          },
          "IVContraAccountID": {
            "type": "integer",
            "format": "int64"
          },
          "IVAmortizationMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumAmortizationMethod"
              }
            ]
          },
          "IntrinsicValue": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityHedgeRelationshipReDesignation": {
        "type": "object",
        "properties": {
          "RedesignationDate": {
            "type": "string",
            "format": "date-time"
          },
          "TimeValuesStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "TimeValuesEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "DayCountConv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsDayCountConv"
              }
            ]
          },
          "PaymentFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPaymentFrequency"
              }
            ]
          },
          "PayBusDayConv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPayBusDayConv"
              }
            ]
          },
          "AdjustedDates": {
            "type": "boolean"
          },
          "MarkAsAcquisition": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityInternalDocumentQueue": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "CurveDate": {
            "type": "string",
            "format": "date-time"
          },
          "ClientId": {
            "type": "integer",
            "format": "int64"
          },
          "HRHedgeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHRHedgeType"
              }
            ]
          },
          "FileName": {
            "type": "string",
            "nullable": true
          },
          "CreatedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumInternalDocQueueCreatedType"
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumInternalDocQueueStatus"
              }
            ]
          },
          "OOBCheck": {
            "type": "boolean",
            "nullable": true
          },
          "FailedOOBTrades": {
            "type": "string",
            "nullable": true
          },
          "ClosingtoOpenCheck": {
            "type": "boolean",
            "nullable": true
          },
          "FailedClosingtoOpenCheckTrades": {
            "type": "string",
            "nullable": true
          },
          "TradeCountCheck": {
            "type": "boolean",
            "nullable": true
          },
          "FailedTradeCounts": {
            "type": "string",
            "nullable": true
          },
          "SentOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ReversalCheck": {
            "type": "boolean",
            "nullable": true
          },
          "FailedReversalCheckTrades": {
            "type": "string",
            "nullable": true
          },
          "BACheck": {
            "type": "boolean",
            "nullable": true
          },
          "FailedBACheckTrades": {
            "type": "string",
            "nullable": true
          },
          "DocumentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEdgeDocumentsServiceApiClientDocumentType"
              }
            ],
            "nullable": true
          },
          "Recipient": {
            "type": "string",
            "nullable": true
          },
          "OOBCheckDesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClosingtoOpenCheckDesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "TradeCountCheckDesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ReversalCheckDesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "BACheckDesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "FullPathName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityLeg": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "EffectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "MaturityDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "FrontRollDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "BackRollDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "PayRec": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPayRec"
              }
            ]
          },
          "FixFlt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsFixFlt"
              }
            ]
          },
          "Notional": {
            "type": "number",
            "format": "double"
          },
          "DayCount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsDayCountConv"
              }
            ]
          },
          "Index": {
            "type": "integer",
            "format": "int64"
          },
          "IndexTenor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsIndexTenor"
              }
            ],
            "nullable": true
          },
          "PymtFreq": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPaymentFrequency"
              }
            ]
          },
          "PymtConv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPayBusDayConv"
              }
            ]
          },
          "AvgFreq": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsAvgFreq"
              }
            ]
          },
          "AvgType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsAvgType"
              }
            ]
          },
          "AvgPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsAvgPeriod"
              }
            ],
            "nullable": true
          },
          "ResetType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsResetType"
              }
            ],
            "nullable": true
          },
          "ResetLag": {
            "type": "integer",
            "format": "int32"
          },
          "Rate": {
            "type": "number",
            "format": "double"
          },
          "Spread": {
            "type": "number",
            "format": "double"
          },
          "ResetConv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPayBusDayConv"
              }
            ],
            "nullable": true
          },
          "IdxPct": {
            "type": "number",
            "format": "double"
          },
          "AdjustDates": {
            "type": "boolean"
          },
          "PymntHolidays": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPaymentHolidays"
              }
            ]
          },
          "RateFirstReset": {
            "type": "number",
            "format": "double"
          },
          "CmpdgPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsCompoundingPeriod"
              }
            ],
            "nullable": true
          },
          "ResetFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsResetFrequency"
              }
            ],
            "nullable": true
          },
          "ResetHolidays": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsResetHoliday"
              }
            ],
            "nullable": true
          },
          "RoundingMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsRoundingMethod"
              }
            ],
            "nullable": true
          },
          "RoundingDecimalPlaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "RoundingFraction": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "CurrencyId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Modifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsModifier"
              }
            ],
            "nullable": true
          },
          "Weighted": {
            "type": "boolean"
          },
          "EffectiveDateDescriptor": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "MaturityDateDescriptor": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "TermYears": {
            "type": "number",
            "format": "double"
          },
          "TermMonths": {
            "type": "number",
            "format": "double"
          },
          "AmortYears": {
            "type": "number",
            "format": "double"
          },
          "AmortMonths": {
            "type": "number",
            "format": "double"
          },
          "AmortRate": {
            "type": "number",
            "format": "double"
          },
          "AmortDayCount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsAmortDayCount"
              }
            ],
            "nullable": true
          },
          "AmortType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsAmortizationType"
              }
            ]
          },
          "AmortAdjustDates": {
            "type": "boolean"
          },
          "AmortInterestOnlyPeriods": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AmortFitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsAmortFitType"
              }
            ],
            "nullable": true
          },
          "AmortAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "AmortEveryNPeriods": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AmortStartingPeriod": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AmortCalcEffectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "AmortCalcFrontRollDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "AmortCalcBackRollDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "AmortCalcMaturityDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "AmortPayment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "AmortCalcDayCount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsDayCountConv"
              }
            ],
            "nullable": true
          },
          "RollDay": {
            "type": "integer",
            "format": "int32"
          },
          "CustomFlows": {
            "type": "boolean"
          },
          "IsExisting": {
            "type": "boolean"
          },
          "Tenor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "AdjustMaturityDates": {
            "type": "boolean"
          },
          "PrincipalRounding": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsRoundingMethod"
              }
            ]
          },
          "PrincipalRoundTo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsRoundTo"
              }
            ]
          },
          "InterestRounding": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsRoundingMethod"
              }
            ]
          },
          "PaymentRounding": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsRoundingMethod"
              }
            ]
          },
          "PaymentRoundTo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsRoundTo"
              }
            ]
          },
          "AmortInterestOnlyAmounts": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "AmortConduit": {
            "type": "string",
            "nullable": true
          },
          "ModifiedMortgageAveragingPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "UserSpecifiedModifiedMortgageAveragingPeriod": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "FrontResetDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "BackResetDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "LinkFixedRateAndAmortRate": {
            "type": "boolean"
          },
          "EOM": {
            "type": "boolean",
            "nullable": true
          },
          "Amortizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityAmortization"
            },
            "nullable": true
          },
          "CashFlows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityCashFlow"
            },
            "nullable": true
          },
          "Currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCurrency"
              }
            ],
            "nullable": true
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true
          },
          "IsValidEffectiveDateDescriptor": {
            "type": "boolean",
            "readOnly": true
          },
          "IsValidMaturityDateDescriptor": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityLegalEntity": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Name": {
            "maxLength": 300,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ShortName": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ParentClientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsLegalEntityStatus"
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsLegalEntityType"
              }
            ]
          },
          "Address_Zip": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Address_City": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Address_State": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Address_Country": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Address_Street1": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Address_Street2": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "CreditSpread": {
            "type": "number",
            "format": "double"
          },
          "RecoveryRate": {
            "type": "number",
            "format": "double"
          },
          "CICI": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "DTCCID": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "DocType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsCounterpartyDocType"
              }
            ],
            "nullable": true
          },
          "ComplianceStage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsStages"
              }
            ],
            "nullable": true
          },
          "TradeStatusRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsTradeStatusRule"
              }
            ],
            "nullable": true
          },
          "EndUserReportDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "AddedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "AddedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "UpdatedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "BankEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityBankEntity"
              }
            ],
            "nullable": true
          },
          "Client": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
              }
            ],
            "nullable": true
          },
          "ParentClient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
              }
            ],
            "nullable": true
          },
          "Counterparty": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCounterparty"
              }
            ],
            "nullable": true
          },
          "AddedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "UpdatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "LegalEntityHistoricalValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityLegalEntityHistoricalValue"
            },
            "nullable": true
          },
          "Persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityPerson"
            },
            "nullable": true
          },
          "ComputedCreditSpread": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "ComputedRecoveryRate": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "CurrencyId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityLegalEntityHistoricalValue": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "LegalEntityId": {
            "type": "integer",
            "format": "int64"
          },
          "EffectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "CreditSpread": {
            "type": "number",
            "format": "double"
          },
          "RecoveryRate": {
            "type": "number",
            "format": "double"
          },
          "AddedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "AddedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "UpdatedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "LegalEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityLegalEntity"
              }
            ],
            "nullable": true
          },
          "AddedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "UpdatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityNotification": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "UserId": {
            "type": "integer",
            "format": "int64"
          },
          "NotificationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsNotificationType"
              }
            ]
          },
          "MessageType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsMessageType"
              }
            ]
          },
          "Preference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPreference"
              }
            ]
          },
          "Message": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Value": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Target": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Processed": {
            "type": "boolean"
          },
          "AddedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "AddedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "UpdatedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "AddedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "UpdatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityOptionAmortization": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRelationshipOptionTimeValueAmortID": {
            "type": "integer",
            "format": "int64"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "format": "date-time"
          },
          "FixingDate": {
            "type": "string",
            "format": "date-time"
          },
          "PaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "Amount1": {
            "type": "number",
            "format": "double"
          },
          "Amount2": {
            "type": "number",
            "format": "double"
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "Weight": {
            "type": "number",
            "format": "double"
          },
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRelationshipOptionTimeValueAmort": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityOptionSwapletAmortization": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRelationshipOptionTimeValueAmortID": {
            "type": "integer",
            "format": "int64"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Days": {
            "type": "integer",
            "format": "int32"
          },
          "PaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ResetDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Strike": {
            "type": "number",
            "format": "double"
          },
          "DayCountFraction": {
            "type": "number",
            "format": "double"
          },
          "DiscFactor": {
            "type": "number",
            "format": "double"
          },
          "Notional": {
            "type": "number",
            "format": "double"
          },
          "Rate": {
            "type": "number",
            "format": "double"
          },
          "Spread": {
            "type": "number",
            "format": "double"
          },
          "OptValue": {
            "type": "number",
            "format": "double"
          },
          "OptIntrinsicValue": {
            "type": "number",
            "format": "double"
          },
          "OptTimeValue": {
            "type": "number",
            "format": "double"
          },
          "MonthEnding": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "CycleIncluded": {
            "type": "integer",
            "format": "int32"
          },
          "CycleExcluded": {
            "type": "integer",
            "format": "int32"
          },
          "CycleIncludedAmount": {
            "type": "number",
            "format": "double"
          },
          "CycleAdjustedAmount": {
            "type": "number",
            "format": "double"
          },
          "OptIntrinsicValueAccrued": {
            "type": "number",
            "format": "double"
          },
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRelationshipOptionTimeValueAmort": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityOptionTimeValueAmortRollSchedule": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRelationshipOptionTimeValueAmortID": {
            "type": "integer",
            "format": "int64"
          },
          "DCF": {
            "type": "number",
            "format": "double"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "format": "date-time"
          },
          "PaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "Fraction": {
            "type": "number",
            "format": "double"
          },
          "Periodic": {
            "type": "number",
            "format": "double"
          },
          "Enabled": {
            "type": "boolean"
          },
          "CreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedByID": {
            "type": "integer",
            "format": "int64"
          },
          "ModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "ModifiedByID": {
            "type": "integer",
            "format": "int64"
          },
          "HedgeRelationshipOptionTimeValueAmort": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipOptionTimeValueAmort"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityPerson": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Title": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "FirstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "LastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Fax": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "WorkPhone": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "HomePhone": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "MobilePhone": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "BelongingLegalEntityId": {
            "type": "integer",
            "format": "int64"
          },
          "Address_Zip": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Address_City": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Address_State": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Address_Country": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Address_Street1": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Address_Street2": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "CareOf": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "AddedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "AddedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "UpdatedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "SalesTeamGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "BankEntityPersons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityBankEntityPerson"
            },
            "nullable": true
          },
          "Contact": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityContact"
              }
            ],
            "nullable": true
          },
          "BelongingLegalEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityLegalEntity"
              }
            ],
            "nullable": true
          },
          "AddedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "UpdatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "FullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "BelongingLegalEntityIDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityProduct": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "TradeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ParentProductId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "LegGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "AddedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "AddedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "UpdatedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "CallableDebt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCallableDebt"
              }
            ],
            "nullable": true
          },
          "Cancelable": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCancelable"
              }
            ],
            "nullable": true
          },
          "CapFloor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCapFloor"
              }
            ],
            "nullable": true
          },
          "Collar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCollar"
              }
            ],
            "nullable": true
          },
          "Debt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityDebt"
              }
            ],
            "nullable": true
          },
          "DebtOption": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityDebtOption"
              }
            ],
            "nullable": true
          },
          "FxNdf": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityFxNdf"
              }
            ],
            "nullable": true
          },
          "FxSingle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityFxSingle"
              }
            ],
            "nullable": true
          },
          "FxSwap": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityFxSwap"
              }
            ],
            "nullable": true
          },
          "FxWindowForward": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityFxWindowForward"
              }
            ],
            "nullable": true
          },
          "ExerciseScheduleItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityExerciseScheduleItem"
            },
            "nullable": true
          },
          "Leg": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityLeg"
              }
            ],
            "nullable": true
          },
          "SubProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
            },
            "nullable": true
          },
          "ParentProduct": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true
          },
          "Trade": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityTrade"
              }
            ],
            "nullable": true
          },
          "AddedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "UpdatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "Swap": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntitySwap"
              }
            ],
            "nullable": true
          },
          "Corridor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCorridor"
              }
            ],
            "nullable": true
          },
          "SwapEmbeddedOption": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntitySwapEmbeddedOption"
              }
            ],
            "nullable": true
          },
          "Swaption": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntitySwaption"
              }
            ],
            "nullable": true
          },
          "Cap": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCapFloor"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Floor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCapFloor"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "PayLeg": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityLeg"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "RecLeg": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityLeg"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "PrimaryProduct": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "PrimaryLeg": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityLeg"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Spread": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LowStrike": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCapFloor"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "HighStrike": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCapFloor"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityRequestsHedgeRegressionQueueRequest": {
        "type": "object",
        "properties": {
          "ClientId": {
            "type": "integer",
            "format": "int64"
          },
          "CurveDate": {
            "type": "string",
            "format": "date-time"
          },
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "FileName": {
            "type": "string",
            "nullable": true
          },
          "Enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityRequestsHedgeRegressionQueueSearchRequest": {
        "type": "object",
        "properties": {
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "PageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "SortColumn": {
            "type": "string",
            "nullable": true
          },
          "SortDirection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsSortDirection"
              }
            ]
          },
          "GlobalText": {
            "type": "string",
            "nullable": true
          },
          "Sort": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsSortDirection"
            },
            "nullable": true
          },
          "Groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ClientId": {
            "type": "integer",
            "format": "int64"
          },
          "ClientName": {
            "type": "string",
            "nullable": true
          },
          "ClientShortName": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "DeliveryDate": {
            "type": "string",
            "nullable": true
          },
          "EmailSent": {
            "type": "boolean",
            "nullable": true
          },
          "ReportDate": {
            "type": "string",
            "nullable": true
          },
          "CurveDate": {
            "type": "string",
            "nullable": true
          },
          "FileName": {
            "type": "string",
            "nullable": true
          },
          "NoContactExists": {
            "type": "boolean"
          },
          "Recipients": {
            "type": "string",
            "nullable": true
          },
          "ShowSent": {
            "type": "boolean"
          },
          "HAGLAutoSendString": {
            "type": "string",
            "nullable": true
          },
          "BalanceCheck": {
            "type": "string",
            "nullable": true
          },
          "CreatedOn": {
            "type": "string",
            "nullable": true
          },
          "StartSendDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "EndSendDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntitySwap": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntitySwapEmbeddedOption": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntitySwaption": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "SwaptionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsSwaptionType"
              }
            ]
          },
          "StartDate": {
            "type": "string",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "BuySell": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsBuySell"
              }
            ]
          },
          "PayerReceiver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPayReceive"
              }
            ],
            "nullable": true
          },
          "PaymentFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPaymentFrequency"
              }
            ],
            "nullable": true
          },
          "NotificationDays": {
            "type": "integer",
            "format": "int32"
          },
          "NotificationDaysType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsNoticeDaysType"
              }
            ]
          },
          "NotificationCalendar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsPaymentHolidays"
              }
            ]
          },
          "StartDateDescriptor": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "EndDateDescriptor": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityTrade": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "DpiClientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "CounterpartyId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "BankEntityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "B2BTradeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "PortfolioId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "MarkupDenom": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsMarkupDenom"
              }
            ]
          },
          "Markup": {
            "type": "number",
            "format": "double"
          },
          "DealerMid": {
            "type": "number",
            "format": "double"
          },
          "DealerOffer": {
            "type": "number",
            "format": "double"
          },
          "DpiMarkup": {
            "type": "number",
            "format": "double"
          },
          "SecurityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsSecurityType"
              }
            ]
          },
          "DealerDV01": {
            "type": "number",
            "format": "double"
          },
          "ManualMark": {
            "type": "boolean"
          },
          "ManualReset": {
            "type": "boolean"
          },
          "Exchange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsExchange"
              }
            ]
          },
          "DealerSpread": {
            "type": "number",
            "format": "double"
          },
          "TerminationDealerSpread": {
            "type": "number",
            "format": "double"
          },
          "TerminationDealerMid": {
            "type": "number",
            "format": "double"
          },
          "TerminationDealerDV01": {
            "type": "number",
            "format": "double"
          },
          "TerminationDealerOffer": {
            "type": "number",
            "format": "double"
          },
          "TradeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "TradeIdRef": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "CtptyTradeId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsTradeStatus"
              }
            ]
          },
          "UsiPrefix": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "UsiValue": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "DealerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Obligor": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "OffsettingTrade": {
            "type": "boolean"
          },
          "ExactMatch": {
            "type": "boolean"
          },
          "Cleared": {
            "type": "boolean"
          },
          "CreditSpread": {
            "type": "number",
            "format": "double"
          },
          "RecoveryRate": {
            "type": "number",
            "format": "double"
          },
          "CVA": {
            "type": "number",
            "format": "double"
          },
          "CustomCashFlows": {
            "type": "boolean"
          },
          "ApprovedExposure": {
            "type": "number",
            "format": "double"
          },
          "TerminationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "TerminationB2BTradeIdTxt": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "TerminationDealerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "IsLocked": {
            "type": "boolean"
          },
          "TermsChanged": {
            "type": "boolean"
          },
          "Execution": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "AddedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "AddedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "UpdatedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "GenerateFuturePaymentsOnly": {
            "type": "boolean"
          },
          "UpdatePaymentStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DeleteExistingResetNotices": {
            "type": "boolean"
          },
          "GenerateCurrentPaymentNotice": {
            "type": "boolean"
          },
          "BankEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityBankEntity"
              }
            ],
            "nullable": true
          },
          "DpiClient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityClient"
              }
            ],
            "nullable": true
          },
          "Counterparty": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCounterparty"
              }
            ],
            "nullable": true
          },
          "DealerCounterparty": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCounterparty"
              }
            ],
            "nullable": true
          },
          "TerminationDealerCounterparty": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityCounterparty"
              }
            ],
            "nullable": true
          },
          "Products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
            },
            "nullable": true
          },
          "SubTrades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityTrade"
            },
            "nullable": true
          },
          "B2BTrade": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityTrade"
              }
            ],
            "nullable": true
          },
          "AddedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "UpdatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityUser"
              }
            ],
            "nullable": true
          },
          "Product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityUser": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "TimeZone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "UserGuid": {
            "type": "string",
            "format": "uuid"
          },
          "LoginName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Password": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "PasswordSetTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "LastLogin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "JobTitle": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ReadOnlyRole": {
            "type": "boolean"
          },
          "IsAccountLocked": {
            "type": "boolean"
          },
          "FailedLoginAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "IsPasswordTemporary": {
            "type": "boolean"
          },
          "UseOldAuthentication": {
            "type": "boolean"
          },
          "PasswordChangeRequired": {
            "type": "boolean"
          },
          "EKeyString": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "EIVString": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "NeedsActivation": {
            "type": "boolean"
          },
          "AssignAllBEs": {
            "type": "boolean",
            "nullable": true
          },
          "AddedAmortizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityAmortization"
            },
            "nullable": true
          },
          "UpdatedAmortizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityAmortization"
            },
            "nullable": true
          },
          "AddedCashFlows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityCashFlow"
            },
            "nullable": true
          },
          "UpdatedCashFlows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityCashFlow"
            },
            "nullable": true
          },
          "AddedContactRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityContactRole"
            },
            "nullable": true
          },
          "UpdatedContactRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityContactRole"
            },
            "nullable": true
          },
          "AddedCurrencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityCurrency"
            },
            "nullable": true
          },
          "UpdatedCurrencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityCurrency"
            },
            "nullable": true
          },
          "AddedEmailAttachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityEmailAttachment"
            },
            "nullable": true
          },
          "UpdatedEmailAttachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityEmailAttachment"
            },
            "nullable": true
          },
          "AddedEmails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityEmail"
            },
            "nullable": true
          },
          "UpdatedEmails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityEmail"
            },
            "nullable": true
          },
          "AddedExerciseScheduleItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityExerciseScheduleItem"
            },
            "nullable": true
          },
          "UpdatedExerciseScheduleItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityExerciseScheduleItem"
            },
            "nullable": true
          },
          "AddedFees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityFee"
            },
            "nullable": true
          },
          "UpdatedFees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityFee"
            },
            "nullable": true
          },
          "AddedFeeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityFeeType"
            },
            "nullable": true
          },
          "UpdatedFeeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityFeeType"
            },
            "nullable": true
          },
          "AddedGLAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLAccount"
            },
            "nullable": true
          },
          "UpdatedGLAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLAccount"
            },
            "nullable": true
          },
          "AddedLegalEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityLegalEntity"
            },
            "nullable": true
          },
          "UpdatedLegalEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityLegalEntity"
            },
            "nullable": true
          },
          "AddedLegalEntityHistoricalValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityLegalEntityHistoricalValue"
            },
            "nullable": true
          },
          "UpdatedLegalEntityHistoricalValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityLegalEntityHistoricalValue"
            },
            "nullable": true
          },
          "AddedNotifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityNotification"
            },
            "nullable": true
          },
          "UpdatedNotifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityNotification"
            },
            "nullable": true
          },
          "Notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityNotification"
            },
            "nullable": true
          },
          "AddedPersons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityPerson"
            },
            "nullable": true
          },
          "UpdatedPersons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityPerson"
            },
            "nullable": true
          },
          "Person": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityPerson"
              }
            ],
            "nullable": true
          },
          "AddedProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
            },
            "nullable": true
          },
          "UpdatedProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityProduct"
            },
            "nullable": true
          },
          "AddedTrades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityTrade"
            },
            "nullable": true
          },
          "UpdatedTrades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityTrade"
            },
            "nullable": true
          },
          "CreatedHedgeRegressionBatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRegressionBatch"
            },
            "nullable": true
          },
          "CreatedHedgeRelationshipActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityHedgeRelationshipActivity"
            },
            "nullable": true
          },
          "CreatedGLCostCenters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLCostCenter"
            },
            "nullable": true
          },
          "UpdatedGLCostCenters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeEDGEHAEntityGLCostCenter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityValueObjectsDocumentTemplateKeywordsCheckResult": {
        "type": "object",
        "properties": {
          "HasEmptyKeyword": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityValueObjectsHATradeStatus": {
        "type": "object",
        "properties": {
          "ItemID": {
            "type": "string",
            "nullable": true
          },
          "TradeId": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "HrId": {
            "type": "integer",
            "format": "int64"
          },
          "Client": {
            "type": "string",
            "nullable": true
          },
          "Counterparty": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Notional": {
            "type": "number",
            "format": "double"
          },
          "CurrentNotional": {
            "type": "number",
            "format": "double"
          },
          "HedgeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumHRHedgeType"
              }
            ]
          },
          "HedgeTypeText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEDomainEntitiesEnumsTradeStatus"
              }
            ]
          },
          "StatusText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "TradeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "TradeDateText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EffectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "EffectiveDateText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MaturityDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "MaturityDateText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "TerminationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "TerminationDateText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "HedgedExposureExist": {
            "type": "boolean",
            "nullable": true
          },
          "ExposureStatus": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OptionPremium": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "TerminationFee": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeEDGEHAEntityValueObjectsOptionAmortizationDefaultValues": {
        "type": "object",
        "properties": {
          "GlAccountId": {
            "type": "integer",
            "format": "int64"
          },
          "GlContraAcctId": {
            "type": "integer",
            "format": "int64"
          },
          "GlAccountId2": {
            "type": "integer",
            "format": "int64"
          },
          "GlContraAcctId2": {
            "type": "integer",
            "format": "int64"
          },
          "IntrinsicValue": {
            "type": "number",
            "format": "double"
          },
          "IVAmortizationMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DerivativeEDGEHAEntityEnumAmortizationMethod"
              }
            ]
          },
          "TimeValue": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "DerivativeEdgeDocumentsServiceApiClientDocumentType": {
        "enum": [
          "Empty",
          "ResetNotice",
          "ISDAMaster",
          "MTMCounterparty",
          "MTMClient",
          "SwapCustomerAgreement",
          "ISDAChecklistRevisions",
          "OtherCounterparty",
          "SwapConfirmation",
          "CapFloorConfirmation",
          "CapFloorResetNotice",
          "TerminationNotice",
          "MTMClientExpanded",
          "InterestReport",
          "OtherOpportunity",
          "RevenueReport",
          "SwapEmbeddedOptionResetNotice",
          "SwapPresentation",
          "OpportunitiesPipelineReport",
          "PaymentReport",
          "ExposureReport",
          "SwapExposureReport",
          "MTMCounterpartyDetailed",
          "FFIECSchedules",
          "DealerResetNotice",
          "BaseScenarios",
          "ECPCheck",
          "CVAReport",
          "DealerTermSheet",
          "ISDAChecklist",
          "DPIAgreement",
          "CounterpartyConfirmation",
          "NonDisclosureAgreement",
          "DPISaaSAgreement",
          "CashflowPI",
          "CancelableConfirmation",
          "CancelableDealerTermSheet",
          "JournalEntryReport",
          "CollarResetNotice",
          "FootnoteSupportReport",
          "ASC820RollforwardReport",
          "Unprocessed_Confirms",
          "EndUserDTCCReport",
          "EndUserDTCCLetter",
          "ComplianceArticle",
          "HedgeMemorandum",
          "HedgeRegressionResult",
          "DebtTermSheet",
          "DebtOptionTermSheet",
          "CallableDebtTermSheet",
          "HAJournalEntryReport",
          "CollateralNoticeSheet",
          "FXSpotConfirmation",
          "FXFwdConfirmation",
          "FXWindowConfirmation",
          "FXNDFConfirmation",
          "WireReceipt",
          "SwapEmbeddedOptionConfirmation",
          "FCAStatement",
          "DPIBrandedISDAChecklist",
          "PricingSheet",
          "SandlerPricingSheet",
          "HAOptionTimeValueAmort",
          "DPIBrandedSCA",
          "ISDAMasterTemplate",
          "MarketData",
          "FXRegEConfirm",
          "CollarConfirmation",
          "CorridorConfirmation",
          "CollarTermSheet",
          "CorridorTermSheet",
          "CustomerTermSheet",
          "CapFloorTermSheet",
          "FXSwapConfirmation",
          "SwapEmbeddedOptionTermSheet",
          "PFEReport",
          "BaseScenariosReport",
          "SwaptionConfirmation",
          "SwaptionTermSheet",
          "HAAmortizatonSchedule",
          "SwapEmbeddedOptionPresentation",
          "FxAgreement",
          "CorridorResetNotice",
          "TradeValuationReport",
          "PFEChartExport",
          "PortfolioExposure",
          "SwaptionLiborFallback",
          "CollarLiborFallback",
          "CorridorLiborFallback",
          "SwapEmbeddedOptionLiborFallback",
          "SwapLiborFallback",
          "CapFloorLiborFallback",
          "CancelableLiborFallback",
          "TradeUploadFiles",
          "FXFwdHedgeMemorandum",
          "HAOptionSwapletAmortization",
          "JournalEntryReportWvccy",
          "FFIEC031Schedules",
          "FXFwdNetInvestmentHedgeMemorandum",
          "FXMTMCounterparty",
          "FXMTMCounterpartyDetailed",
          "HrSpecAndChecks",
          "InterestReportCurrency",
          "FFIEC051Schedules",
          "CommodityBasisSwapConfirmation",
          "CommodityCollarConfirmation",
          "CommodityCollarResetNotice",
          "CommodityCounterpartyMTM",
          "CommodityCounterpartyMTMDetail",
          "CommodityJournalEntryReport",
          "CommodityMTM",
          "CommodityPutCallConfirmation",
          "CommodityPutCallResetNotice",
          "CommodityResetNoticeSummary",
          "CommoditySwapConfirmation",
          "CommoditySwapResetNotice"
        ],
        "type": "string"
      },
      "MicrosoftAspNetCoreMvcProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "SystemCollectionsGenericKeyNotFoundException": {
        "type": "object",
        "properties": {
          "TargetSite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodBase"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "readOnly": true
          },
          "InnerException": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemException"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "HelpLink": {
            "type": "string",
            "nullable": true
          },
          "Source": {
            "type": "string",
            "nullable": true
          },
          "HResult": {
            "type": "integer",
            "format": "int32"
          },
          "StackTrace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemCollectionsGenericKeyValuePairOfSystemNullableOfSystemBooleanAndSystemStringArray": {
        "type": "object",
        "properties": {
          "Key": {
            "type": "boolean",
            "nullable": true
          },
          "Value": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemCollectionsGenericKeyValuePairOfSystemStringAndSystemCollectionsGenericIEnumerableOfSystemString": {
        "type": "object",
        "properties": {
          "Key": {
            "type": "string",
            "nullable": true
          },
          "Value": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemException": {
        "type": "object",
        "properties": {
          "TargetSite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodBase"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "readOnly": true
          },
          "InnerException": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemException"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "HelpLink": {
            "type": "string",
            "nullable": true
          },
          "Source": {
            "type": "string",
            "nullable": true
          },
          "HResult": {
            "type": "integer",
            "format": "int32"
          },
          "StackTrace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemIntPtr": {
        "type": "object",
        "additionalProperties": false
      },
      "SystemModuleHandle": {
        "type": "object",
        "properties": {
          "MDStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemNetHttpHttpContent": {
        "type": "object",
        "properties": {
          "Headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemCollectionsGenericKeyValuePairOfSystemStringAndSystemCollectionsGenericIEnumerableOfSystemString"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemNetHttpHttpMethod": {
        "type": "object",
        "properties": {
          "Method": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemNetHttpHttpRequestMessage": {
        "type": "object",
        "properties": {
          "Version": {
            "type": "string",
            "nullable": true
          },
          "VersionPolicy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemNetHttpHttpVersionPolicy"
              }
            ]
          },
          "Content": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemNetHttpHttpContent"
              }
            ],
            "nullable": true
          },
          "Method": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemNetHttpHttpMethod"
              }
            ],
            "nullable": true
          },
          "RequestUri": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "Headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemCollectionsGenericKeyValuePairOfSystemStringAndSystemCollectionsGenericIEnumerableOfSystemString"
            },
            "nullable": true,
            "readOnly": true
          },
          "Properties": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "Options": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemNetHttpHttpResponseMessage": {
        "type": "object",
        "properties": {
          "Version": {
            "type": "string",
            "nullable": true
          },
          "Content": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemNetHttpHttpContent"
              }
            ],
            "nullable": true
          },
          "StatusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemNetHttpStatusCode"
              }
            ]
          },
          "ReasonPhrase": {
            "type": "string",
            "nullable": true
          },
          "Headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemCollectionsGenericKeyValuePairOfSystemStringAndSystemCollectionsGenericIEnumerableOfSystemString"
            },
            "nullable": true,
            "readOnly": true
          },
          "TrailingHeaders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemCollectionsGenericKeyValuePairOfSystemStringAndSystemCollectionsGenericIEnumerableOfSystemString"
            },
            "nullable": true,
            "readOnly": true
          },
          "RequestMessage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemNetHttpHttpRequestMessage"
              }
            ],
            "nullable": true
          },
          "IsSuccessStatusCode": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemNetHttpHttpVersionPolicy": {
        "enum": [
          "RequestVersionOrLower",
          "RequestVersionOrHigher",
          "RequestVersionExact"
        ],
        "type": "string"
      },
      "SystemNetHttpStatusCode": {
        "enum": [
          "Continue",
          "SwitchingProtocols",
          "Processing",
          "EarlyHints",
          "OK",
          "Created",
          "Accepted",
          "NonAuthoritativeInformation",
          "NoContent",
          "ResetContent",
          "PartialContent",
          "MultiStatus",
          "AlreadyReported",
          "IMUsed",
          "MultipleChoices",
          "MovedPermanently",
          "Found",
          "SeeOther",
          "NotModified",
          "UseProxy",
          "Unused",
          "TemporaryRedirect",
          "PermanentRedirect",
          "BadRequest",
          "Unauthorized",
          "PaymentRequired",
          "Forbidden",
          "NotFound",
          "MethodNotAllowed",
          "NotAcceptable",
          "ProxyAuthenticationRequired",
          "RequestTimeout",
          "Conflict",
          "Gone",
          "LengthRequired",
          "PreconditionFailed",
          "RequestEntityTooLarge",
          "RequestUriTooLong",
          "UnsupportedMediaType",
          "RequestedRangeNotSatisfiable",
          "ExpectationFailed",
          "MisdirectedRequest",
          "UnprocessableEntity",
          "Locked",
          "FailedDependency",
          "UpgradeRequired",
          "PreconditionRequired",
          "TooManyRequests",
          "RequestHeaderFieldsTooLarge",
          "UnavailableForLegalReasons",
          "InternalServerError",
          "NotImplemented",
          "BadGateway",
          "ServiceUnavailable",
          "GatewayTimeout",
          "HttpVersionNotSupported",
          "VariantAlsoNegotiates",
          "InsufficientStorage",
          "LoopDetected",
          "NotExtended",
          "NetworkAuthenticationRequired"
        ],
        "type": "string"
      },
      "SystemNotSupportedException": {
        "type": "object",
        "properties": {
          "TargetSite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodBase"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "readOnly": true
          },
          "InnerException": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemException"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "HelpLink": {
            "type": "string",
            "nullable": true
          },
          "Source": {
            "type": "string",
            "nullable": true
          },
          "HResult": {
            "type": "integer",
            "format": "int32"
          },
          "StackTrace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemReflectionAssembly": {
        "type": "object",
        "properties": {
          "DefinedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionTypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "ExportedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemType"
            },
            "nullable": true,
            "readOnly": true
          },
          "CodeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "EntryPoint": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "FullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ImageRuntimeVersion": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "IsDynamic": {
            "type": "boolean",
            "readOnly": true
          },
          "Location": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ReflectionOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFullyTrusted": {
            "type": "boolean",
            "readOnly": true
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionCustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "EscapedCodeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "ManifestModule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionModule"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionModule"
            },
            "nullable": true,
            "readOnly": true
          },
          "GlobalAssemblyCache": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "HostContext": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "SecurityRuleSet": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemSecuritySecurityRuleSet"
              }
            ],
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemReflectionCallingConventions": {
        "enum": [
          "Standard",
          "VarArgs",
          "Any",
          "HasThis",
          "ExplicitThis"
        ],
        "type": "string"
      },
      "SystemReflectionConstructorInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "DeclaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "ReflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionModule"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionCustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "IsCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodAttributes"
              }
            ],
            "readOnly": true
          },
          "MethodImplementationFlags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodImplAttributes"
              }
            ],
            "readOnly": true
          },
          "CallingConvention": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionCallingConventions"
              }
            ],
            "readOnly": true
          },
          "IsAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "IsConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "IsHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "IsStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "ContainsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "MethodHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemRuntimeMethodHandle"
              }
            ],
            "readOnly": true
          },
          "IsSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMemberTypes"
              }
            ],
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemReflectionCustomAttributeData": {
        "type": "object",
        "properties": {
          "AttributeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Constructor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionConstructorInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "ConstructorArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionCustomAttributeTypedArgument"
            },
            "nullable": true,
            "readOnly": true
          },
          "NamedArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionCustomAttributeNamedArgument"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemReflectionCustomAttributeNamedArgument": {
        "type": "object",
        "properties": {
          "MemberInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMemberInfo"
              }
            ],
            "nullable": true
          },
          "TypedValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionCustomAttributeTypedArgument"
              }
            ],
            "readOnly": true
          },
          "MemberName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "IsField": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemReflectionCustomAttributeTypedArgument": {
        "type": "object",
        "properties": {
          "ArgumentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true
          },
          "Value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemReflectionEventAttributes": {
        "enum": [
          "None",
          "SpecialName",
          "RTSpecialName"
        ],
        "type": "string"
      },
      "SystemReflectionEventInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "DeclaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "ReflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionModule"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionCustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "IsCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMemberTypes"
              }
            ],
            "readOnly": true
          },
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionEventAttributes"
              }
            ],
            "readOnly": true
          },
          "IsSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "AddMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "RemoveMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "RaiseMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "IsMulticast": {
            "type": "boolean",
            "readOnly": true
          },
          "EventHandlerType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemReflectionFieldAttributes": {
        "enum": [
          "PrivateScope",
          "Private",
          "FamANDAssem",
          "Assembly",
          "Family",
          "FamORAssem",
          "Public",
          "FieldAccessMask",
          "Static",
          "InitOnly",
          "Literal",
          "NotSerialized",
          "HasFieldRVA",
          "SpecialName",
          "RTSpecialName",
          "HasFieldMarshal",
          "PinvokeImpl",
          "HasDefault",
          "ReservedMask"
        ],
        "type": "string"
      },
      "SystemReflectionFieldInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "DeclaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "ReflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionModule"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionCustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "IsCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMemberTypes"
              }
            ],
            "readOnly": true
          },
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionFieldAttributes"
              }
            ],
            "readOnly": true
          },
          "FieldType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "IsInitOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsLiteral": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNotSerialized": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "IsPinvokeImpl": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "IsStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "FieldHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemRuntimeFieldHandle"
              }
            ],
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemReflectionGenericParameterAttributes": {
        "enum": [
          "None",
          "Covariant",
          "Contravariant",
          "VarianceMask",
          "ReferenceTypeConstraint",
          "NotNullableValueTypeConstraint",
          "DefaultConstructorConstraint",
          "SpecialConstraintMask"
        ],
        "type": "string"
      },
      "SystemReflectionICustomAttributeProvider": {
        "type": "object",
        "additionalProperties": false
      },
      "SystemReflectionMemberInfo": {
        "type": "object",
        "properties": {
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMemberTypes"
              }
            ],
            "readOnly": true
          },
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "DeclaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "ReflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionModule"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionCustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "IsCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemReflectionMemberTypes": {
        "enum": [
          "Constructor",
          "Event",
          "Field",
          "Method",
          "Property",
          "TypeInfo",
          "Custom",
          "NestedType",
          "All"
        ],
        "type": "string"
      },
      "SystemReflectionMethodAttributes": {
        "enum": [
          "PrivateScope",
          "Private",
          "FamANDAssem",
          "Assembly",
          "Family",
          "FamORAssem",
          "Public",
          "MemberAccessMask",
          "UnmanagedExport",
          "Static",
          "Final",
          "Virtual",
          "HideBySig",
          "NewSlot",
          "CheckAccessOnOverride",
          "Abstract",
          "SpecialName",
          "RTSpecialName",
          "PinvokeImpl",
          "HasSecurity",
          "RequireSecObject",
          "ReservedMask"
        ],
        "type": "string"
      },
      "SystemReflectionMethodBase": {
        "type": "object",
        "properties": {
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMemberTypes"
              }
            ],
            "readOnly": true
          },
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "DeclaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "ReflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionModule"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionCustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "IsCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodAttributes"
              }
            ],
            "readOnly": true
          },
          "MethodImplementationFlags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodImplAttributes"
              }
            ],
            "readOnly": true
          },
          "CallingConvention": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionCallingConventions"
              }
            ],
            "readOnly": true
          },
          "IsAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "IsConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "IsHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "IsStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "ContainsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "MethodHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemRuntimeMethodHandle"
              }
            ],
            "readOnly": true
          },
          "IsSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemReflectionMethodImplAttributes": {
        "enum": [
          "IL",
          "Native",
          "OPTIL",
          "CodeTypeMask",
          "ManagedMask",
          "NoInlining",
          "ForwardRef",
          "Synchronized",
          "NoOptimization",
          "PreserveSig",
          "AggressiveInlining",
          "AggressiveOptimization",
          "InternalCall",
          "MaxMethodImplVal"
        ],
        "type": "string"
      },
      "SystemReflectionMethodInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "DeclaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "ReflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionModule"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionCustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "IsCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodAttributes"
              }
            ],
            "readOnly": true
          },
          "MethodImplementationFlags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodImplAttributes"
              }
            ],
            "readOnly": true
          },
          "CallingConvention": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionCallingConventions"
              }
            ],
            "readOnly": true
          },
          "IsAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "IsConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "IsHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "IsStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "ContainsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "MethodHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemRuntimeMethodHandle"
              }
            ],
            "readOnly": true
          },
          "IsSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMemberTypes"
              }
            ],
            "readOnly": true
          },
          "ReturnParameter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionParameterInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "ReturnType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "ReturnTypeCustomAttributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionICustomAttributeProvider"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemReflectionModule": {
        "type": "object",
        "properties": {
          "Assembly": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionAssembly"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "FullyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MDStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "ModuleVersionId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "ScopeName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ModuleHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemModuleHandle"
              }
            ],
            "readOnly": true
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionCustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemReflectionParameterAttributes": {
        "enum": [
          "None",
          "In",
          "Out",
          "Lcid",
          "Retval",
          "Optional",
          "HasDefault",
          "HasFieldMarshal",
          "Reserved3",
          "Reserved4",
          "ReservedMask"
        ],
        "type": "string"
      },
      "SystemReflectionParameterInfo": {
        "type": "object",
        "properties": {
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionParameterAttributes"
              }
            ],
            "readOnly": true
          },
          "Member": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMemberInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ParameterType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Position": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "IsIn": {
            "type": "boolean",
            "readOnly": true
          },
          "IsLcid": {
            "type": "boolean",
            "readOnly": true
          },
          "IsOptional": {
            "type": "boolean",
            "readOnly": true
          },
          "IsOut": {
            "type": "boolean",
            "readOnly": true
          },
          "IsRetval": {
            "type": "boolean",
            "readOnly": true
          },
          "DefaultValue": {
            "nullable": true,
            "readOnly": true
          },
          "RawDefaultValue": {
            "nullable": true,
            "readOnly": true
          },
          "HasDefaultValue": {
            "type": "boolean",
            "readOnly": true
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionCustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemReflectionPropertyAttributes": {
        "enum": [
          "None",
          "SpecialName",
          "RTSpecialName",
          "HasDefault",
          "Reserved2",
          "Reserved3",
          "Reserved4",
          "ReservedMask"
        ],
        "type": "string"
      },
      "SystemReflectionPropertyInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "DeclaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "ReflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionModule"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionCustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "IsCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMemberTypes"
              }
            ],
            "readOnly": true
          },
          "PropertyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionPropertyAttributes"
              }
            ],
            "readOnly": true
          },
          "IsSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "CanRead": {
            "type": "boolean",
            "readOnly": true
          },
          "CanWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "GetMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "SetMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemReflectionTypeAttributes": {
        "enum": [
          "NotPublic",
          "Public",
          "NestedPublic",
          "NestedPrivate",
          "NestedFamily",
          "NestedAssembly",
          "NestedFamANDAssem",
          "VisibilityMask",
          "SequentialLayout",
          "ExplicitLayout",
          "LayoutMask",
          "Interface",
          "Abstract",
          "Sealed",
          "SpecialName",
          "RTSpecialName",
          "Import",
          "Serializable",
          "WindowsRuntime",
          "UnicodeClass",
          "AutoClass",
          "StringFormatMask",
          "HasSecurity",
          "ReservedMask",
          "BeforeFieldInit",
          "CustomFormatMask"
        ],
        "type": "string"
      },
      "SystemReflectionTypeInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionCustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "IsCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "IsInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMemberTypes"
              }
            ],
            "readOnly": true
          },
          "Namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "AssemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "FullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Assembly": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionAssembly"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionModule"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "IsNested": {
            "type": "boolean",
            "readOnly": true
          },
          "DeclaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "DeclaringMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodBase"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "ReflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "UnderlyingSystemType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "IsTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "IsArray": {
            "type": "boolean",
            "readOnly": true
          },
          "IsByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "IsConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "IsVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "IsByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "IsUnmanagedFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "HasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "GenericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemType"
            },
            "nullable": true,
            "readOnly": true
          },
          "GenericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "GenericParameterAttributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionGenericParameterAttributes"
              }
            ],
            "readOnly": true
          },
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionTypeAttributes"
              }
            ],
            "readOnly": true
          },
          "IsAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "IsImport": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "IsClass": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "IsExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "IsLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "IsUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "IsCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "IsContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "IsEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "IsMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "IsValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "StructLayoutAttribute": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemRuntimeInteropServicesStructLayoutAttribute"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "TypeInitializer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionConstructorInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "TypeHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemRuntimeTypeHandle"
              }
            ],
            "readOnly": true
          },
          "GUID": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "BaseType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "IsSerializable": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "ContainsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "IsVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "GenericTypeParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemType"
            },
            "nullable": true,
            "readOnly": true
          },
          "DeclaredConstructors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionConstructorInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "DeclaredEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionEventInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "DeclaredFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionFieldInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "DeclaredMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionMemberInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "DeclaredMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionMethodInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "DeclaredNestedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionTypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "DeclaredProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionPropertyInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "ImplementedInterfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemType"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemRuntimeFieldHandle": {
        "type": "object",
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemIntPtr"
              }
            ],
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemRuntimeInteropServicesLayoutKind": {
        "enum": [
          "Sequential",
          "Explicit",
          "Auto"
        ],
        "type": "string"
      },
      "SystemRuntimeInteropServicesStructLayoutAttribute": {
        "type": "object",
        "properties": {
          "TypeId": {
            "nullable": true,
            "readOnly": true
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemRuntimeInteropServicesLayoutKind"
              }
            ],
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemRuntimeMethodHandle": {
        "type": "object",
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemIntPtr"
              }
            ],
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemRuntimeTypeHandle": {
        "type": "object",
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemIntPtr"
              }
            ],
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemSecuritySecurityRuleSet": {
        "enum": [
          "None",
          "Level1",
          "Level2"
        ],
        "type": "string"
      },
      "SystemType": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemReflectionCustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "IsCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "IsInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMemberTypes"
              }
            ],
            "readOnly": true
          },
          "Namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "AssemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "FullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Assembly": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionAssembly"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "Module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionModule"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "IsNested": {
            "type": "boolean",
            "readOnly": true
          },
          "DeclaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "DeclaringMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionMethodBase"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "ReflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "UnderlyingSystemType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "IsTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "IsArray": {
            "type": "boolean",
            "readOnly": true
          },
          "IsByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "IsConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "IsVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "IsByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "IsUnmanagedFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "HasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "GenericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemType"
            },
            "nullable": true,
            "readOnly": true
          },
          "GenericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "GenericParameterAttributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionGenericParameterAttributes"
              }
            ],
            "readOnly": true
          },
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionTypeAttributes"
              }
            ],
            "readOnly": true
          },
          "IsAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "IsImport": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "IsClass": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "IsExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "IsLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "IsUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "IsCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "IsContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "IsEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "IsMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "IsValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "StructLayoutAttribute": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemRuntimeInteropServicesStructLayoutAttribute"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "TypeInitializer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemReflectionConstructorInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "TypeHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemRuntimeTypeHandle"
              }
            ],
            "readOnly": true
          },
          "GUID": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "BaseType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "IsSerializable": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "ContainsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "IsVisible": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter your JWT token below:",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}